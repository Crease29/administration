{"version":3,"sources":["webpack:///./src/core/service/util.service.js","webpack:///./src/core/common.js","webpack:///./src/core/common.js?62aa","webpack:///./src/core/factory/module.factory.js","webpack:///./src/core/factory/component.factory.js","webpack:///./src/core/factory/entity.factory.js","webpack:///./src/core/factory/state.factory.js","webpack:///./src/core/factory/mixin.factory.js","webpack:///./src/core/application.js","webpack:///./src/core/factory/template.factory.js","webpack:///fs (ignored)"],"names":["merge","formDataToObject","warn","currency","date","deepCopyObject","getObjectChangeSet","createId","isObject","isPlainObject","isEmpty","isRegExp","isArray","isFunction","isDate","isString","capitalizeString","debounce","target","source","forEach","key","Object","formData","reduce","result","item","name","message","unshift","console","apply","val","sign","opts","style","language","toLocaleString","locale","object","Array","obj","toString","length","exp","array","func","dateObject","Date","prototype","call","debounceTimeout","callback","debounceTime","window","clearTimeout","setTimeout","copyObject","JSON","parse","baseObject","compareObject","valueOf","b","c","acc","hasOwnProperty","arrayDiff","getArrayChangeSet","diff","id","baseArray","compareArray","filter","indexOf","value","index","diffObject","push","find","compareItem","str","charAt","toUpperCase","slice","module","exports","global","require","getModuleRoutes","registerModule","getModuleRegistry","modules","moduleId","moduleRoutes","type","utils","has","get","splitModuleId","split","routes","routeKey","route","join","coreRoute","path","componentList","components","componentKey","component","default","alias","set","size","moduleDefinition","manifest","bind","navigation","register","extend","override","build","getComponentTemplate","getComponentRegistry","getOverrideRegistry","componentRegistry","overrideRegistry","componentName","componentConfiguration","config","template","TemplateFactory","registerComponentTemplate","extendComponentName","extendComponentTemplate","extends","overrideIndex","registerTemplateOverride","overrides","splice","getRenderedTemplate","skipTemplate","extendComp","overrideComp","comp","addEntityDefinition","getEntityDefinition","getDefinitionRegistry","getRawEntityObject","getRequiredProperties","entityDefinitions","entityName","entityDefinition","includeObjectAssociations","definition","entity","properties","propertyName","property","required","registerStateModule","getStateModule","getStateRegistry","stateRegistry","getByName","getMixinRegistry","mixinRegistry","mixinName","mixin","ApplicationBootstrapper","container","noop","$container","service","containerName","containerNames","list","factory","args","_addMiddleware","_addDecorator","initializer","provider","context","addInitializer","middlewareFn","middleware","decorator","registerContext","createApplicationRoot","applicationRoot","getContainer","router","view","then","createInstance","getTemplateOverrides","getTemplateRegistry","findCustomTemplate","findCustomOverride","clearTwigCache","getTwigCache","disableTwigCache","templateRegistry","Twig","TwigCore","token","definitions","extendTag","regex","next","open","chain","output","placeholders","parent","getRegistry","Templates","registry","clearRegistry","componentTemplate","templateConfig","data","baseTemplate","twig","error","templateExtension","extendTemplate","tokens","templateOverride","parentPlaceholder","blocks","render","templateBlocks","blockName","replace","element","document","querySelector","innerHTML","cache"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["/**\n * @module core/service/utils\n */\n\nimport uuidv4 from 'uuid/v4';\n\nexport default {\n    merge,\n    formDataToObject,\n    warn,\n    currency,\n    date,\n    deepCopyObject,\n    getObjectChangeSet,\n    createId: uuidv4,\n    isObject,\n    isPlainObject,\n    isEmpty,\n    isRegExp,\n    isArray,\n    isFunction,\n    isDate,\n    isString,\n    capitalizeString,\n    debounce\n};\n\n// Todo: This has an issue when you want to copy into a new object\nfunction merge(target, source) {\n    Object.keys(source).forEach((key) => {\n        if (source[key] instanceof Object) {\n            if (!target[key]) {\n                Object.assign(target, { [key]: {} });\n            }\n            Object.assign(source[key], merge(target[key], source[key]));\n        }\n    });\n\n    Object.assign(target || {}, source);\n    return target;\n}\n\n/**\n * Transforms FormData to a plain & simple object which can be used with the HTTP client for example.\n *\n * @param {FormData} formData\n * @returns {Object}\n */\nfunction formDataToObject(formData) {\n    return Array.from(formData).reduce((result, item) => {\n        result[item[0]] = item[1];\n        return result;\n    }, {});\n}\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n *\n * @param {String} name\n * @param {String|Object|Array} message\n */\nfunction warn(name = 'Core', ...message) {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        console.warn.apply(this, message);\n    }\n}\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @returns {string} Formatted string\n */\nfunction currency(val, sign) {\n    const opts = {\n        style: 'currency',\n        currency: sign || 'EUR'\n    };\n    let language = 'de-DE';\n    if (opts.currency === 'USD') {\n        language = 'en-US';\n    }\n    return val.toLocaleString(language, opts);\n}\n\n/**\n * Formats a Date object to a localized string\n *\n * @param {Date} val\n * @param {String} [locale='de-DE']\n * @returns {string}\n */\nfunction date(val, locale = 'de-DE') {\n    return val.toLocaleString(locale);\n}\n\n/**\n * Checks if the provided argument is an object\n *\n * @param {any} object Object to check\n * @returns {boolean}\n */\nfunction isObject(object) {\n    return (object instanceof Object && !(object instanceof Array));\n}\n\n/**\n * Checks if the provided argument is a plain object\n *\n * @param {any} obj\n * @returns {boolean}\n */\nfunction isPlainObject(obj) {\n    return obj.toString() === '[object Object]';\n}\n\n/**\n * Checks if the provided argument is an empty object\n *\n * @param {Object} object\n * @returns {boolean}\n */\nfunction isEmpty(object) {\n    return Object.keys(object).length === 0;\n}\n\n/**\n * Checks if the provided argument is a regular expression\n *\n * @param {any} exp\n * @returns {boolean}\n */\nfunction isRegExp(exp) {\n    return exp.toString() === '[object RegExp]';\n}\n\n/**\n * Checks if the provided argument is an array\n * @param {any} array\n * @returns {boolean}\n */\nfunction isArray(array) {\n    return Array.isArray(array);\n}\n\n/**\n *\n * @param func\n * @returns {boolean}\n */\nfunction isFunction(func) {\n    return func !== null && typeof func === 'function';\n}\n\n/**\n * Checks if the provided argument is a date object\n *\n * @param {any} dateObject\n * @returns {boolean}\n */\nfunction isDate(dateObject) {\n    return dateObject instanceof Date;\n}\n\n/**\n * Checks if the provided argument is a string\n *\n * @param {String|Number|Object|Array} obj\n * @returns {boolean}\n */\nfunction isString(obj) {\n    return (Object.prototype.toString.call(obj) === '[object String]');\n}\n\nlet debounceTimeout;\n\n/**\n * Debounces a function call.\n *\n * @param {Function} callback\n * @param {Number} debounceTime\n * @returns {Number}\n */\nfunction debounce(callback, debounceTime) {\n    window.clearTimeout(debounceTimeout);\n\n    debounceTimeout = window.setTimeout(callback, debounceTime);\n    return debounceTimeout;\n}\n\n/**\n * Deep copy an object\n *\n * @param {Object} copyObject\n * @returns {Object}\n */\nfunction deepCopyObject(copyObject = {}) {\n    return JSON.parse(JSON.stringify(copyObject));\n}\n\nfunction getObjectChangeSet(baseObject, compareObject) {\n    if (baseObject === compareObject) {\n        return {};\n    }\n\n    if (!isObject(baseObject) || !isObject(compareObject)) {\n        return compareObject;\n    }\n\n    if (isDate(baseObject) || isDate(compareObject)) {\n        if (baseObject.valueOf() === compareObject.valueOf()) {\n            return {};\n        }\n\n        return compareObject;\n    }\n\n    const b = { ...baseObject };\n    const c = { ...compareObject };\n\n    return Object.keys(c).reduce((acc, key) => {\n        if (b.hasOwnProperty(key)) {\n            if (isArray(b[key])) {\n                const arrayDiff = getArrayChangeSet(b[key], c[key]);\n\n                if (isArray(arrayDiff) && arrayDiff.length === 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: arrayDiff };\n            }\n\n            const diff = getObjectChangeSet(b[key], c[key]);\n\n            if (isObject(diff) && isEmpty(diff) && !isDate(diff)) {\n                return acc;\n            }\n\n            if (isObject(b[key]) && b[key].id) {\n                diff.id = b[key].id;\n            }\n\n            return { ...acc, [key]: diff };\n        }\n\n        return acc;\n    }, {});\n}\n\nfunction getArrayChangeSet(baseArray, compareArray) {\n    if (baseArray === compareArray) {\n        return [];\n    }\n\n    if (!isArray(baseArray) || !isArray(compareArray)) {\n        return compareArray;\n    }\n\n    if (baseArray.length === 0) {\n        return compareArray;\n    }\n\n    if (compareArray.length === 0) {\n        return baseArray;\n    }\n\n    const b = [...baseArray];\n    const c = [...compareArray];\n\n    if (!isObject(b[0]) || !isObject(c[0])) {\n        return c.filter(value => b.indexOf(value) < 0);\n    }\n\n    const diff = [];\n\n    c.forEach((item, index) => {\n        if (!item.id) {\n            const diffObject = getObjectChangeSet(b[index], c[index]);\n\n            if (isObject(diffObject) && !isEmpty(diffObject)) {\n                diff.push(diffObject);\n            }\n        } else {\n            const compareObject = b.find((compareItem) => {\n                return item.id === compareItem.id;\n            });\n\n            if (!compareObject) {\n                diff.push(item);\n            } else {\n                const diffObject = getObjectChangeSet(compareObject, item);\n\n                if (isObject(diffObject) && !isEmpty(diffObject)) {\n                    diff.push({ ...diffObject, id: item.id });\n                }\n            }\n        }\n    });\n\n    return diff;\n}\n\n/**\n * Capitalizes the first character of the provided argument.\n *\n * @param {String} str String which should be transformed\n * @returns {String} Transformed string\n */\nfunction capitalizeString(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/service/util.service.js","module.exports = global[\"Shopware\"] = require(\"-!/Users/tberge/www/shopware-next/src/Administration/Resources/administration/node_modules/eslint-loader/index.js??ref--0!./common.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/common.js","/**\n * Shopware End Developer API\n * @module Shopware\n * @ignore\n */\n\n// <reference path=\"types/common.d.ts\" />\nconst Bottle = require('bottlejs');\n\nconst ModuleFactory = require('src/core/factory/module.factory').default;\nconst ComponentFactory = require('src/core/factory/component.factory').default;\nconst TemplateFactory = require('src/core/factory/template.factory').default;\nconst EntityFactory = require('src/core/factory/entity.factory').default;\nconst StateFactory = require('src/core/factory/state.factory').default;\nconst MixinFactory = require('src/core/factory/mixin.factory').default;\n\nconst utils = require('src/core/service/util.service').default;\nconst ApplicationBootstrapper = require('src/core/application').default;\n\nconst container = new Bottle({\n    strict: true\n});\n\nconst application = new ApplicationBootstrapper(container);\n\napplication\n    .addFactory('component', () => {\n        return ComponentFactory;\n    })\n    .addFactory('template', () => {\n        return TemplateFactory;\n    })\n    .addFactory('module', () => {\n        return ModuleFactory;\n    })\n    .addFactory('entity', () => {\n        return EntityFactory;\n    })\n    .addFactory('state', () => {\n        return StateFactory;\n    })\n    .addFactory('mixin', () => {\n        return MixinFactory;\n    });\n\nmodule.exports = {\n    /**\n     * @memberOf module:Shopware\n     * @type {Object}\n     */\n    Module: {\n        register: ModuleFactory.registerModule\n    },\n\n    /**\n     * @memberOf module:Shopware\n     * @type {Object}\n     */\n    Component: {\n        register: ComponentFactory.register,\n        extend: ComponentFactory.extend,\n        override: ComponentFactory.override,\n        build: ComponentFactory.build,\n        getTemplate: ComponentFactory.getComponentTemplate\n    },\n\n    /**\n     * @memberOf module:Shopware\n     * @type {Object}\n     */\n    Template: {\n        register: TemplateFactory.registerComponentTemplate,\n        extend: TemplateFactory.extendComponentTemplate,\n        override: TemplateFactory.registerTemplateOverride,\n        getRenderedTemplate: TemplateFactory.getRenderedTemplate,\n        find: TemplateFactory.findCustomTemplate,\n        findOverride: TemplateFactory.findCustomTemplate\n    },\n\n    /**\n     * @memberOf module:Shopware\n     * @type {Object}\n     */\n    Entity: {\n        addDefinition: EntityFactory.addEntityDefinition,\n        getDefinition: EntityFactory.getEntityDefinition,\n        getDefinitionRegistry: EntityFactory.getDefinitionRegistry,\n        getRawEntityObject: EntityFactory.getRawEntityObject,\n        getRequiredProperties: EntityFactory.getRequiredProperties\n    },\n\n    /**\n     * @memberOf module:Shopware\n     * @type {Object}\n     */\n    State: {\n        register: StateFactory.registerStateModule\n    },\n\n    /**\n     * @memberOf module:Shopware\n     * @type {Object}\n     */\n    Mixin: {\n        register: MixinFactory.register,\n        getByName: MixinFactory.getByName\n    },\n\n    /**\n     * @memberOf module:Shopware\n     * @type {module:core/service/utils}\n     */\n    Utils: utils,\n\n    /**\n     * @memberOf module:Shopware\n     * @type {module:core/application}\n     */\n    Application: application\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/common.js\n// module id = 224\n// module chunks = 2","/**\n * @module core/factory/module\n */\nimport utils from 'src/core/service/util.service';\n\nexport default {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry\n};\n\n/**\n * Registry for modules\n * @type {Map<any, any>}\n */\nconst modules = new Map();\n\n/**\n * Returns the registry of all modules mounted in the application.\n *\n * @returns {Map<any, any>} modules - Registry of all modules\n */\nfunction getModuleRegistry() {\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n *\n * @param {String} moduleId - The machine readable name which is used as an identifier for the module\n * @param {Object} module - Module definition - see manifest.js file\n * @returns {Boolean|Object} moduleDefinition - registered module definition\n */\nfunction registerModule(moduleId, module) {\n    const moduleRoutes = new Map();\n    const type = module.type || 'plugin';\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        utils.warn(\n            'ModuleFactory',\n            'Module has no unique identifier \"id\". Abort registration.',\n            module\n        );\n        return false;\n    }\n\n    if (modules.has(moduleId)) {\n        utils.warn(\n            'ModuleFactory',\n            `A module with the identifier \"${moduleId}\" is registered already. Abort registration.`,\n            modules.get(moduleId)\n        );\n\n        return false;\n    }\n\n    const splitModuleId = moduleId.split('-');\n\n    if (splitModuleId.length < 2) {\n        utils.warn(\n            'ModuleFactory',\n            'Module identifier does not match the necessary format \"[namespace]-[name]\":',\n            moduleId,\n            'Abort registration.'\n        );\n        return false;\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it isn't accessible in the application.\n    if (!Object.prototype.hasOwnProperty.call(module, 'routes')) {\n        utils.warn(\n            'ModuleFactory',\n            `Module \"${moduleId}\" has no configured routes. The module will not be accessible in the administration UI.`,\n            'Abort registration.',\n            module\n        );\n        return false;\n    }\n\n    // Sanitize the modules routes\n    Object.keys(module.routes).forEach((routeKey) => {\n        const route = module.routes[routeKey];\n\n        // Rewrite name and path\n        route.name = `${splitModuleId.join('.')}.${routeKey}`;\n\n        // Core routes don't need to be nested\n        if (!route.coreRoute) {\n            route.path = `/${splitModuleId.join('/')}/${route.path}`;\n        }\n        route.type = type;\n\n        const componentList = {};\n        if (route.components && Object.keys(route.components).length) {\n            Object.keys(route.components).forEach((componentKey) => {\n                const component = route.components[componentKey];\n\n                // Don't register a component without a name\n                if (!component.length || component.length <= 0) {\n                    utils.warn(\n                        'ModuleFactory',\n                        `The route definition of module \"${moduleId}\" is not valid. \n                        A route needs an assigned component name.`\n                    );\n                    return;\n                }\n\n                componentList[componentKey] = component;\n            });\n\n            route.components = componentList;\n        } else {\n            if (!route.component || !route.component.length) {\n                utils.warn(\n                    'ModuleFactory',\n                    `The route definition of module \"${moduleId}\" is not valid. \n                    A route needs an assigned component name.`\n                );\n                return;\n            }\n\n            route.components = {\n                default: route.component\n            };\n\n            // Remove the component cause we remapped it to the components object of the route object\n            delete route.component;\n        }\n\n        // Alias support\n        if (route.alias && route.alias.length > 0\n            && (!route.coreRoute)) {\n            route.alias = `/${splitModuleId.join('/')}/${route.alias}`;\n        }\n\n        moduleRoutes.set(route.name, route);\n    });\n\n    // When we're not having at least one valid route definition we're not registering the module\n    if (moduleRoutes.size === 0) {\n        utils.warn(\n            'ModuleFactory',\n            `The module \"${moduleId}\" was not registered cause it hasn't a valid route definition`,\n            'Abort registration.',\n            module.routes\n        );\n        return false;\n    }\n\n    const moduleDefinition = {\n        routes: moduleRoutes,\n        manifest: module,\n        type\n    };\n\n    // Add the navigation of the module to the module definition. We'll create a menu entry later on\n    if (Object.prototype.hasOwnProperty.bind(module, 'navigation') && module.navigation) {\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    modules.set(moduleId, moduleDefinition);\n\n    return moduleDefinition;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n *\n * @returns {Array} route definitions - see {@link https://router.vuejs.org/en/essentials/named-routes.html}\n */\nfunction getModuleRoutes() {\n    const moduleRoutes = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            moduleRoutes.push(route);\n        });\n    });\n\n    return moduleRoutes;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/module.factory.js","/**\n * @module core/factory/component\n */\nimport utils from 'src/core/service/util.service';\nimport TemplateFactory from 'src/core/factory/template.factory';\n\nexport default {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry,\n    getOverrideRegistry\n};\n\n/**\n * Registry which holds all components\n *\n * @type {Map<any, any>}\n */\nconst componentRegistry = new Map();\n\n/**\n * Registry which holds all component overrides\n *\n * @type {Map<any, any>}\n */\nconst overrideRegistry = new Map();\n\n/**\n * Returns the map with all registered components.\n *\n * @returns {Map}\n */\nfunction getComponentRegistry() {\n    return componentRegistry;\n}\n\n/**\n * Returns the map with all registered component overrides.\n *\n * @returns {Map}\n */\nfunction getOverrideRegistry() {\n    return overrideRegistry;\n}\n\n/**\n * Register a new component.\n *\n * @param {String} componentName\n * @param {Object} [componentConfiguration={}]\n * @returns {Boolean|Object}\n */\nfunction register(componentName, componentConfiguration = {}) {\n    const config = componentConfiguration;\n\n    if (!componentName || !componentName.length) {\n        utils.warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            config\n        );\n        return false;\n    }\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${config.name}\" needs a template to be functional.`,\n            'Please add a \"template\" property to your component definition',\n            config\n        );\n        return false;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n *\n * @param {String} componentName\n * @param {String} extendComponentName\n * @param {Object} componentConfiguration\n * @returns {Object} config\n */\nfunction extend(componentName, extendComponentName, componentConfiguration) {\n    const config = componentConfiguration;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config.name = componentName;\n    config.extends = extendComponentName;\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n *\n * @param componentName\n * @param componentConfiguration\n * @param overrideIndex\n * @returns {*}\n */\nfunction override(componentName, componentConfiguration, overrideIndex = null) {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, config);\n    } else {\n        overrides.push(config);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getComponentTemplate(componentName) {\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n/**\n * Returns the complete component including extension and overrides.\n *\n * @param componentName\n * @param skipTemplate\n * @returns {*}\n */\nfunction build(componentName, skipTemplate = false) {\n    if (!componentRegistry.has(componentName)) {\n        return false;\n    }\n\n    let config = Object.create(componentRegistry.get(componentName));\n\n    if (config.extends) {\n        const extendComp = build(config.extends, true);\n\n        if (extendComp) {\n            config.extends = extendComp;\n        } else {\n            delete config.extends;\n        }\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        const overrides = overrideRegistry.get(componentName);\n\n        overrides.forEach((overrideComp) => {\n            const comp = Object.create(overrideComp);\n\n            comp.extends = Object.create(config);\n            config = comp;\n        });\n    }\n\n    /**\n     * Get the final template result including all overrides or extensions.\n     */\n    if (skipTemplate !== true) {\n        config.template = getComponentTemplate(componentName);\n    } else {\n        delete config.template;\n    }\n\n    return config;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/component.factory.js","/**\n * @module core/factory/entity\n */\nimport utils from 'src/core/service/util.service';\n\nexport default {\n    addEntityDefinition,\n    getEntityDefinition,\n    getDefinitionRegistry,\n    getRawEntityObject,\n    getRequiredProperties\n};\n\n/**\n * Registry which holds all entity definitions.\n *\n * @type {Map<String, Object>}\n */\nconst entityDefinitions = new Map();\n\n/**\n * @param {String} entityName\n * @param {Object} entityDefinition\n * @returns {boolean}\n */\nfunction addEntityDefinition(entityName, entityDefinition = {}) {\n    if (!entityName || !entityName.length) {\n        return false;\n    }\n\n    entityDefinitions.set(entityName, entityDefinition);\n    return true;\n}\n\n/**\n * Get an entity definition by name.\n *\n * @param {String} entityName\n * @returns {Object}\n */\nfunction getEntityDefinition(entityName) {\n    return entityDefinitions.get(entityName);\n}\n\n/**\n * Get the complete entity definition registry.\n *\n * @returns {Map<any, any>}\n */\nfunction getDefinitionRegistry() {\n    return entityDefinitions;\n}\n\n/**\n * Get a raw object containing all properties of the given entity with empty values.\n *\n * @param {String} entityName\n * @param {Boolean} includeObjectAssociations\n * @returns {Object}\n */\nfunction getRawEntityObject(entityName, includeObjectAssociations = false) {\n    if (!entityDefinitions.has(entityName)) {\n        return {};\n    }\n\n    const definition = entityDefinitions.get(entityName);\n    const entity = {};\n\n    Object.keys(definition.properties).forEach((propertyName) => {\n        const property = definition.properties[propertyName];\n\n        if (property.type === 'array') {\n            entity[propertyName] = [];\n        } else if (property.type === 'object') {\n            if (property.entity && includeObjectAssociations) {\n                entity[propertyName] = getRawEntityObject(property.entity);\n            } else {\n                entity[propertyName] = {};\n            }\n        } else if (property.type === 'boolean') {\n            entity[propertyName] = false;\n        } else if (property.type === 'string') {\n            entity[propertyName] = '';\n        } else if (property.type === 'number' || property.type === 'integer') {\n            entity[propertyName] = 0;\n        } else {\n            utils.warn('EntityFactory', `Unknown property type ${property.type} in ${entityName} entity.`, definition);\n            entity[propertyName] = null;\n        }\n    });\n\n    return entity;\n}\n\n/**\n * Get a list of all entity properties which are required.\n *\n * @param {String} entityName\n * @returns {Array}\n */\nfunction getRequiredProperties(entityName) {\n    if (!entityDefinitions.has(entityName)) {\n        return [];\n    }\n\n    const definition = entityDefinitions.get(entityName);\n    return definition.required;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/entity.factory.js","/**\n * @module core/factory/state\n */\nimport utils from 'src/core/service/util.service';\n\nexport default {\n    registerStateModule,\n    getStateModule,\n    getStateRegistry\n};\n\n/**\n * Registry for the state modules\n *\n * @type {Map<String, Object>}\n */\nconst stateRegistry = new Map();\n\n/**\n * Register a new state module\n *\n * @param {String} name\n * @param {Object} [module={}]\n * @returns {boolean}\n */\nfunction registerStateModule(name, module = {}) {\n    if (!name || !name.length) {\n        utils.warn(\n            'SateFactory',\n            'A state module always needs a name.',\n            module\n        );\n        return false;\n    }\n\n    if (stateRegistry.has(name)) {\n        utils.warn(\n            'SateFactory',\n            `A state module with the name ${name} already exists.`,\n            module\n        );\n        return false;\n    }\n\n    stateRegistry.set(name, module);\n\n    return true;\n}\n\n/**\n * Get a state module by name.\n *\n * @param {String} name\n * @returns {Object}\n */\nfunction getStateModule(name) {\n    return stateRegistry.get(name);\n}\n\n/**\n * Get the complete state registry.\n *\n * @returns {Map<String, Object>}\n */\nfunction getStateRegistry() {\n    return stateRegistry;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/state.factory.js","/**\n * @module core/factory/mixin\n */\nimport utils from 'src/core/service/util.service';\n\nexport default {\n    register,\n    getByName,\n    getMixinRegistry\n};\n\n/**\n * Registry which holds all mixins\n *\n * @type {Map}\n */\nconst mixinRegistry = new Map();\n\n/**\n * Get the complete mixin registry\n *\n * @returns {Map}\n */\nfunction getMixinRegistry() {\n    return mixinRegistry;\n}\n\n/**\n * Register a new mixin\n *\n * @param {String} mixinName\n * @param {Object} [mixin={}]\n * @returns {Boolean|Object}\n */\nfunction register(mixinName, mixin = {}) {\n    if (!mixinName || !mixinName.length) {\n        utils.warn(\n            'MixinFactory',\n            'A mixin always needs a name.',\n            mixin\n        );\n        return false;\n    }\n\n    if (mixinRegistry.has(mixinName)) {\n        utils.warn(\n            'MixinFactory',\n            `The mixin \"${mixinName}\" is already registered. Please select a unique name for your mixin.`,\n            mixin\n        );\n        return false;\n    }\n\n    mixinRegistry.set(mixinName, mixin);\n\n    return mixin;\n}\n\n/**\n * Get a mixin by its name\n *\n * @param mixinName\n * @returns {any | undefined}\n */\nfunction getByName(mixinName) {\n    return mixinRegistry.get(mixinName);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/mixin.factory.js","/**\n * @module core/application\n */\n\n/**\n * The application bootstrapper bootstraps the application and registers the necessary\n * and optional parts of the application in a shared DI container which provides you\n * with an easy-to-use way to add new services as well as decoration these services.\n *\n * The bootstrapper provides you with the ability to register middleware for all or specific\n * services too.\n *\n * @class\n * @memberOf module:core/application\n */\nclass ApplicationBootstrapper {\n    /**\n     * Provides the necessary class properties for the class to work probably\n     *\n     * @constructor\n     * @param {Bottle} container\n     */\n    constructor(container) {\n        const noop = () => {};\n        this.$container = container;\n\n        // Create an empty DI container for the core initializers & services, so we can separate the core initializers\n        // and the providers\n        this.$container.service('service', noop);\n        this.$container.service('init', noop);\n        this.$container.service('factory', noop);\n    }\n\n    /**\n     * Returns all containers. Use this method if you're want to get initializers in your services.\n     *\n     * @param {String=} containerName Name of the nested container. \"init\" & \"service\" are the core containers.\n     * @returns {Bottle.IContainer}\n     */\n    getContainer(containerName) {\n        const containerNames = this.$container.list();\n\n        if (containerNames.indexOf(containerName) !== -1) {\n            return this.$container.container[containerName];\n        }\n        return this.$container.container;\n    }\n\n    /**\n     * Adds a factory to the application. A factory creates objects for the domain.\n     *\n     * The factory will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addFactory('module', (container) => {\n     *    return ModuleFactory();\n     * });\n     *\n     * @param {String} name Name of the factory\n     * @param {Function} factory Factory method\n     * @returns {ApplicationBootstrapper}\n     */\n    addFactory(name, factory) {\n        this.$container.factory(`factory.${name}`, factory.bind(this));\n\n        return this;\n    }\n\n    /**\n     * Registers a factory middleware for either every factory in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addFactoryMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addFactoryMiddleware('module', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addFactoryMiddleware(...args) {\n        return this._addMiddleware('factory', args);\n    }\n\n    /**\n     * Registers a decorator for either every factory in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addFactoryDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addFactoryDecorator('module', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addFactoryDecorator(...args) {\n        return this._addDecorator('factory', args);\n    }\n\n    /**\n     * Adds an initializer to the application. An initializer is a necessary part of the application which needs to be\n     * initialized before we can boot up the application.\n     *\n     * The initializer will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addInitializer('httpClient', (container) => {\n     *    return HttpFactory(container.contextService);\n     * });\n     *\n     * @param {String} name Name of the initializer\n     * @param {Function} initializer Factory method\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializer(name, initializer) {\n        this.$container.factory(`init.${name}`, initializer.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers optional services & provider for the application. Services are usually\n     * API gateways but can be a simple service.\n     *\n     * The service will be added to a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addServiceProvider('productService', (container) => {\n     *    return new ProductApiService(container.mediaService);\n     * });\n     *\n     * @param {String} name Name of the service\n     * @param {Function} provider Factory method for the service\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProvider(name, provider) {\n        this.$container.factory(`service.${name}`, provider.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers the application context (api path, path to resources etc.)\n     *\n     * @param {Object} context\n     * @returns {ApplicationBootstrapper}\n     */\n    registerContext(context) {\n        return this.addInitializer('context', () => {\n            return context;\n        });\n    }\n\n    /**\n     * Registers an initializer middleware for either every initializer in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addInitializerMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addInitializerMiddleware('httpClient', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializerMiddleware(...args) {\n        return this._addMiddleware('init', args);\n    }\n\n    /**\n     * Registers a service provider middleware for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProviderMiddleware(...args) {\n        return this._addMiddleware('service', args);\n    }\n\n    /**\n     * Helper method which registers a middleware\n     *\n     * @param {String} containerName\n     * @param {Array} args\n     * @returns {ApplicationBootstrapper}\n     * @private\n     */\n    _addMiddleware(containerName, args) {\n        const name = (args.length > 1 ? `${containerName}.${args[0]}` : containerName);\n        const middlewareFn = (args.length > 1 ? args[1] : args[0]);\n\n        this.$container.middleware(name, middlewareFn);\n\n        return this;\n    }\n\n    /**\n     * Registers a decorator for either every initializer in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addInitializerDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addInitializerDecorator('httpClient', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializerDecorator(...args) {\n        return this._addDecorator('init', args);\n    }\n\n    /**\n     * Registers a service provider decorator for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProviderDecorator(...args) {\n        return this._addDecorator('service', args);\n    }\n\n    /**\n     * Helper method which registers a decorator\n     *\n     * @param {String} containerName\n     * @param {Array} args\n     * @returns {ApplicationBootstrapper}\n     * @private\n     */\n    _addDecorator(containerName, args) {\n        const name = (args.length > 1 ? `${containerName}.${args[0]}` : containerName);\n        const middlewareFn = (args.length > 1 ? args[1] : args[0]);\n\n        this.$container.decorator(name, middlewareFn);\n\n        return this;\n    }\n\n    /**\n     * Starts the bootstrapping process of the application.\n     *\n     * @param context\n     */\n    start(context = {}) {\n        this.registerContext(context)\n            .createApplicationRoot();\n    }\n\n    /**\n     * Returns the root of the application e.g. a new Vue instance\n     *\n     * @returns {Boolean|Vue}\n     */\n    getApplicationRoot() {\n        if (!this.applicationRoot) {\n            return false;\n        }\n\n        return this.applicationRoot;\n    }\n\n    /**\n     * Creates the application root and injects the provider container into the\n     * view instance to keep the dependency injection of Vue.js in place.\n     *\n     * @returns {ApplicationBootstrapper}\n     */\n    createApplicationRoot() {\n        const container = this.getContainer('init');\n        const router = container.router;\n        const view = container.view;\n\n        // ToDo: What about async initializers?\n        container.entity.then(() => {\n            this.applicationRoot = view.createInstance(\n                '#app',\n                router,\n                this.getContainer('service')\n            );\n        });\n\n        return this;\n    }\n}\n\nexport default ApplicationBootstrapper;\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/application.js","/**\n * @module core/factory/template\n */\nimport Twig from 'twig';\nimport utils from 'src/core/service/util.service';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    getTemplateOverrides,\n    getTemplateRegistry,\n    findCustomTemplate,\n    findCustomOverride,\n    clearTwigCache,\n    getTwigCache,\n    disableTwigCache\n};\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map<any, any>}\n */\nconst templateRegistry = new Map();\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend((TwigCore) => {\n    /**\n     * Remove tokens 2, 3, 4 and 8.\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {Array<any>}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10]\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent\n            };\n        }\n    });\n\n    /** Make the placeholders available in the exposed Twig object. */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n\n    /** Make the Twig template cache registry available. */\n    TwigCore.exports.getRegistry = function getRegistry() {\n        return TwigCore.Templates.registry;\n    };\n\n    /** Provide possibility to clear the template cache registry */\n    TwigCore.exports.clearRegistry = function clearRegistry() {\n        TwigCore.Templates.registry = {};\n    };\n});\n\n/**\n * Registers the main template for the defined component.\n *\n * @param componentName\n * @param componentTemplate\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    /**\n     * If there is no template given, search the DOM.\n     */\n    if (componentTemplate === null) {\n        componentTemplate = findCustomTemplate(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: componentTemplate\n    };\n\n    try {\n        template.baseTemplate = Twig.twig(templateConfig);\n    } catch (error) {\n        utils.warn(error.message);\n        return false;\n    }\n\n    templateRegistry.set(componentName, template);\n    return true;\n}\n\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @param componentName\n * @param extendComponentName\n * @param templateExtension\n */\nfunction extendComponentTemplate(componentName, extendComponentName, templateExtension = null) {\n    if (!templateRegistry.has(extendComponentName)) {\n        if (templateExtension !== null) {\n            registerComponentTemplate(componentName, templateExtension);\n        }\n\n        return;\n    }\n\n    const extendTemplate = templateRegistry.get(extendComponentName);\n    const template = templateRegistry.get(componentName) || {};\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: extendTemplate.baseTemplate.tokens\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n\n    if (templateExtension !== null) {\n        registerTemplateOverride(componentName, templateExtension);\n    }\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @param componentName\n * @param templateOverride\n * @param overrideIndex\n */\nfunction registerTemplateOverride(componentName, templateOverride = null, overrideIndex = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    template.overrides = template.overrides || [];\n\n    if (templateOverride === null) {\n        templateOverride = findCustomOverride(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-${template.overrides.length}`,\n        data: templateOverride\n    };\n\n    const override = Twig.twig(templateConfig);\n\n    /**\n     * You can change the inheritance order by defining the override index.\n     */\n    if (overrideIndex !== null) {\n        template.overrides.splice(overrideIndex, 0, override);\n    } else {\n        template.overrides.push(override);\n    }\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return '';\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    if (!template.baseTemplate) {\n        return '';\n    }\n\n    /**\n     * The base template is the main template of the component.\n     */\n    const baseTemplate = template.baseTemplate;\n    const overrides = template.overrides;\n    const parentPlaceholder = Twig.placeholders.parent;\n    const blocks = {};\n\n    baseTemplate.render();\n\n    /**\n     * Iterate through template extensions and collect all block overrides.\n     */\n    if (overrides) {\n        overrides.forEach((override) => {\n            const templateBlocks = override.render({}, {\n                output: 'blocks'\n            });\n\n            /**\n             * Replace the parent placeholder with the parent block.\n             * This ensures multi level inheritance.\n             */\n            Object.keys(blocks).forEach((blockName) => {\n                if (templateBlocks[blockName]) {\n                    templateBlocks[blockName] = templateBlocks[blockName].replace(\n                        parentPlaceholder,\n                        blocks[blockName]\n                    );\n                }\n            });\n\n            Object.assign(blocks, templateBlocks);\n        });\n    }\n\n    /**\n     * Render the base template with all collected block overrides.\n     */\n    return baseTemplate.render({}, {\n        blocks\n    });\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Get the complete template registry.\n *\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Find a component template in the DOM.\n * You can define component templates by creating a template element with a `component` attribute.\n * The attribute should contain the name of the component.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomTemplate(componentName) {\n    const element = document.querySelector(`template[component=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n/**\n * Find a template override in the DOM.\n * You can define template overrides by creating a template element with a `override` attribute.\n * The attribute should contain the name of the component you want to override.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomOverride(componentName) {\n    const element = document.querySelector(`template[override=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\nfunction clearTwigCache() {\n    Twig.clearRegistry();\n}\n\nfunction getTwigCache() {\n    return Twig.getRegistry();\n}\n\nfunction disableTwigCache() {\n    Twig.cache(false);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/template.factory.js","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 89\n// module chunks = 2"],"sourceRoot":""}