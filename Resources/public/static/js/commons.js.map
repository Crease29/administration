{"version":3,"sources":["webpack:///./src/core/service/util.service.js","webpack:///./src/core/common.js","webpack:///./src/core/common.js?62aa","webpack:///./src/core/factory/module.factory.js","webpack:///./src/core/factory/component.factory.js","webpack:///./src/core/application.js","webpack:///./src/core/factory/template.factory.js","webpack:///fs (ignored)"],"names":["merge","formDataToObject","warn","currency","date","getObjectChangeSet","createUuid","isObject","isEmpty","isArray","isFunction","isDate","target","source","forEach","key","Object","formData","reduce","result","item","name","message","unshift","console","apply","val","sign","opts","style","language","toLocaleString","object","length","array","Array","func","dateObject","Date","baseObject","compareObject","valueOf","b","c","acc","hasOwnProperty","arrayDiff","getArrayChangeSet","diff","uuid","baseArray","compareArray","filter","indexOf","value","index","diffObject","push","find","compareItem","module","exports","global","require","modules","getModuleRegistry","registerModule","type","moduleRoutes","moduleId","id","utils","has","get","splitModuleId","split","prototype","call","routes","routeKey","route","path","join","componentList","components","componentKey","component","default","alias","set","size","moduleDefinition","manifest","bind","navigation","getModuleRoutes","componentRegistry","overrideRegistry","getComponentRegistry","register","componentName","componentConfiguration","config","template","TemplateFactory","registerComponentTemplate","extend","extendComponentName","extendComponentTemplate","extends","override","overrideIndex","registerTemplateOverride","overrides","splice","getComponentTemplate","getRenderedTemplate","build","getExtendedComponent","overrideComp","mergeConfig","extendComponent","mergedData","data","additionalSources","ApplicationBootstrapper","container","noop","$container","service","containerName","containerNames","list","initializer","factory","provider","context","addInitializer","args","_addMiddleware","middlewareFn","middleware","_addDecorator","decorator","registerContext","createApplicationRoot","applicationRoot","getContainer","router","view","createInstance","getTemplateOverrides","getTemplateRegistry","findCustomTemplate","findCustomOverride","templateRegistry","Twig","TwigCore","token","definitions","extendTag","regex","next","open","parse","chain","output","placeholders","parent","componentTemplate","templateConfig","baseTemplate","twig","templateExtension","extendTemplate","tokens","templateOverride","parentPlaceholder","blocks","render","templateBlocks","blockName","replace","element","document","querySelector","innerHTML"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["import uuidv4 from 'uuid/v4';\n\nexport default {\n    merge,\n    formDataToObject,\n    warn,\n    currency,\n    date,\n    getObjectChangeSet,\n    createUuid: uuidv4,\n    isObject,\n    isEmpty,\n    isArray,\n    isFunction,\n    isDate\n};\n\n// Todo: This has an issue when you want to copy into a new object\nfunction merge(target, source) {\n    Object.keys(source).forEach((key) => {\n        if (source[key] instanceof Object) {\n            if (!target[key]) {\n                Object.assign(target, { [key]: {} });\n            }\n            Object.assign(source[key], merge(target[key], source[key]));\n        }\n    });\n\n    Object.assign(target || {}, source);\n    return target;\n}\n\n/**\n * Transforms FormData to a plain & simple object which can be used with the HTTP client for example.\n *\n * @param {FormData} formData\n * @returns {Object}\n */\nfunction formDataToObject(formData) {\n    return Array.from(formData).reduce((result, item) => {\n        result[item[0]] = item[1];\n        return result;\n    }, {});\n}\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n *\n * @param {String} name\n * @param {String|Object|Array} message\n */\nfunction warn(name = 'Core', ...message) {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        console.warn.apply(this, message);\n    }\n}\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @returns {string} Formatted string\n */\nfunction currency(val, sign) {\n    const opts = {\n        style: 'currency',\n        currency: sign || 'EUR'\n    };\n    let language = 'de-DE';\n    if (opts.currency === 'USD') {\n        language = 'en-US';\n    }\n    return val.toLocaleString(language, opts);\n}\n\nfunction date(val) {\n    return val.toLocaleString('de-DE');\n}\n\nfunction isObject(object) {\n    return object !== null && typeof object === 'object';\n}\n\nfunction isEmpty(object) {\n    return Object.keys(object).length === 0;\n}\n\nfunction isArray(array) {\n    return Array.isArray(array);\n}\n\nfunction isFunction(func) {\n    return func !== null && typeof func === 'function';\n}\n\nfunction isDate(dateObject) {\n    return dateObject instanceof Date;\n}\n\nfunction getObjectChangeSet(baseObject, compareObject) {\n    if (baseObject === compareObject) {\n        return {};\n    }\n\n    if (!isObject(baseObject) || !isObject(compareObject)) {\n        return compareObject;\n    }\n\n    if (isDate(baseObject) || isDate(compareObject)) {\n        if (baseObject.valueOf() === compareObject.valueOf()) {\n            return {};\n        }\n\n        return compareObject;\n    }\n\n    const b = { ...baseObject };\n    const c = { ...compareObject };\n\n    return Object.keys(c).reduce((acc, key) => {\n        if (b.hasOwnProperty(key)) {\n            if (isArray(b[key])) {\n                const arrayDiff = getArrayChangeSet(b[key], c[key]);\n\n                if (isArray(arrayDiff) && arrayDiff.length === 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: arrayDiff };\n            }\n\n            const diff = getObjectChangeSet(b[key], c[key]);\n\n            if (isObject(diff) && isEmpty(diff) && !isDate(diff)) {\n                return acc;\n            }\n\n            if (isObject(b[key]) && b[key].uuid) {\n                diff.uuid = b[key].uuid;\n            }\n\n            return { ...acc, [key]: diff };\n        }\n\n        return acc;\n    }, {});\n}\n\nfunction getArrayChangeSet(baseArray, compareArray) {\n    if (baseArray === compareArray) {\n        return [];\n    }\n\n    if (!isArray(baseArray) || !isArray(compareArray)) {\n        return compareArray;\n    }\n\n    if (baseArray.length === 0) {\n        return compareArray;\n    }\n\n    if (compareArray.length === 0) {\n        return baseArray;\n    }\n\n    const b = [...baseArray];\n    const c = [...compareArray];\n\n    if (!isObject(b[0]) || !isObject(c[0])) {\n        return c.filter(value => b.indexOf(value) < 0);\n    }\n\n    const diff = [];\n\n    c.forEach((item, index) => {\n        if (!item.uuid) {\n            const diffObject = getObjectChangeSet(b[index], c[index]);\n\n            if (isObject(diffObject) && !isEmpty(diffObject)) {\n                diff.push(diffObject);\n            }\n        } else {\n            const compareObject = b.find((compareItem) => {\n                return item.uuid === compareItem.uuid;\n            });\n\n            if (!compareObject) {\n                diff.push(item);\n            } else {\n                const diffObject = getObjectChangeSet(compareObject, item);\n\n                if (isObject(diffObject) && !isEmpty(diffObject)) {\n                    diff.push({ ...diffObject, uuid: item.uuid });\n                }\n            }\n        }\n    });\n\n    return diff;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/service/util.service.js","module.exports = global[\"Shopware\"] = require(\"-!/Applications/MAMP/htdocs/sw-labs/src/Administration/Resources/administration/node_modules/eslint-loader/index.js??ref--0!./common.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/common.js","const Bottle = require('bottlejs');\n\nconst ModuleFactory = require('src/core/factory/module.factory');\nconst ComponentFactory = require('src/core/factory/component.factory');\nconst utils = require('src/core/service/util.service');\nlet TemplateFactory = require('src/core/factory/template.factory');\nlet ApplicationBootstrapper = require('src/core/application');\n\nconst container = new Bottle({\n    strict: true\n});\nApplicationBootstrapper = ApplicationBootstrapper.default;\n\nconst application = new ApplicationBootstrapper(container);\nTemplateFactory = TemplateFactory.default;\n\nconst exposedInterface = {\n    Module: {\n        register: ModuleFactory.registerModule,\n        getRegistry: ModuleFactory.getModuleRegistry,\n        getRoutes: ModuleFactory.getModuleRoutes\n    },\n    Component: {\n        register: ComponentFactory.register,\n        extend: ComponentFactory.extend,\n        override: ComponentFactory.override,\n        build: ComponentFactory.build,\n        getRegistry: ComponentFactory.getComponentRegistry,\n        getComponentTemplate: ComponentFactory.getComponentTemplate\n    },\n    Template: {\n        register: TemplateFactory.registerComponentTemplate,\n        extend: TemplateFactory.extendComponentTemplate,\n        override: TemplateFactory.registerTemplateOverride,\n        getRenderedTemplate: TemplateFactory.getRenderedTemplate,\n        getRegistry: TemplateFactory.getTemplateRegistry,\n        getOverrideRegistry: TemplateFactory.getTemplateRegistry,\n        find: TemplateFactory.findCustomTemplate,\n        findOverride: TemplateFactory.findCustomTemplate\n    },\n    Utils: utils.default,\n    Application: application\n};\n\nmodule.exports = exposedInterface;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/common.js\n// module id = 221\n// module chunks = 2","import utils from 'src/core/service/util.service';\n\nexport {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry\n};\n\n/** @type Map modules - Registry for modules */\nconst modules = new Map();\n\n/**\n * Returns the registry of all modules mounted in the application.\n *\n * @returns {Map} modules - Registry of all modules\n */\nfunction getModuleRegistry() {\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n *\n * @param {Object} module - Module definition - see manifest.js file\n * @param {String} [type=plugin] - Type of the module\n * @returns {Boolean|Object} moduleDefinition - registered module definition\n */\nfunction registerModule(module, type = 'plugin') {\n    const moduleRoutes = new Map();\n    const moduleId = module.id;\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        utils.warn(\n            'ModuleFactory',\n            'Module has no unique identifier \"id\". Abort registration.',\n            module\n        );\n        return false;\n    }\n\n    if (modules.has(moduleId)) {\n        utils.warn(\n            'ModuleFactory',\n            `A module with the identifier \"${moduleId}\" is registered already. Abort registration.`,\n            modules.get(moduleId)\n        );\n\n        return false;\n    }\n\n    const splitModuleId = moduleId.split('.');\n\n    if (splitModuleId.length < 2) {\n        utils.warn(\n            'ModuleFactory',\n            'Module identifier does not match the necessary format \"[section].[name]\":',\n            moduleId,\n            'Abort registration.'\n        );\n        return false;\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it isn't accessible in the application.\n    if (!Object.prototype.hasOwnProperty.call(module, 'routes')) {\n        utils.warn(\n            'ModuleFactory',\n            `Module \"${moduleId}\" has no configured routes. The module will not be accessible in the administration UI.`,\n            'Abort registration.',\n            module\n        );\n        return false;\n    }\n\n    // Sanitize the modules routes\n    Object.keys(module.routes).forEach((routeKey) => {\n        const route = module.routes[routeKey];\n\n        // Rewrite name and path\n        route.name = `${moduleId}.${routeKey}`;\n        route.path = `/${type}/${splitModuleId.join('/')}/${route.path}`;\n        route.type = type;\n\n        const componentList = {};\n        if (route.components && Object.keys(route.components).length) {\n            Object.keys(route.components).forEach((componentKey) => {\n                const component = route.components[componentKey];\n\n                // Don't register a component without a name\n                if (Object.prototype.hasOwnProperty(component, 'name')\n                || !component.name\n                || !component.name.length) {\n                    utils.warn(\n                        'ModuleFactory',\n                        `Component ${component} has no \"name\" property. The component will not be registered.`\n                    );\n\n                    return;\n                }\n\n                componentList[componentKey] = component.name;\n            });\n\n            route.components = componentList;\n        } else {\n            if (!route.component || !route.component.name) {\n                utils.warn(\n                    'ModuleFactory',\n                    `The route definition of module \"${moduleId}\" is not valid. A route needs an assigned component.`\n                );\n                return;\n            }\n            route.components = {\n                default: route.component.name\n            };\n\n            // Remove the component cause we remapped it to the components object of the route object\n            delete route.component;\n        }\n\n        // Alias support\n        if (route.alias && route.alias.length > 0) {\n            route.alias = `/${splitModuleId.join('/')}/${route.alias}`;\n        }\n\n        moduleRoutes.set(route.name, route);\n    });\n\n    // When we're not having at least one valid route definition we're not registering the module\n    if (moduleRoutes.size === 0) {\n        utils.warn(\n            'ModuleFactory',\n            `The module \"${moduleId}\" was not registered cause it hasn't a valid route definition`,\n            'Abort registration.',\n            module.routes\n        );\n        return false;\n    }\n\n    const moduleDefinition = {\n        routes: moduleRoutes,\n        manifest: module,\n        type\n    };\n\n    // Add the navigation of the module to the module definition. We'll create a menu entry later on\n    if (Object.prototype.hasOwnProperty.bind(module, 'navigation') && module.navigation) {\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    modules.set(moduleId, moduleDefinition);\n\n    return moduleDefinition;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n *\n * @returns {Array} route definitions - see {@link https://router.vuejs.org/en/essentials/named-routes.html}\n */\nfunction getModuleRoutes() {\n    const moduleRoutes = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            moduleRoutes.push(route);\n        });\n    });\n\n    return moduleRoutes;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/module.factory.js","import utils from 'src/core/service/util.service';\nimport TemplateFactory from 'src/core/factory/template.factory';\n\nexport {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry\n};\n\n/** @type Map componentRegistry - Registry which holds all component registry */\nconst componentRegistry = new Map();\n\n/** @type Map overrideRegistry - Registry which holds all component overrides */\nconst overrideRegistry = new Map();\n\n/**\n * Returns the map with all registered components.\n *\n * @returns {Map}\n */\nfunction getComponentRegistry() {\n    return componentRegistry;\n}\n\n/**\n * Register a new component.\n *\n * @param {String} componentName\n * @param {Object} [componentConfiguration={}]\n * @returns {Boolean|Object}\n */\nfunction register(componentName, componentConfiguration = {}) {\n    const config = componentConfiguration;\n\n    if (!componentName || !componentName.length) {\n        utils.warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            config\n        );\n        return false;\n    }\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${config.name}\" needs a template to be functional.`,\n            'Please add a \"template\" property to your component definition',\n            config\n        );\n        return false;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n *\n * @param {String} componentName\n * @param {String} extendComponentName\n * @param {Object} componentConfiguration\n * @returns {Object} config\n */\nfunction extend(componentName, extendComponentName, componentConfiguration) {\n    const config = componentConfiguration;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config.name = componentName;\n    config.extends = extendComponentName;\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n *\n * ToDo: Keep reference to original config object.\n *\n * @param componentName\n * @param componentConfiguration\n * @param overrideIndex\n * @returns {*}\n */\nfunction override(componentName, componentConfiguration, overrideIndex = null) {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, config);\n    } else {\n        overrides.push(config);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getComponentTemplate(componentName) {\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n/**\n * Returns the complete component including extension and overrides.\n *\n * ToDo: Implement overrides for recursive extended components including the template.\n *\n * @param componentName\n * @returns {*}\n */\nfunction build(componentName) {\n    if (!componentRegistry.has(componentName)) {\n        return false;\n    }\n\n    let config = componentRegistry.get(componentName);\n\n    if (config.extends) {\n        config = getExtendedComponent(componentName);\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        const overrides = overrideRegistry.get(componentName);\n\n        overrides.forEach((overrideComp) => {\n            config = mergeConfig(config, overrideComp);\n        });\n    }\n\n    /**\n     * Get the final template result including all overrides.\n     */\n    config.template = getComponentTemplate(componentName);\n\n    return config;\n}\n\n/**\n * Get the final version of an extended component.\n * Called recursively for multiple extended components.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getExtendedComponent(componentName) {\n    if (!componentRegistry.has(componentName)) {\n        return {};\n    }\n\n    let config = componentRegistry.get(componentName);\n\n    if (!config.extends || !componentRegistry.has(config.extends)) {\n        return config;\n    }\n\n    const extendComponent = getExtendedComponent(componentRegistry.get(config.extends));\n\n    config = mergeConfig({}, extendComponent, config);\n\n    return config;\n}\n\n/**\n * ToDo: Add possibility to access original parent component.\n *\n * @param target\n * @param source\n * @param additionalSources\n * @returns {*}\n */\nfunction mergeConfig(target, source, ...additionalSources) {\n    if (!utils.isObject(target) || !utils.isObject(source)) {\n        return source;\n    }\n\n    const config = Object.assign({}, target);\n\n    Object.keys(source).forEach((key) => {\n        if (config.hasOwnProperty(key) && config[key] !== null) {\n            // Merge the special data function used for data binding\n            if (utils.isFunction(config[key]) && key === 'data') {\n                const mergedData = mergeConfig(config[key](), source[key]());\n\n                config[key] = function data() {\n                    return mergedData;\n                };\n            // Merge arrays\n            } else if (utils.isArray(config[key])) {\n                config[key] = [...config[key], ...source[key]];\n            // Deep merge objects\n            } else if (utils.isObject(source[key])) {\n                config[key] = mergeConfig(config[key], source[key]);\n            } else {\n                config[key] = source[key];\n            }\n        } else {\n            config[key] = source[key];\n        }\n    });\n\n    if (additionalSources.length > 0) {\n        return mergeConfig(config, ...additionalSources);\n    }\n\n    return config;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/component.factory.js","/* global Shopware */\n\n/**\n * The application bootstrapper bootstraps the application and registers the necessary\n * and optional parts of the application in a shared DI container which provides you\n * with an easy-to-use way to add new services as well as decoration these services.\n *\n * The bootstrapper provides you with the ability to register middleware for all or specific\n * services too.\n *\n * @class\n */\nexport default class ApplicationBootstrapper {\n    /**\n     * Provides the necessary class properties for the class to work probably\n     *\n     * @constructor\n     * @param {Bottle} container\n     */\n    constructor(container) {\n        const noop = () => {};\n        this.$container = container;\n\n        // Create an empty DI container for the core initializers & services, so we can separate the core initializers\n        // and the providers\n        this.$container.service('service', noop);\n        this.$container.service('init', noop);\n    }\n\n    /**\n     * Returns all containers. Use this method if you're want to get initializers in your services.\n     *\n     * @param {String=} containerName Name of the nested container. \"init\" & \"service\" are the core containers.\n     * @returns {Bottle.IContainer}\n     */\n    getContainer(containerName) {\n        const containerNames = this.$container.list();\n\n        if (containerNames.indexOf(containerName) !== -1) {\n            return this.$container.container[containerName];\n        }\n        return this.$container.container;\n    }\n\n    /**\n     * Adds an initializer to the application. An initializer is a necessary part of the application which needs to be\n     * initialized before we can boot up the application.\n     *\n     * The initializer will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addInitializer('httpClient', (container) => {\n     *    return HttpFactory(container.contextService);\n     * });\n     *\n     * @param {String} name Name of the initializer\n     * @param {Function} initializer Factory method\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializer(name, initializer) {\n        this.$container.factory(`init.${name}`, initializer.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers optional services & provider for the application. Services are usually\n     * API gateways but can be a simple service.\n     *\n     * The service will be added to a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addServiceProvider('productService', (container) => {\n     *    return new ProductApiService(container.mediaService);\n     * });\n     *\n     * @param {String} name Name of the service\n     * @param {Function} provider Factory method for the service\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProvider(name, provider) {\n        this.$container.factory(`service.${name}`, provider.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers the application context (api path, path to resources etc.)\n     *\n     * @param {Object} context\n     * @returns {ApplicationBootstrapper}\n     */\n    registerContext(context) {\n        return this.addInitializer('context', () => {\n            return context;\n        });\n    }\n\n    /**\n     * Registers an initializer middleware for either every initializer in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addInitializerMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addInitializerMiddleware('httpClient', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializerMiddleware(...args) {\n        return this._addMiddleware('init', args);\n    }\n\n    /**\n     * Registers a service provider middleware for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProviderMiddleware(...args) {\n        return this._addMiddleware('service', args);\n    }\n\n    /**\n     * Helper method which registers a middleware\n     *\n     * @param {String} containerName\n     * @param {Array} args\n     * @returns {ApplicationBootstrapper}\n     * @private\n     */\n    _addMiddleware(containerName, args) {\n        const name = (args.length > 1 ? `${containerName}.${args[0]}` : containerName);\n        const middlewareFn = (args.length > 1 ? args[1] : args[0]);\n\n        this.$container.middleware(name, middlewareFn);\n\n        return this;\n    }\n\n    /**\n     * Registers a decorator for either every initializer in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addInitializerDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addInitializerDecorator('httpClient', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializerDecorator(...args) {\n        return this._addDecorator('init', args);\n    }\n\n    /**\n     * Registers a service provider decorator for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProviderDecorator(...args) {\n        return this._addDecorator('service', args);\n    }\n\n    /**\n     * Helper method which registers a decorator\n     *\n     * @param {String} containerName\n     * @param {Array} args\n     * @returns {ApplicationBootstrapper}\n     * @private\n     */\n    _addDecorator(containerName, args) {\n        const name = (args.length > 1 ? `${containerName}.${args[0]}` : containerName);\n        const middlewareFn = (args.length > 1 ? args[1] : args[0]);\n\n        this.$container.decorator(name, middlewareFn);\n\n        return this;\n    }\n\n    /**\n     * Starts the bootstrapping process of the application.\n     *\n     * @param context\n     */\n    start(context = {}) {\n        this.registerContext(context)\n            .createApplicationRoot();\n    }\n\n    /**\n     * Returns the root of the application e.g. a new Vue instance\n     *\n     * @returns {Boolean|Vue}\n     */\n    getApplicationRoot() {\n        if (!this.applicationRoot) {\n            return false;\n        }\n\n        return this.applicationRoot;\n    }\n\n    /**\n     * Creates the application root and injects the provider container into the\n     * view instance to keep the dependency injection of Vue.js in place.\n     *\n     * @returns {ApplicationBootstrapper}\n     */\n    createApplicationRoot() {\n        const container = this.getContainer('init');\n        const router = container.router;\n        const view = container.view;\n\n        this.applicationRoot = view.createInstance(\n            '#app',\n            router,\n            this.getContainer('service')\n        );\n\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/application.js","import Twig from 'twig';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    getTemplateOverrides,\n    getTemplateRegistry,\n    findCustomTemplate,\n    findCustomOverride\n};\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map}\n */\nconst templateRegistry = new Map();\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend((TwigCore) => {\n    /**\n     * Remove tokens 2, 3, 4 and 8.\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {[*]}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10]\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent\n            };\n        }\n    });\n\n    /**\n     * Make the placeholders available in the exposed Twig object.\n     */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n});\n\n/**\n * Registers the main template for the defined component.\n *\n * @param componentName\n * @param componentTemplate\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    /**\n     * If there is no template given, search the DOM.\n     */\n    if (componentTemplate === null) {\n        componentTemplate = findCustomTemplate(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: componentTemplate\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @param componentName\n * @param extendComponentName\n * @param templateExtension\n */\nfunction extendComponentTemplate(componentName, extendComponentName, templateExtension = null) {\n    if (!templateRegistry.has(extendComponentName)) {\n        if (templateExtension !== null) {\n            registerComponentTemplate(componentName, templateExtension);\n        }\n\n        return;\n    }\n\n    const extendTemplate = templateRegistry.get(extendComponentName);\n    const template = templateRegistry.get(componentName) || {};\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: extendTemplate.baseTemplate.tokens\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n\n    if (templateExtension !== null) {\n        registerTemplateOverride(componentName, templateExtension);\n    }\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @param componentName\n * @param templateOverride\n * @param overrideIndex\n */\nfunction registerTemplateOverride(componentName, templateOverride = null, overrideIndex = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    template.overrides = template.overrides || [];\n\n    if (templateOverride === null) {\n        templateOverride = findCustomOverride(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-${template.overrides.length}`,\n        data: templateOverride\n    };\n\n    const override = Twig.twig(templateConfig);\n\n    /**\n     * You can change the inheritance order by defining the override index.\n     */\n    if (overrideIndex !== null) {\n        template.overrides.splice(overrideIndex, 0, override);\n    } else {\n        template.overrides.push(override);\n    }\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return '';\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    if (!template.baseTemplate) {\n        return '';\n    }\n\n    /**\n     * The base template is the main template of the component.\n     */\n    const baseTemplate = template.baseTemplate;\n    const overrides = template.overrides;\n    const parentPlaceholder = Twig.placeholders.parent;\n    const blocks = {};\n\n    baseTemplate.render();\n\n    /**\n     * Iterate through template extensions and collect all block overrides.\n     */\n    if (overrides) {\n        overrides.forEach((override) => {\n            const templateBlocks = override.render({}, {\n                output: 'blocks'\n            });\n\n            /**\n             * Replace the parent placeholder with the parent block.\n             * This ensures multi level inheritance.\n             */\n            Object.keys(blocks).forEach((blockName) => {\n                if (templateBlocks[blockName]) {\n                    templateBlocks[blockName] = templateBlocks[blockName].replace(\n                        parentPlaceholder,\n                        blocks[blockName]\n                    );\n                }\n            });\n\n            Object.assign(blocks, templateBlocks);\n        });\n    }\n\n    /**\n     * Render the base template with all collected block overrides.\n     */\n    return baseTemplate.render({}, {\n        blocks\n    });\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Get the complete template registry.\n *\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Find a component template in the DOM.\n * You can define component templates by creating a template element with a `component` attribute.\n * The attribute should contain the name of the component.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomTemplate(componentName) {\n    const element = document.querySelector(`template[component=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n/**\n * Find a template override in the DOM.\n * You can define template overrides by creating a template element with a `override` attribute.\n * The attribute should contain the name of the component you want to override.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomOverride(componentName) {\n    const element = document.querySelector(`template[override=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/template.factory.js","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 89\n// module chunks = 2"],"sourceRoot":""}