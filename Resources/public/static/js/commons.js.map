{"version":3,"sources":["webpack:///./src/core/service/util.service.js","webpack:///./src/core/common.js","webpack:///./src/core/common.js?62aa","webpack:///./src/core/factory/module.factory.js","webpack:///./src/core/factory/component.factory.js","webpack:///./src/core/application.js","webpack:///./src/core/factory/template.factory.js","webpack:///fs (ignored)"],"names":["merge","formDataToObject","warn","currency","date","getObjectChangeSet","createUuid","isObject","isPlainObject","isEmpty","isRegExp","isArray","isFunction","isDate","target","source","forEach","key","Object","formData","reduce","result","item","name","message","unshift","console","apply","val","sign","opts","style","language","toLocaleString","locale","object","obj","toString","length","exp","array","Array","func","dateObject","Date","baseObject","compareObject","valueOf","b","c","acc","hasOwnProperty","arrayDiff","getArrayChangeSet","diff","uuid","baseArray","compareArray","filter","indexOf","value","index","diffObject","push","find","compareItem","module","exports","global","require","getModuleRoutes","registerModule","getModuleRegistry","modules","moduleId","moduleRoutes","type","utils","has","get","splitModuleId","split","prototype","call","routes","routeKey","route","join","path","componentList","components","componentKey","component","default","alias","set","size","moduleDefinition","manifest","bind","navigation","register","extend","override","build","getComponentTemplate","getComponentRegistry","getOverrideRegistry","componentRegistry","overrideRegistry","componentName","componentConfiguration","config","template","TemplateFactory","registerComponentTemplate","extendComponentName","extendComponentTemplate","extends","overrideIndex","registerTemplateOverride","overrides","splice","getRenderedTemplate","skipTemplate","extendComp","overrideComp","comp","ApplicationBootstrapper","container","noop","$container","service","containerName","containerNames","list","initializer","factory","provider","context","addInitializer","args","_addMiddleware","middlewareFn","middleware","_addDecorator","decorator","registerContext","createApplicationRoot","applicationRoot","getContainer","router","view","createInstance","getTemplateOverrides","getTemplateRegistry","findCustomTemplate","findCustomOverride","clearTwigCache","getTwigCache","disableTwigCache","templateRegistry","Twig","TwigCore","token","definitions","extendTag","regex","next","open","parse","chain","output","placeholders","parent","getRegistry","Templates","registry","clearRegistry","componentTemplate","templateConfig","id","data","baseTemplate","twig","error","templateExtension","extendTemplate","tokens","templateOverride","parentPlaceholder","blocks","render","templateBlocks","blockName","replace","element","document","querySelector","innerHTML","cache"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["import uuidv4 from 'uuid/v4';\n\nexport default {\n    merge,\n    formDataToObject,\n    warn,\n    currency,\n    date,\n    getObjectChangeSet,\n    createUuid: uuidv4,\n    isObject,\n    isPlainObject,\n    isEmpty,\n    isRegExp,\n    isArray,\n    isFunction,\n    isDate\n};\n\n// Todo: This has an issue when you want to copy into a new object\nfunction merge(target, source) {\n    Object.keys(source).forEach((key) => {\n        if (source[key] instanceof Object) {\n            if (!target[key]) {\n                Object.assign(target, { [key]: {} });\n            }\n            Object.assign(source[key], merge(target[key], source[key]));\n        }\n    });\n\n    Object.assign(target || {}, source);\n    return target;\n}\n\n/**\n * Transforms FormData to a plain & simple object which can be used with the HTTP client for example.\n *\n * @param {FormData} formData\n * @returns {Object}\n */\nfunction formDataToObject(formData) {\n    return Array.from(formData).reduce((result, item) => {\n        result[item[0]] = item[1];\n        return result;\n    }, {});\n}\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n *\n * @param {String} name\n * @param {String|Object|Array} message\n */\nfunction warn(name = 'Core', ...message) {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        console.warn.apply(this, message);\n    }\n}\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @returns {string} Formatted string\n */\nfunction currency(val, sign) {\n    const opts = {\n        style: 'currency',\n        currency: sign || 'EUR'\n    };\n    let language = 'de-DE';\n    if (opts.currency === 'USD') {\n        language = 'en-US';\n    }\n    return val.toLocaleString(language, opts);\n}\n\nfunction date(val, locale = 'de-DE') {\n    return val.toLocaleString(locale);\n}\n\nfunction isObject(object) {\n    return object !== null && typeof object === 'object';\n}\n\nfunction isPlainObject(obj) {\n    return obj.toString() === '[object Object]';\n}\n\nfunction isEmpty(object) {\n    return Object.keys(object).length === 0;\n}\n\nfunction isRegExp(exp) {\n    return exp.toString() === '[object RegExp]';\n}\n\nfunction isArray(array) {\n    return Array.isArray(array);\n}\n\nfunction isFunction(func) {\n    return func !== null && typeof func === 'function';\n}\n\nfunction isDate(dateObject) {\n    return dateObject instanceof Date;\n}\n\nfunction getObjectChangeSet(baseObject, compareObject) {\n    if (baseObject === compareObject) {\n        return {};\n    }\n\n    if (!isObject(baseObject) || !isObject(compareObject)) {\n        return compareObject;\n    }\n\n    if (isDate(baseObject) || isDate(compareObject)) {\n        if (baseObject.valueOf() === compareObject.valueOf()) {\n            return {};\n        }\n\n        return compareObject;\n    }\n\n    const b = { ...baseObject };\n    const c = { ...compareObject };\n\n    return Object.keys(c).reduce((acc, key) => {\n        if (b.hasOwnProperty(key)) {\n            if (isArray(b[key])) {\n                const arrayDiff = getArrayChangeSet(b[key], c[key]);\n\n                if (isArray(arrayDiff) && arrayDiff.length === 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: arrayDiff };\n            }\n\n            const diff = getObjectChangeSet(b[key], c[key]);\n\n            if (isObject(diff) && isEmpty(diff) && !isDate(diff)) {\n                return acc;\n            }\n\n            if (isObject(b[key]) && b[key].uuid) {\n                diff.uuid = b[key].uuid;\n            }\n\n            return { ...acc, [key]: diff };\n        }\n\n        return acc;\n    }, {});\n}\n\nfunction getArrayChangeSet(baseArray, compareArray) {\n    if (baseArray === compareArray) {\n        return [];\n    }\n\n    if (!isArray(baseArray) || !isArray(compareArray)) {\n        return compareArray;\n    }\n\n    if (baseArray.length === 0) {\n        return compareArray;\n    }\n\n    if (compareArray.length === 0) {\n        return baseArray;\n    }\n\n    const b = [...baseArray];\n    const c = [...compareArray];\n\n    if (!isObject(b[0]) || !isObject(c[0])) {\n        return c.filter(value => b.indexOf(value) < 0);\n    }\n\n    const diff = [];\n\n    c.forEach((item, index) => {\n        if (!item.uuid) {\n            const diffObject = getObjectChangeSet(b[index], c[index]);\n\n            if (isObject(diffObject) && !isEmpty(diffObject)) {\n                diff.push(diffObject);\n            }\n        } else {\n            const compareObject = b.find((compareItem) => {\n                return item.uuid === compareItem.uuid;\n            });\n\n            if (!compareObject) {\n                diff.push(item);\n            } else {\n                const diffObject = getObjectChangeSet(compareObject, item);\n\n                if (isObject(diffObject) && !isEmpty(diffObject)) {\n                    diff.push({ ...diffObject, uuid: item.uuid });\n                }\n            }\n        }\n    });\n\n    return diff;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/service/util.service.js","module.exports = global[\"Shopware\"] = require(\"-!/Users/oliver/Projects/53/src/Administration/Resources/administration/node_modules/eslint-loader/index.js??ref--0!./common.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/common.js","const Bottle = require('bottlejs');\n\nconst utils = require('src/core/service/util.service');\nlet ModuleFactory = require('src/core/factory/module.factory');\nlet ComponentFactory = require('src/core/factory/component.factory');\nlet TemplateFactory = require('src/core/factory/template.factory');\nlet ApplicationBootstrapper = require('src/core/application');\n\nconst container = new Bottle({\n    strict: true\n});\nApplicationBootstrapper = ApplicationBootstrapper.default;\n\nconst application = new ApplicationBootstrapper(container);\nTemplateFactory = TemplateFactory.default;\nComponentFactory = ComponentFactory.default;\nModuleFactory = ModuleFactory.default;\n\nconst exposedInterface = {\n    Module: {\n        register: ModuleFactory.registerModule,\n        getRegistry: ModuleFactory.getModuleRegistry,\n        getRoutes: ModuleFactory.getModuleRoutes\n    },\n    Component: {\n        register: ComponentFactory.register,\n        extend: ComponentFactory.extend,\n        override: ComponentFactory.override,\n        build: ComponentFactory.build,\n        getRegistry: ComponentFactory.getComponentRegistry,\n        getTemplate: ComponentFactory.getComponentTemplate\n    },\n    Template: {\n        register: TemplateFactory.registerComponentTemplate,\n        extend: TemplateFactory.extendComponentTemplate,\n        override: TemplateFactory.registerTemplateOverride,\n        getRenderedTemplate: TemplateFactory.getRenderedTemplate,\n        getRegistry: TemplateFactory.getTemplateRegistry,\n        getOverrideRegistry: TemplateFactory.getTemplateRegistry,\n        find: TemplateFactory.findCustomTemplate,\n        findOverride: TemplateFactory.findCustomTemplate\n    },\n    Utils: utils.default,\n    Application: application\n};\n\nmodule.exports = exposedInterface;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/common.js\n// module id = 223\n// module chunks = 2","import utils from 'src/core/service/util.service';\n\nexport default {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry\n};\n\n/** @type Map modules - Registry for modules */\nconst modules = new Map();\n\n/**\n * Returns the registry of all modules mounted in the application.\n *\n * @returns {Map} modules - Registry of all modules\n */\nfunction getModuleRegistry() {\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n *\n * @param {String} moduleId - The machine readable name which is used as an identifier for the module\n * @param {Object} module - Module definition - see manifest.js file\n * @returns {Boolean|Object} moduleDefinition - registered module definition\n */\nfunction registerModule(moduleId, module) {\n    const moduleRoutes = new Map();\n    const type = module.type || 'plugin';\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        utils.warn(\n            'ModuleFactory',\n            'Module has no unique identifier \"id\". Abort registration.',\n            module\n        );\n        return false;\n    }\n\n    if (modules.has(moduleId)) {\n        utils.warn(\n            'ModuleFactory',\n            `A module with the identifier \"${moduleId}\" is registered already. Abort registration.`,\n            modules.get(moduleId)\n        );\n\n        return false;\n    }\n\n    const splitModuleId = moduleId.split('-');\n\n    if (splitModuleId.length < 2) {\n        utils.warn(\n            'ModuleFactory',\n            'Module identifier does not match the necessary format \"[namespace]-[name]\":',\n            moduleId,\n            'Abort registration.'\n        );\n        return false;\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it isn't accessible in the application.\n    if (!Object.prototype.hasOwnProperty.call(module, 'routes')) {\n        utils.warn(\n            'ModuleFactory',\n            `Module \"${moduleId}\" has no configured routes. The module will not be accessible in the administration UI.`,\n            'Abort registration.',\n            module\n        );\n        return false;\n    }\n\n    // Sanitize the modules routes\n    Object.keys(module.routes).forEach((routeKey) => {\n        const route = module.routes[routeKey];\n\n        // Rewrite name and path\n        route.name = `${splitModuleId.join('.')}.${routeKey}`;\n        route.path = `/${splitModuleId.join('/')}/${route.path}`;\n        route.type = type;\n\n        const componentList = {};\n        if (route.components && Object.keys(route.components).length) {\n            Object.keys(route.components).forEach((componentKey) => {\n                const component = route.components[componentKey];\n\n                // Don't register a component without a name\n                if (!component.length || component.length <= 0) {\n                    utils.warn(\n                        'ModuleFactory',\n                        `The route definition of module \"${moduleId}\" is not valid. \n                        A route needs an assigned component name.`\n                    );\n                    return;\n                }\n\n                componentList[componentKey] = component;\n            });\n\n            route.components = componentList;\n        } else {\n            if (!route.component || !route.component.length) {\n                utils.warn(\n                    'ModuleFactory',\n                    `The route definition of module \"${moduleId}\" is not valid. \n                    A route needs an assigned component name.`\n                );\n                return;\n            }\n\n            route.components = {\n                default: route.component\n            };\n\n            // Remove the component cause we remapped it to the components object of the route object\n            delete route.component;\n        }\n\n        // Alias support\n        if (route.alias && route.alias.length > 0) {\n            route.alias = `/${splitModuleId.join('/')}/${route.alias}`;\n        }\n\n        moduleRoutes.set(route.name, route);\n    });\n\n    // When we're not having at least one valid route definition we're not registering the module\n    if (moduleRoutes.size === 0) {\n        utils.warn(\n            'ModuleFactory',\n            `The module \"${moduleId}\" was not registered cause it hasn't a valid route definition`,\n            'Abort registration.',\n            module.routes\n        );\n        return false;\n    }\n\n    const moduleDefinition = {\n        routes: moduleRoutes,\n        manifest: module,\n        type\n    };\n\n    // Add the navigation of the module to the module definition. We'll create a menu entry later on\n    if (Object.prototype.hasOwnProperty.bind(module, 'navigation') && module.navigation) {\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    modules.set(moduleId, moduleDefinition);\n\n    return moduleDefinition;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n *\n * @returns {Array} route definitions - see {@link https://router.vuejs.org/en/essentials/named-routes.html}\n */\nfunction getModuleRoutes() {\n    const moduleRoutes = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            moduleRoutes.push(route);\n        });\n    });\n\n    return moduleRoutes;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/module.factory.js","import utils from 'src/core/service/util.service';\nimport TemplateFactory from 'src/core/factory/template.factory';\n\nexport default {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry,\n    getOverrideRegistry\n};\n\n/** @type Map componentRegistry - Registry which holds all component registry */\nconst componentRegistry = new Map();\n\n/** @type Map overrideRegistry - Registry which holds all component overrides */\nconst overrideRegistry = new Map();\n\n/**\n * Returns the map with all registered components.\n *\n * @returns {Map}\n */\nfunction getComponentRegistry() {\n    return componentRegistry;\n}\n\n/**\n * Returns the map with all registered component overrides.\n *\n * @returns {Map}\n */\nfunction getOverrideRegistry() {\n    return overrideRegistry;\n}\n\n/**\n * Register a new component.\n *\n * @param {String} componentName\n * @param {Object} [componentConfiguration={}]\n * @returns {Boolean|Object}\n */\nfunction register(componentName, componentConfiguration = {}) {\n    const config = componentConfiguration;\n\n    if (!componentName || !componentName.length) {\n        utils.warn(\n            'ComponentFactory',\n            'A component always needs a name.',\n            componentConfiguration\n        );\n        return false;\n    }\n\n    if (componentRegistry.has(componentName)) {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            config\n        );\n        return false;\n    }\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${config.name}\" needs a template to be functional.`,\n            'Please add a \"template\" property to your component definition',\n            config\n        );\n        return false;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n *\n * @param {String} componentName\n * @param {String} extendComponentName\n * @param {Object} componentConfiguration\n * @returns {Object} config\n */\nfunction extend(componentName, extendComponentName, componentConfiguration) {\n    const config = componentConfiguration;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config.name = componentName;\n    config.extends = extendComponentName;\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n *\n * @param componentName\n * @param componentConfiguration\n * @param overrideIndex\n * @returns {*}\n */\nfunction override(componentName, componentConfiguration, overrideIndex = null) {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, config);\n    } else {\n        overrides.push(config);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getComponentTemplate(componentName) {\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n/**\n * Returns the complete component including extension and overrides.\n *\n * @param componentName\n * @param skipTemplate\n * @returns {*}\n */\nfunction build(componentName, skipTemplate = false) {\n    if (!componentRegistry.has(componentName)) {\n        return false;\n    }\n\n    let config = Object.create(componentRegistry.get(componentName));\n\n    if (config.extends) {\n        const extendComp = build(config.extends, true);\n\n        if (extendComp) {\n            config.extends = extendComp;\n        } else {\n            delete config.extends;\n        }\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        const overrides = overrideRegistry.get(componentName);\n\n        overrides.forEach((overrideComp) => {\n            const comp = Object.create(overrideComp);\n\n            comp.extends = Object.create(config);\n            config = comp;\n        });\n    }\n\n    /**\n     * Get the final template result including all overrides or extensions.\n     */\n    if (skipTemplate !== true) {\n        config.template = getComponentTemplate(componentName);\n    } else {\n        delete config.template;\n    }\n\n    return config;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/component.factory.js","/* global Shopware */\n\n/**\n * The application bootstrapper bootstraps the application and registers the necessary\n * and optional parts of the application in a shared DI container which provides you\n * with an easy-to-use way to add new services as well as decoration these services.\n *\n * The bootstrapper provides you with the ability to register middleware for all or specific\n * services too.\n *\n * @class\n */\nexport default class ApplicationBootstrapper {\n    /**\n     * Provides the necessary class properties for the class to work probably\n     *\n     * @constructor\n     * @param {Bottle} container\n     */\n    constructor(container) {\n        const noop = () => {};\n        this.$container = container;\n\n        // Create an empty DI container for the core initializers & services, so we can separate the core initializers\n        // and the providers\n        this.$container.service('service', noop);\n        this.$container.service('init', noop);\n    }\n\n    /**\n     * Returns all containers. Use this method if you're want to get initializers in your services.\n     *\n     * @param {String=} containerName Name of the nested container. \"init\" & \"service\" are the core containers.\n     * @returns {Bottle.IContainer}\n     */\n    getContainer(containerName) {\n        const containerNames = this.$container.list();\n\n        if (containerNames.indexOf(containerName) !== -1) {\n            return this.$container.container[containerName];\n        }\n        return this.$container.container;\n    }\n\n    /**\n     * Adds an initializer to the application. An initializer is a necessary part of the application which needs to be\n     * initialized before we can boot up the application.\n     *\n     * The initializer will be registered in a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addInitializer('httpClient', (container) => {\n     *    return HttpFactory(container.contextService);\n     * });\n     *\n     * @param {String} name Name of the initializer\n     * @param {Function} initializer Factory method\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializer(name, initializer) {\n        this.$container.factory(`init.${name}`, initializer.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers optional services & provider for the application. Services are usually\n     * API gateways but can be a simple service.\n     *\n     * The service will be added to a nested DI container.\n     *\n     * @example\n     * Shopware.Application.addServiceProvider('productService', (container) => {\n     *    return new ProductApiService(container.mediaService);\n     * });\n     *\n     * @param {String} name Name of the service\n     * @param {Function} provider Factory method for the service\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProvider(name, provider) {\n        this.$container.factory(`service.${name}`, provider.bind(this));\n        return this;\n    }\n\n    /**\n     * Registers the application context (api path, path to resources etc.)\n     *\n     * @param {Object} context\n     * @returns {ApplicationBootstrapper}\n     */\n    registerContext(context) {\n        return this.addInitializer('context', () => {\n            return context;\n        });\n    }\n\n    /**\n     * Registers an initializer middleware for either every initializer in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addInitializerMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addInitializerMiddleware('httpClient', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializerMiddleware(...args) {\n        return this._addMiddleware('init', args);\n    }\n\n    /**\n     * Registers a service provider middleware for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderMiddleware('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProviderMiddleware(...args) {\n        return this._addMiddleware('service', args);\n    }\n\n    /**\n     * Helper method which registers a middleware\n     *\n     * @param {String} containerName\n     * @param {Array} args\n     * @returns {ApplicationBootstrapper}\n     * @private\n     */\n    _addMiddleware(containerName, args) {\n        const name = (args.length > 1 ? `${containerName}.${args[0]}` : containerName);\n        const middlewareFn = (args.length > 1 ? args[1] : args[0]);\n\n        this.$container.middleware(name, middlewareFn);\n\n        return this;\n    }\n\n    /**\n     * Registers a decorator for either every initializer in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addInitializerDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addInitializerDecorator('httpClient', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addInitializerDecorator(...args) {\n        return this._addDecorator('init', args);\n    }\n\n    /**\n     * Registers a service provider decorator for either every service provider in the container or a defined one.\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator((container, next) => {\n     *    // Do something with the container\n     *    next();\n     * });\n     *\n     * @example\n     * Shopware.Application.addServiceProviderDecorator('productService', (service, next) => {\n     *    // Do something with the service\n     *    next();\n     * });\n     *\n     * @param args\n     * @returns {ApplicationBootstrapper}\n     */\n    addServiceProviderDecorator(...args) {\n        return this._addDecorator('service', args);\n    }\n\n    /**\n     * Helper method which registers a decorator\n     *\n     * @param {String} containerName\n     * @param {Array} args\n     * @returns {ApplicationBootstrapper}\n     * @private\n     */\n    _addDecorator(containerName, args) {\n        const name = (args.length > 1 ? `${containerName}.${args[0]}` : containerName);\n        const middlewareFn = (args.length > 1 ? args[1] : args[0]);\n\n        this.$container.decorator(name, middlewareFn);\n\n        return this;\n    }\n\n    /**\n     * Starts the bootstrapping process of the application.\n     *\n     * @param context\n     */\n    start(context = {}) {\n        this.registerContext(context)\n            .createApplicationRoot();\n    }\n\n    /**\n     * Returns the root of the application e.g. a new Vue instance\n     *\n     * @returns {Boolean|Vue}\n     */\n    getApplicationRoot() {\n        if (!this.applicationRoot) {\n            return false;\n        }\n\n        return this.applicationRoot;\n    }\n\n    /**\n     * Creates the application root and injects the provider container into the\n     * view instance to keep the dependency injection of Vue.js in place.\n     *\n     * @returns {ApplicationBootstrapper}\n     */\n    createApplicationRoot() {\n        const container = this.getContainer('init');\n        const router = container.router;\n        const view = container.view;\n\n        this.applicationRoot = view.createInstance(\n            '#app',\n            router,\n            this.getContainer('service')\n        );\n\n        return this;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/application.js","import Twig from 'twig';\nimport utils from 'src/core/service/util.service';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    getTemplateOverrides,\n    getTemplateRegistry,\n    findCustomTemplate,\n    findCustomOverride,\n    clearTwigCache,\n    getTwigCache,\n    disableTwigCache\n};\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map}\n */\nconst templateRegistry = new Map();\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend((TwigCore) => {\n    /**\n     * Remove tokens 2, 3, 4 and 8.\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {[*]}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10]\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent\n            };\n        }\n    });\n\n    /** Make the placeholders available in the exposed Twig object. */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n\n    /** Make the Twig template cache registry available. */\n    TwigCore.exports.getRegistry = function getRegistry() {\n        return TwigCore.Templates.registry;\n    };\n\n    /** Provide possibility to clear the template cache registry */\n    TwigCore.exports.clearRegistry = function clearRegistry() {\n        TwigCore.Templates.registry = {};\n    };\n});\n\n/**\n * Registers the main template for the defined component.\n *\n * @param componentName\n * @param componentTemplate\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    /**\n     * If there is no template given, search the DOM.\n     */\n    if (componentTemplate === null) {\n        componentTemplate = findCustomTemplate(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: componentTemplate\n    };\n\n    try {\n        template.baseTemplate = Twig.twig(templateConfig);\n    } catch (error) {\n        utils.warn(error.message);\n        return false;\n    }\n\n    templateRegistry.set(componentName, template);\n    return true;\n}\n\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @param componentName\n * @param extendComponentName\n * @param templateExtension\n */\nfunction extendComponentTemplate(componentName, extendComponentName, templateExtension = null) {\n    if (!templateRegistry.has(extendComponentName)) {\n        if (templateExtension !== null) {\n            registerComponentTemplate(componentName, templateExtension);\n        }\n\n        return;\n    }\n\n    const extendTemplate = templateRegistry.get(extendComponentName);\n    const template = templateRegistry.get(componentName) || {};\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: extendTemplate.baseTemplate.tokens\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n\n    if (templateExtension !== null) {\n        registerTemplateOverride(componentName, templateExtension);\n    }\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @param componentName\n * @param templateOverride\n * @param overrideIndex\n */\nfunction registerTemplateOverride(componentName, templateOverride = null, overrideIndex = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    template.overrides = template.overrides || [];\n\n    if (templateOverride === null) {\n        templateOverride = findCustomOverride(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-${template.overrides.length}`,\n        data: templateOverride\n    };\n\n    const override = Twig.twig(templateConfig);\n\n    /**\n     * You can change the inheritance order by defining the override index.\n     */\n    if (overrideIndex !== null) {\n        template.overrides.splice(overrideIndex, 0, override);\n    } else {\n        template.overrides.push(override);\n    }\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return '';\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    if (!template.baseTemplate) {\n        return '';\n    }\n\n    /**\n     * The base template is the main template of the component.\n     */\n    const baseTemplate = template.baseTemplate;\n    const overrides = template.overrides;\n    const parentPlaceholder = Twig.placeholders.parent;\n    const blocks = {};\n\n    baseTemplate.render();\n\n    /**\n     * Iterate through template extensions and collect all block overrides.\n     */\n    if (overrides) {\n        overrides.forEach((override) => {\n            const templateBlocks = override.render({}, {\n                output: 'blocks'\n            });\n\n            /**\n             * Replace the parent placeholder with the parent block.\n             * This ensures multi level inheritance.\n             */\n            Object.keys(blocks).forEach((blockName) => {\n                if (templateBlocks[blockName]) {\n                    templateBlocks[blockName] = templateBlocks[blockName].replace(\n                        parentPlaceholder,\n                        blocks[blockName]\n                    );\n                }\n            });\n\n            Object.assign(blocks, templateBlocks);\n        });\n    }\n\n    /**\n     * Render the base template with all collected block overrides.\n     */\n    return baseTemplate.render({}, {\n        blocks\n    });\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Get the complete template registry.\n *\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Find a component template in the DOM.\n * You can define component templates by creating a template element with a `component` attribute.\n * The attribute should contain the name of the component.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomTemplate(componentName) {\n    const element = document.querySelector(`template[component=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n/**\n * Find a template override in the DOM.\n * You can define template overrides by creating a template element with a `override` attribute.\n * The attribute should contain the name of the component you want to override.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomOverride(componentName) {\n    const element = document.querySelector(`template[override=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\nfunction clearTwigCache() {\n    Twig.clearRegistry();\n}\n\nfunction getTwigCache() {\n    return Twig.getRegistry();\n}\n\nfunction disableTwigCache() {\n    Twig.cache(false);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/template.factory.js","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 91\n// module chunks = 2"],"sourceRoot":""}