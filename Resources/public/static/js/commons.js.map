{"version":3,"sources":["webpack:///./src/core/factory/template.factory.js","webpack:///fs (ignored)","webpack:///./src/core/service/util.service.js","webpack:///./src/core/common.js","webpack:///./src/core/common.js?62aa","webpack:///./src/core/factory/module.factory.js","webpack:///./src/core/factory/module.factory.js?39bc","webpack:///./src/core/factory/component.factory.js?498c","webpack:///./src/core/factory/component.factory.js","webpack:///./src/core/factory/view.factory.js","webpack:///./src/core/factory/router.factory.js"],"names":["registerComponentTemplate","extendComponentTemplate","registerTemplateOverride","getRenderedTemplate","getTemplateOverrides","getTemplateRegistry","findCustomTemplate","findCustomOverride","templateRegistry","Twig","extend","TwigCore","token","definitions","exports","extendTag","type","regex","next","open","parse","context","chain","output","placeholders","parent","componentName","componentTemplate","template","get","templateConfig","id","data","baseTemplate","twig","set","extendComponentName","templateExtension","has","extendTemplate","tokens","templateOverride","overrideIndex","overrides","length","override","splice","push","parentPlaceholder","blocks","render","forEach","templateBlocks","blockName","replace","element","document","querySelector","innerHTML","merge","formDataToObject","warn","currency","date","getObjectChangeSet","createUuid","isObject","isEmpty","isArray","isFunction","isDate","target","source","key","Object","formData","reduce","result","item","name","message","unshift","console","apply","val","sign","opts","style","language","toLocaleString","object","array","Array","func","dateObject","Date","baseObject","compareObject","valueOf","b","c","acc","hasOwnProperty","arrayDiff","getArrayChangeSet","diff","uuid","baseArray","compareArray","filter","indexOf","value","index","diffObject","find","compareItem","module","global","require","componentRegistry","overrideRegistry","getComponentRegistry","register","componentConfiguration","config","utils","TemplateFactory","extends","getComponentTemplate","build","getExtendedComponent","overrideComp","mergeConfig","extendComponent","mergedData","additionalSources","ViewFactory","viewAdapter","getName","wrapper","getWrapper","createInstance","createComponent","initComponents","getComponent","getComponents","createRouter","Router","View","allRoutes","moduleRoutes","addRoutes","addModuleRoutes","createRouterInstance","getViewComponent","mergedRoutes","registerModuleRoutesAsChildren","options","routes","router","beforeRouterInterceptor","beforeEach","to","from","moduleRegistry","Shopware","ModuleFactory","getModuleRegistry","moduleNamespace","split","meta","$module","manifest","core","map","route","root","coreRoute","children","convertRouteComponentToViewComponent","prototype","call","components","componentList","componentKey","component"],"mappings":"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","file":"static/js/commons.js","sourcesContent":["import Twig from 'twig';\n\nexport default {\n    registerComponentTemplate,\n    extendComponentTemplate,\n    registerTemplateOverride,\n    getRenderedTemplate,\n    getTemplateOverrides,\n    getTemplateRegistry,\n    findCustomTemplate,\n    findCustomOverride\n};\n\n/**\n * Holds a list with all registered component templates.\n * Including registered overrides.\n *\n * @type {Map}\n */\nconst templateRegistry = new Map();\n\n/**\n * Extends the Twig core for compatibility.\n */\nTwig.extend((TwigCore) => {\n    /**\n     * Remove tokens 2, 3, 4 and 8.\n     * This tokens are used for functions and data output.\n     * Since the data binding is done in Vue this could lead to syntax issues.\n     * We are only using the block system for template inheritance.\n     *\n     * @type {[*]}\n     */\n    TwigCore.token.definitions = [\n        TwigCore.token.definitions[0],\n        TwigCore.token.definitions[1],\n        TwigCore.token.definitions[5],\n        TwigCore.token.definitions[6],\n        TwigCore.token.definitions[7],\n        TwigCore.token.definitions[9],\n        TwigCore.token.definitions[10]\n    ];\n\n    /**\n     * Twig inheritance extension.\n     * The parent function is used as a statement tag.\n     * This is used to prevent syntax issues between Twig and Vue.\n     * Use `{% parent %}` to print out the parent content of a block.\n     */\n    TwigCore.exports.extendTag({\n        type: 'parent',\n        regex: /^parent/,\n        next: [],\n        open: true,\n\n        parse(token, context, chain) {\n            return {\n                chain,\n                output: TwigCore.placeholders.parent\n            };\n        }\n    });\n\n    /**\n     * Make the placeholders available in the exposed Twig object.\n     */\n    TwigCore.exports.placeholders = TwigCore.placeholders;\n});\n\n/**\n * Registers the main template for the defined component.\n *\n * @param componentName\n * @param componentTemplate\n */\nfunction registerComponentTemplate(componentName, componentTemplate = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    /**\n     * If there is no template given, search the DOM.\n     */\n    if (componentTemplate === null) {\n        componentTemplate = findCustomTemplate(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: componentTemplate\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Registers the main template for the component\n * based on the template of the extended component.\n * If the component comes with an own template extension\n * it will also be registered as an override of the extended template.\n *\n * @param componentName\n * @param extendComponentName\n * @param templateExtension\n */\nfunction extendComponentTemplate(componentName, extendComponentName, templateExtension = null) {\n    if (!templateRegistry.has(extendComponentName)) {\n        if (templateExtension !== null) {\n            registerComponentTemplate(componentName, templateExtension);\n        }\n\n        return;\n    }\n\n    const extendTemplate = templateRegistry.get(extendComponentName);\n    const template = templateRegistry.get(componentName) || {};\n\n    const templateConfig = {\n        id: `${componentName}-baseTemplate`,\n        data: extendTemplate.baseTemplate.tokens\n    };\n\n    template.baseTemplate = Twig.twig(templateConfig);\n\n    templateRegistry.set(componentName, template);\n\n    if (templateExtension !== null) {\n        registerTemplateOverride(componentName, templateExtension);\n    }\n}\n\n/**\n * Registers an override of a component template.\n * The override can be registered before the main template is defined.\n *\n * @param componentName\n * @param templateOverride\n * @param overrideIndex\n */\nfunction registerTemplateOverride(componentName, templateOverride = null, overrideIndex = null) {\n    const template = templateRegistry.get(componentName) || {};\n\n    template.overrides = template.overrides || [];\n\n    if (templateOverride === null) {\n        templateOverride = findCustomOverride(componentName);\n    }\n\n    const templateConfig = {\n        id: `${componentName}-${template.overrides.length}`,\n        data: templateOverride\n    };\n\n    const override = Twig.twig(templateConfig);\n\n    /**\n     * You can change the inheritance order by defining the override index.\n     */\n    if (overrideIndex !== null) {\n        template.overrides.splice(overrideIndex, 0, override);\n    } else {\n        template.overrides.push(override);\n    }\n\n    templateRegistry.set(componentName, template);\n}\n\n/**\n * Returns the rendered markup for the component template including all template overrides.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getRenderedTemplate(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return '';\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    if (!template.baseTemplate) {\n        return '';\n    }\n\n    /**\n     * The base template is the main template of the component.\n     */\n    const baseTemplate = template.baseTemplate;\n    const overrides = template.overrides;\n    const parentPlaceholder = Twig.placeholders.parent;\n    const blocks = {};\n\n    baseTemplate.render();\n\n    /**\n     * Iterate through template extensions and collect all block overrides.\n     */\n    if (overrides) {\n        overrides.forEach((override) => {\n            const templateBlocks = override.render({}, {\n                output: 'blocks'\n            });\n\n            /**\n             * Replace the parent placeholder with the parent block.\n             * This ensures multi level inheritance.\n             */\n            Object.keys(blocks).forEach((blockName) => {\n                if (templateBlocks[blockName]) {\n                    templateBlocks[blockName] = templateBlocks[blockName].replace(\n                        parentPlaceholder,\n                        blocks[blockName]\n                    );\n                }\n            });\n\n            Object.assign(blocks, templateBlocks);\n        });\n    }\n\n    /**\n     * Render the base template with all collected block overrides.\n     */\n    return baseTemplate.render({}, {\n        blocks\n    });\n}\n\n/**\n * Get all template overrides which are registered for a component.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getTemplateOverrides(componentName) {\n    if (!templateRegistry.has(componentName)) {\n        return [];\n    }\n\n    const template = templateRegistry.get(componentName);\n\n    return template.overrides || [];\n}\n\n/**\n * Get the complete template registry.\n *\n * @returns {Map}\n */\nfunction getTemplateRegistry() {\n    return templateRegistry;\n}\n\n/**\n * Find a component template in the DOM.\n * You can define component templates by creating a template element with a `component` attribute.\n * The attribute should contain the name of the component.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomTemplate(componentName) {\n    const element = document.querySelector(`template[component=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n/**\n * Find a template override in the DOM.\n * You can define template overrides by creating a template element with a `override` attribute.\n * The attribute should contain the name of the component you want to override.\n *\n * @param componentName\n * @returns {String}\n */\nfunction findCustomOverride(componentName) {\n    const element = document.querySelector(`template[override=\"${componentName}\"]`);\n\n    return (element !== null) ? element.innerHTML : '';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/template.factory.js","/* (ignored) */\n\n\n//////////////////\n// WEBPACK FOOTER\n// fs (ignored)\n// module id = 118\n// module chunks = 2","import uuidv4 from 'uuid/v4';\n\nexport default {\n    merge,\n    formDataToObject,\n    warn,\n    currency,\n    date,\n    getObjectChangeSet,\n    createUuid: uuidv4,\n    isObject,\n    isEmpty,\n    isArray,\n    isFunction,\n    isDate\n};\n\n// Todo: This has an issue when you want to copy into a new object\nfunction merge(target, source) {\n    Object.keys(source).forEach((key) => {\n        if (source[key] instanceof Object) {\n            if (!target[key]) {\n                Object.assign(target, { [key]: {} });\n            }\n            Object.assign(source[key], merge(target[key], source[key]));\n        }\n    });\n\n    Object.assign(target || {}, source);\n    return target;\n}\n\n/**\n * Transforms FormData to a plain & simple object which can be used with the HTTP client for example.\n *\n * @param {FormData} formData\n * @returns {Object}\n */\nfunction formDataToObject(formData) {\n    return Array.from(formData).reduce((result, item) => {\n        result[item[0]] = item[1];\n        return result;\n    }, {});\n}\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n *\n * @param {String} name\n * @param {String|Object|Array} message\n */\nfunction warn(name = 'Core', ...message) {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        console.warn.apply(this, message);\n    }\n}\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @returns {string} Formatted string\n */\nfunction currency(val, sign) {\n    const opts = {\n        style: 'currency',\n        currency: sign || 'EUR'\n    };\n    let language = 'de-DE';\n    if (opts.currency === 'USD') {\n        language = 'en-US';\n    }\n    return val.toLocaleString(language, opts);\n}\n\nfunction date(val) {\n    return val.toLocaleString('de-DE');\n}\n\nfunction isObject(object) {\n    return object !== null && typeof object === 'object';\n}\n\nfunction isEmpty(object) {\n    return Object.keys(object).length === 0;\n}\n\nfunction isArray(array) {\n    return Array.isArray(array);\n}\n\nfunction isFunction(func) {\n    return func !== null && typeof func === 'function';\n}\n\nfunction isDate(dateObject) {\n    return dateObject instanceof Date;\n}\n\nfunction getObjectChangeSet(baseObject, compareObject) {\n    if (baseObject === compareObject) {\n        return {};\n    }\n\n    if (!isObject(baseObject) || !isObject(compareObject)) {\n        return compareObject;\n    }\n\n    if (isDate(baseObject) || isDate(compareObject)) {\n        if (baseObject.valueOf() === compareObject.valueOf()) {\n            return {};\n        }\n\n        return compareObject;\n    }\n\n    const b = { ...baseObject };\n    const c = { ...compareObject };\n\n    return Object.keys(c).reduce((acc, key) => {\n        if (b.hasOwnProperty(key)) {\n            if (isArray(b[key])) {\n                const arrayDiff = getArrayChangeSet(b[key], c[key]);\n\n                if (isArray(arrayDiff) && arrayDiff.length === 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: arrayDiff };\n            }\n\n            const diff = getObjectChangeSet(b[key], c[key]);\n\n            if (isObject(diff) && isEmpty(diff) && !isDate(diff)) {\n                return acc;\n            }\n\n            if (isObject(b[key]) && b[key].uuid) {\n                diff.uuid = b[key].uuid;\n            }\n\n            return { ...acc, [key]: diff };\n        }\n\n        return acc;\n    }, {});\n}\n\nfunction getArrayChangeSet(baseArray, compareArray) {\n    if (baseArray === compareArray) {\n        return [];\n    }\n\n    if (!isArray(baseArray) || !isArray(compareArray)) {\n        return compareArray;\n    }\n\n    if (baseArray.length === 0) {\n        return compareArray;\n    }\n\n    if (compareArray.length === 0) {\n        return baseArray;\n    }\n\n    const b = [...baseArray];\n    const c = [...compareArray];\n\n    if (!isObject(b[0]) || !isObject(c[0])) {\n        return c.filter(value => b.indexOf(value) < 0);\n    }\n\n    const diff = [];\n\n    c.forEach((item, index) => {\n        if (!item.uuid) {\n            const diffObject = getObjectChangeSet(b[index], c[index]);\n\n            if (isObject(diffObject) && !isEmpty(diffObject)) {\n                diff.push(diffObject);\n            }\n        } else {\n            const compareObject = b.find((compareItem) => {\n                return item.uuid === compareItem.uuid;\n            });\n\n            if (!compareObject) {\n                diff.push(item);\n            } else {\n                const diffObject = getObjectChangeSet(compareObject, item);\n\n                if (isObject(diffObject) && !isEmpty(diffObject)) {\n                    diff.push({ ...diffObject, uuid: item.uuid });\n                }\n            }\n        }\n    });\n\n    return diff;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/service/util.service.js","module.exports = global[\"Shopware\"] = require(\"-!/mnt/c/Users/p.schuch/Documents/Projects/next/src/Administration/Resources/administration/node_modules/eslint-loader/index.js??ref--0!./common.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/common.js","const ModuleFactory = require('src/core/factory/module.factory');\nconst ComponentFactory = require('src/core/factory/component.factory');\nconst utils = require('src/core/service/util.service');\nconst TemplateFactory = require('src/core/factory/template.factory');\nconst ViewFactory = require('src/core/factory/view.factory');\nconst RouterFactory = require('src/core/factory/router.factory');\n\nmodule.exports = {\n    ModuleFactory,\n    ComponentFactory,\n    TemplateFactory,\n    ViewFactory,\n    RouterFactory,\n    utils\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/common.js\n// module id = 281\n// module chunks = 2","module.exports = global[\"ModuleFactory\"] = require(\"-!/mnt/c/Users/p.schuch/Documents/Projects/next/src/Administration/Resources/administration/node_modules/eslint-loader/index.js??ref--0!./module.factory.js\");\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/module.factory.js","import utils from 'src/core/service/util.service';\n\nexport {\n    getModuleRoutes,\n    registerModule,\n    getModuleRegistry\n};\n\n/** @type Map modules - Registry for modules */\nconst modules = new Map();\n\n/**\n * Returns the registry of all modules mounted in the application.\n *\n * @returns {Map} modules - Registry of all modules\n */\nfunction getModuleRegistry() {\n    return modules;\n}\n\n/**\n * Registers a module in the application. The module will be mounted using\n * the defined routes of the module using the router.\n *\n * @param {Object} module - Module definition - see manifest.js file\n * @param {String} [type=plugin] - Type of the module\n * @returns {Map} moduleRoutes - registered module routes\n */\nfunction registerModule(module, type = 'plugin') {\n    const moduleRoutes = new Map();\n    const moduleId = module.id;\n\n    // A module should always have an unique identifier cause overloading modules can cause unexpected side effects\n    if (!moduleId) {\n        utils.warn(\n            'ModuleFactory',\n            'Module has no unique identifier \"id\"',\n            module\n        );\n    }\n\n    // Modules will be mounted using the routes definition in the manifest file. If the module doesn't contains a routes\n    // definition it's not accessible in the application.\n    if (!Object.prototype.hasOwnProperty.call(module, 'routes')) {\n        utils.warn(\n            'ModuleFactory',\n            `Module \"${moduleId}\" has no configured routes. The module will not be accessible in the administration UI.`,\n            module\n        );\n        return moduleRoutes;\n    }\n\n    // Sanitize the modules routes\n    Object.keys(module.routes).forEach((routeKey) => {\n        const route = module.routes[routeKey];\n\n        // Rewrite name and path\n        route.name = `${moduleId}.${routeKey}`;\n        route.path = `/${type}/${route.path}`;\n        route.type = type;\n\n        const componentList = {};\n        if (route.components && Object.keys(route.components).length) {\n            Object.keys(route.components).forEach((componentKey) => {\n                const component = route.components[componentKey];\n                componentList[componentKey] = component.name;\n            });\n\n            route.components = componentList;\n        } else {\n            route.components = {\n                default: route.component.name\n            };\n\n            // Remove the component cause we remapped it to the components object of the route object\n            delete route.component;\n        }\n\n        // Alias support\n        if (route.alias && route.alias.length > 0) {\n            route.alias = `/${type}/${route.alias}`;\n        }\n\n        moduleRoutes.set(route.name, route);\n    });\n\n    const moduleDefinition = {\n        routes: moduleRoutes,\n        manifest: module\n    };\n\n    if (Object.prototype.hasOwnProperty.bind(module, 'navigation') && module.navigation) {\n        moduleDefinition.navigation = module.navigation;\n    }\n\n    modules.set(moduleId, moduleDefinition);\n    return moduleRoutes;\n}\n\n/**\n * Returns the defined module routes which will be registered in the router and therefore will be accessible in the\n * application.\n *\n * @returns {Array} route definitions - see {@link https://router.vuejs.org/en/essentials/named-routes.html}\n */\nfunction getModuleRoutes() {\n    const moduleRoutes = [];\n\n    modules.forEach((module) => {\n        module.routes.forEach((route) => {\n            moduleRoutes.push(route);\n        });\n    });\n    return moduleRoutes;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/eslint-loader?{}!./src/core/factory/module.factory.js\n// module id = 283\n// module chunks = 2","module.exports = global[\"ComponentFactory\"] = require(\"-!/mnt/c/Users/p.schuch/Documents/Projects/next/src/Administration/Resources/administration/node_modules/babel-loader/lib/index.js??ref--3!/mnt/c/Users/p.schuch/Documents/Projects/next/src/Administration/Resources/administration/node_modules/eslint-loader/index.js??ref--0!./component.factory.js\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/core/factory/component.factory.js\n// module id = 316\n// module chunks = 2","import utils from 'src/core/service/util.service';\nimport TemplateFactory from 'src/core/factory/template.factory';\n\nexport {\n    register,\n    extend,\n    override,\n    build,\n    getComponentTemplate,\n    getComponentRegistry\n};\n\n/** @type Map componentRegistry - Registry which holds all component registry */\nconst componentRegistry = new Map();\n\n/** @type Map overrideRegistry - Registry which holds all component overrides */\nconst overrideRegistry = new Map();\n\n/**\n * Returns the map with all registered components.\n *\n * @returns {Map}\n */\nfunction getComponentRegistry() {\n    return componentRegistry;\n}\n\n/**\n * Register a new component.\n *\n * @param {String} componentName\n * @param {Object} [componentConfiguration={}]\n * @returns {*}\n */\nfunction register(componentName, componentConfiguration = {}) {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (componentRegistry.has(componentName)) {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${componentName}\" is already registered. Please select a unique name for your component.`,\n            config\n        );\n        return config;\n    }\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component.\n         */\n        TemplateFactory.registerComponentTemplate(componentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        utils.warn(\n            'ComponentFactory',\n            `The component \"${config.name}\" needs a template to be functional.`,\n            'Please add a \"template\" property to your component definition',\n            config\n        );\n        return config;\n    }\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Create a new component extending from another existing component.\n *\n * @param {String} componentName\n * @param {String} extendComponentName\n * @param {Object} componentConfiguration\n * @returns {Object} config\n */\nfunction extend(componentName, extendComponentName, componentConfiguration) {\n    const config = componentConfiguration;\n\n    if (config.template) {\n        /**\n         * Register the main template of the component based on the extended component.\n         */\n        TemplateFactory.extendComponentTemplate(name, extendComponentName, config.template);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    } else {\n        TemplateFactory.extendComponentTemplate(componentName, extendComponentName);\n    }\n\n    config.name = componentName;\n    config.extends = extendComponentName;\n\n    componentRegistry.set(componentName, config);\n\n    return config;\n}\n\n/**\n * Override an existing component including its config and template.\n *\n * ToDo: Keep reference to original config object.\n *\n * @param componentName\n * @param componentConfiguration\n * @param overrideIndex\n * @returns {*}\n */\nfunction override(componentName, componentConfiguration, overrideIndex = null) {\n    const config = componentConfiguration;\n\n    config.name = componentName;\n\n    if (config.template) {\n        /**\n         * Register a template override for the existing component template.\n         */\n        TemplateFactory.registerTemplateOverride(componentName, config.template, overrideIndex);\n\n        /**\n         * Delete the template string from the component config.\n         * The complete rendered template including all overrides will be added later.\n         */\n        delete config.template;\n    }\n\n    const overrides = overrideRegistry.get(componentName) || [];\n\n    if (overrideIndex !== null && overrideIndex >= 0 && overrides.length > 0) {\n        overrides.splice(overrideIndex, 0, config);\n    } else {\n        overrides.push(config);\n    }\n\n    overrideRegistry.set(componentName, overrides);\n\n    return config;\n}\n\n/**\n * Returns the complete rendered template of the component.\n *\n * @param componentName\n * @returns {string}\n */\nfunction getComponentTemplate(componentName) {\n    return TemplateFactory.getRenderedTemplate(componentName);\n}\n\n/**\n * Returns the complete component including extension and overrides.\n *\n * ToDo: Implement overrides for recursive extended components including the template.\n *\n * @param componentName\n * @returns {*}\n */\nfunction build(componentName) {\n    if (!componentRegistry.has(componentName)) {\n        return false;\n    }\n\n    let config = componentRegistry.get(componentName);\n\n    if (config.extends) {\n        config = getExtendedComponent(componentName);\n    }\n\n    if (overrideRegistry.has(componentName)) {\n        const overrides = overrideRegistry.get(componentName);\n\n        overrides.forEach((overrideComp) => {\n            config = mergeConfig(config, overrideComp);\n        });\n    }\n\n    /**\n     * Get the final template result including all overrides.\n     */\n    config.template = getComponentTemplate(componentName);\n\n    return config;\n}\n\n/**\n * Get the final version of an extended component.\n * Called recursively for multiple extended components.\n *\n * @param componentName\n * @returns {*}\n */\nfunction getExtendedComponent(componentName) {\n    if (!componentRegistry.has(componentName)) {\n        return {};\n    }\n\n    let config = componentRegistry.get(componentName);\n\n    if (!config.extends || !componentRegistry.has(config.extends)) {\n        return config;\n    }\n\n    const extendComponent = getExtendedComponent(componentRegistry.get(config.extends));\n\n    config = mergeConfig({}, extendComponent, config);\n\n    return config;\n}\n\nfunction mergeConfig(target, source, ...additionalSources) {\n    if (!utils.isObject(target) || !utils.isObject(source)) {\n        return source;\n    }\n\n    const parent = Object.assign({}, target);\n    const config = Object.assign({}, target);\n\n    Object.keys(source).forEach((key) => {\n        if (config.hasOwnProperty(key) && config[key] !== null) {\n            // Merge the special data function used for data binding\n            if (utils.isFunction(config[key]) && key === 'data') {\n                const mergedData = mergeConfig(config[key](), source[key]());\n\n                config[key] = function data() {\n                    return mergedData;\n                };\n            // Merge arrays\n            } else if (utils.isArray(config[key])) {\n                config[key] = [...config[key], ...source[key]];\n            // Deep merge objects\n            } else if (utils.isObject(source[key])) {\n                config[key] = mergeConfig(config[key], source[key]);\n            } else {\n                config[key] = source[key];\n            }\n        } else if (key !== 'parent') {\n            config[key] = source[key];\n        }\n    });\n\n    // Keep reference to original config\n    if (!utils.isEmpty(parent)) {\n        config.parent = parent;\n    }\n\n    if (additionalSources.length > 0) {\n        return mergeConfig(config, ...additionalSources);\n    }\n\n    return config;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/component.factory.js","export default function ViewFactory(viewAdapter) {\n    return {\n        name: viewAdapter.getName(),\n        wrapper: viewAdapter.getWrapper(),\n        createInstance: viewAdapter.createInstance,\n        createComponent: viewAdapter.createComponent,\n        initComponents: viewAdapter.initComponents,\n        getComponent: viewAdapter.getComponent,\n        getComponents: viewAdapter.getComponents\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/view.factory.js","export default function createRouter(Router, View) {\n    let allRoutes = [];\n    let moduleRoutes = [];\n\n    return {\n        addRoutes,\n        addModuleRoutes,\n        createRouterInstance,\n        getViewComponent\n    };\n\n    /**\n     * Creates the router instance for the application.\n     *\n     * @param {Object} [opts={}]\n     * @returns {VueRouter} router\n     */\n    function createRouterInstance(opts = {}) {\n        const mergedRoutes = registerModuleRoutesAsChildren(allRoutes, moduleRoutes);\n\n        const options = Object.assign({}, opts, {\n            routes: mergedRoutes\n        });\n\n        const router = new Router(options);\n\n        beforeRouterInterceptor(router);\n        return router;\n    }\n\n    /**\n     * Installs the navigation guard interceptor which provides every route, if possible, with the module definition.\n     * This is useful to generalize the route managing.\n     *\n     * @param {VueRouter} router\n     * @returns {VueRouter} router\n     */\n    function beforeRouterInterceptor(router) {\n        router.beforeEach((to, from, next) => {\n            // Hook prepared for login\n            /* if (to.name === 'login' || to.path === '/login') {\n                return next();\n             }\n\n             if (!app.state.state.bearerToken) {\n                return next({ path: '/login' });\n             } */\n\n            const moduleRegistry = Shopware.ModuleFactory.getModuleRegistry();\n\n            // Just get the first part of the name as the namespace\n            // The first part should be the module (e.g. core or plugin)\n            // The second part is the module indicator (index, list, detail etc.)\n            let moduleNamespace = to.name.split('.');\n            moduleNamespace = `${moduleNamespace[0]}.${moduleNamespace[1]}`;\n\n            // If the module namespace isn't registered, we let the router follow the route\n            if (!moduleRegistry.has(moduleNamespace)) {\n                return next();\n            }\n\n            // Just make sure the route name is matching the registered name to ensure we're injecting the correct\n            // module into the route definition\n            const module = moduleRegistry.get(moduleNamespace);\n            if (!module.routes.has(to.name)) {\n                return next();\n            }\n\n            to.meta.$module = module.manifest;\n            return next();\n        });\n\n        return router;\n    }\n\n    /**\n     * Registers the module routes as child routes of the root core route to automatically\n     * providing the administration base structure to every module.\n     *\n     * @param {Array} core - Core routes\n     * @param {Array} module - Module routes\n     * @returns {Array} core - new core routes definition\n     */\n    function registerModuleRoutesAsChildren(core, module) {\n        core.map((route) => {\n            if (route.root === true && route.coreRoute === true) {\n                route.children = module;\n            }\n\n            return route;\n        });\n\n        return core;\n    }\n\n    /**\n     * Registers the core module routes. The provided component name will be remapped to the corresponding\n     * view component.\n     *\n     * @param {Array} routes\n     * @returns {Array} moduleRoutes - converted routes array\n     */\n    function addModuleRoutes(routes) {\n        routes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        moduleRoutes = [...moduleRoutes, ...routes];\n\n        return moduleRoutes;\n    }\n\n    /**\n     * Registers module routes to the router. The method will loop through the provided routes\n     * and remaps the component names (e.g. either `route.component` or `route.components`) to\n     * the corresponding view component which should be registered under the same name.\n     *\n     * @param {Array} routes\n     * @returns {Array} allRoutes - converted routes array\n     */\n    function addRoutes(routes) {\n        routes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        allRoutes = [...allRoutes, ...routes];\n\n        return allRoutes;\n    }\n\n    /**\n     * Converts the `route.component` / `route.components` property which is usually a component name\n     * to a view component, so the router works with component instead of looking up component names\n     * in the internal registry of the view framework.\n     *\n     * @param {Object} route - Route definition\n     * @returns {Object} route - Converted route definition\n     */\n    function convertRouteComponentToViewComponent(route) {\n        if (Object.prototype.hasOwnProperty.call(route, 'components') && Object.keys(route.components).length) {\n            const componentList = {};\n\n            Object.keys(route.components).forEach((componentKey) => {\n                let component = route.components[componentKey];\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                componentList[componentKey] = component;\n            });\n            route.components = componentList;\n        }\n\n        if (typeof route.component === 'string') {\n            route.component = getViewComponent(route.component);\n        }\n\n        return route;\n    }\n\n    /**\n     *  Get a component using the argument `componentName` from the view layer.\n     * @param componentName\n     * @returns {Vue|null} - View component or null\n     */\n    function getViewComponent(componentName) {\n        return View.getComponent(componentName);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/core/factory/router.factory.js"],"sourceRoot":""}