{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/core/shopware.js","webpack:///./src/core/service/utils/file-reader.utils.js","webpack:///./src/core/service/util.service.js","webpack:///./src/module/sw-product/component/sw-product-basic-form/sw-product-basic-form.html.twig","webpack:///./src/module/sw-product/component/sw-product-category-form/sw-product-category-form.html.twig","webpack:///./src/module/sw-product/component/sw-product-price-form/sw-product-price-form.html.twig","webpack:///./src/module/sw-product/component/sw-product-settings-form/sw-product-settings-form.html.twig","webpack:///./src/module/sw-product/component/sw-product-file-upload/sw-product-file-upload.html.twig","webpack:///./src/module/sw-product/view/sw-product-detail-base/sw-product-detail-base.html.twig","webpack:///./src/module/sw-product/view/sw-product-detail-context-prices/sw-product-detail-context-prices.html.twig","webpack:///./src/module/sw-product/page/sw-product-list/sw-product-list.twig","webpack:///./src/module/sw-product/page/sw-product-detail/sw-product-detail.html.twig","webpack:///./src/module/sw-product/page/sw-product-create/sw-product-create.html.twig","webpack:///./src/module/sw-catalog/page/sw-catalog-list/sw-catalog-list.html.twig","webpack:///./src/module/sw-catalog/page/sw-catalog-detail/sw-catalog-detail.html.twig","webpack:///./src/module/sw-catalog/page/sw-catalog-create/sw-catalog-create.html.twig","webpack:///./src/module/sw-customer/page/sw-customer-list/sw-customer-list.html.twig","webpack:///./src/module/sw-customer/page/sw-customer-detail/sw-customer-detail.html.twig","webpack:///./src/module/sw-customer/page/sw-customer-create/sw-customer-create.html.twig","webpack:///./src/module/sw-customer/view/sw-customer-detail-base/sw-customer-detail-base.html.twig","webpack:///./src/module/sw-customer/view/sw-customer-detail-addresses/sw-customer-detail-addresses.html.twig","webpack:///./src/module/sw-customer/view/sw-customer-create-base/sw-customer-create-base.html.twig","webpack:///./src/module/sw-customer/component/sw-customer-base-form/sw-customer-base-form.html.twig","webpack:///./src/core/service/utils/object.utils.js","webpack:///./src/module/sw-customer/component/sw-customer-base-info/sw-customer-base-info.html.twig","webpack:///./src/module/sw-customer/component/sw-customer-address-form/sw-customer-address-form.html.twig","webpack:///./src/module/sw-customer/component/sw-customer-default-addresses/sw-customer-default-addresses.html.twig","webpack:///./src/module/sw-manufacturer/page/sw-manufacturer-list/sw-manufacturer-list.html.twig","webpack:///./src/module/sw-manufacturer/page/sw-manufacturer-detail/sw-manufacturer-detail.html.twig","webpack:///./src/module/sw-order/page/sw-order-list/sw-order-list.html.twig","webpack:///./src/module/sw-order/page/sw-order-detail/sw-order-detail.html.twig","webpack:///./src/module/sw-order/view/sw-order-detail-base/sw-order-detail-base.html.twig","webpack:///./src/module/sw-order/view/sw-order-detail-deliveries/sw-order-detail-deliveries.html.twig","webpack:///./src/module/sw-order/component/sw-order-line-items-grid/sw-order-line-items-grid.html.twig","webpack:///./src/module/sw-order/component/sw-order-delivery-line-items-grid/sw-order-delivery-line-items-grid.html.twig","webpack:///./src/module/sw-order/component/sw-order-delivery/sw-order-delivery.html.twig","webpack:///./src/module/sw-media/component/sw-media-modal-delete/sw-media-modal-delete.html.twig","webpack:///./src/module/sw-media/page/sw-media-index/sw-media-index.html.twig","webpack:///./src/module/sw-media/component/sw-media-upload/sw-media-upload.html.twig","webpack:///./src/module/sw-media/page/sw-media-catalog/sw-media-catalog.html.twig","webpack:///./src/module/sw-media/component/sw-media-modal-replace/sw-media-modal-replace.html.twig","webpack:///./src/module/sw-media/component/sidebar/sw-media-sidebar/sw-media-sidebar.html.twig","webpack:///./src/module/sw-media/component/sw-media-collapse/sw-media-collapse.html.twig","webpack:///./src/module/sw-media/component/sidebar/sw-media-quickinfo/sw-media-quickinfo.html.twig","webpack:///./src/module/sw-media/component/sw-media-grid-catalog-item/sw-media-grid-catalog-item.html.twig","webpack:///./src/module/sw-integration/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-integration/page/sw-integration-list/sw-integration-list.html.twig","webpack:///./src/module/sw-sales-channel/component/structure/sw-admin-menu-extension/sw-admin-menu-extension.html.twig","webpack:///./src/module/sw-sales-channel/component/structure/sw-sales-channel-menu/sw-sales-channel-menu.html.twig","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-modal/sw-sales-channel-modal.html.twig","webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-detail/sw-sales-channel-detail.html.twig","webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-create/sw-sales-channel-create.html.twig","webpack:///./src/module/sw-sales-channel/view/sw-sales-channel-detail-base/sw-sales-channel-detail-base.html.twig","webpack:///./src/module/sw-sales-channel/view/sw-sales-channel-create-base/sw-sales-channel-create-base.html.twig","webpack:///./src/module/sw-settings/component/sw-settings-item/sw-settings-item.html.twig","webpack:///./src/module/sw-settings/page/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-currency/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-list/sw-settings-currency-list.html.twig","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-detail/sw-settings-currency-detail.html.twig","webpack:///./src/module/sw-settings-country/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-country/page/sw-settings-country-list/sw-settings-country-list.html.twig","webpack:///./src/module/sw-settings-country/page/sw-settings-country-detail/sw-settings-country-detail.html.twig","webpack:///./src/module/sw-settings-tax/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-list/sw-settings-tax-list.html.twig","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-detail/sw-settings-tax-detail.html.twig","webpack:///./src/module/sw-settings-language/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-language/page/sw-settings-language-list/sw-settings-language-list.html.twig","webpack:///./src/module/sw-settings-language/page/sw-settings-language-detail/sw-settings-language-detail.html.twig","webpack:///./src/module/sw-settings-payment/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-payment/page/sw-settings-payment-list/sw-settings-payment-list.html.twig","webpack:///./src/module/sw-settings-payment/page/sw-settings-payment-detail/sw-settings-payment-detail.html.twig","webpack:///./src/module/sw-settings-shipping/extension/sw-settings-index/sw-settings-index.html.twig","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-list/sw-settings-shipping-list.html.twig","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-detail/sw-settings-shipping-detail.html.twig","webpack:///./src/module/sw-profile/extension/sw-admin-menu/sw-admin-menu.html.twig","webpack:///./src/module/sw-profile/page/sw-profile-index/sw-profile-index.html.twig","webpack:///./src/core/factory/criteria.factory.js","webpack:///./src/core/service/utils/dom.utils.js","webpack:///./src/core/service/utils/format.utils.js","webpack:///./src/module/sw-login/page/index/sw-login.less","webpack:///./src/module/sw-product/component/sw-product-file-upload/sw-product-file-upload.less","webpack:///./src/module/sw-product/view/sw-product-detail-context-prices/sw-product-detail-context-prices.less","webpack:///./src/module/sw-product/page/sw-product-list/sw-product-list.less","webpack:///./src/module/sw-catalog/page/sw-catalog-list/sw-catalog-list.less","webpack:///./src/module/sw-catalog/page/sw-catalog-detail/sw-catalog-detail.less","webpack:///./src/module/sw-customer/page/sw-customer-list/sw-customer-list.less","webpack:///./src/module/sw-customer/view/sw-customer-detail-base/sw-customer-detail-base.less","webpack:///./src/module/sw-customer/view/sw-customer-detail-addresses/sw-customer-detail-addresses.less","webpack:///./src/module/sw-customer/component/sw-customer-default-addresses/sw-customer-default.addresses.less","webpack:///./src/module/sw-manufacturer/page/sw-manufacturer-detail/sw-manufacturer-detail.less","webpack:///./src/module/sw-order/page/sw-order-list/sw-order-list.less","webpack:///./src/module/sw-order/page/sw-order-detail/sw-order-detail.less","webpack:///./src/module/sw-order/view/sw-order-detail-base/sw-order-detail-base.less","webpack:///./src/module/sw-order/component/sw-order-line-items-grid/sw-order-line-items-grid.less","webpack:///./src/module/sw-order/component/sw-order-delivery-line-items-grid/sw-order-delivery-line-items-grid.less","webpack:///./src/module/sw-order/component/sw-order-delivery/sw-order-delivery.less","webpack:///./src/module/sw-media/page/sw-media-index/sw-media-index.less","webpack:///./src/module/sw-media/component/sw-media-upload/sw-media-upload.less","webpack:///./src/module/sw-media/page/sw-media-catalog/sw-media-catalog.less","webpack:///./src/core/service/utils/string.utils.js","webpack:///./src/module/sw-media/component/sw-media-modal-replace/sw-media-modal-replace.less","webpack:///./src/module/sw-media/component/sidebar/sw-media-sidebar/sw-media-sidebar.less","webpack:///./src/module/sw-media/component/sw-media-collapse/sw-media-collapse.less","webpack:///./src/module/sw-media/component/sidebar/sw-media-quickinfo/sw-media-quickinfo.less","webpack:///./src/module/sw-media/component/sw-media-grid-catalog-item/sw-media-grid-catalog-item.less","webpack:///./src/module/sw-integration/page/sw-integration-list/sw-integration-list.less","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-modal/sw-sales-channel-modal.less","webpack:///./src/module/sw-sales-channel/view/sw-sales-channel-detail-base/sw-sales-channel-detail-base.less","webpack:///./src/module/sw-settings/component/sw-settings-item/sw-settings-item.less","webpack:///./src/module/sw-settings/page/sw-settings-index/sw-settings-index.less","webpack:///./src/module/sw-settings-country/page/sw-settings-country-detail/sw-settings-country-detail.less","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-detail/sw-settings-shipping-detail.less","webpack:///./src/module/sw-profile/page/sw-profile-index/sw-profile-index.less","webpack:///./src/core/service/utils/debug.utils.js","webpack:///./src/module/sw-login/page/index/index.js","webpack:///./src/module/sw-login/index.js","webpack:///./src/module/sw-dashboard/page/sw-dashboard-index/index.js","webpack:///./src/module/sw-dashboard/index.js","webpack:///./src/module/sw-product/component/sw-product-basic-form/index.js","webpack:///./src/module/sw-product/component/sw-product-category-form/index.js","webpack:///./src/module/sw-product/component/sw-product-price-form/index.js","webpack:///./src/module/sw-product/component/sw-product-settings-form/index.js","webpack:///./src/module/sw-product/component/sw-product-file-upload/index.js","webpack:///./src/module/sw-product/view/sw-product-detail-base/index.js","webpack:///./src/module/sw-product/view/sw-product-detail-context-prices/index.js","webpack:///./src/module/sw-product/page/sw-product-list/index.js","webpack:///./src/module/sw-product/page/sw-product-detail/index.js","webpack:///./src/module/sw-product/page/sw-product-create/index.js","webpack:///./src/module/sw-product/index.js","webpack:///./src/module/sw-catalog/page/sw-catalog-list/index.js","webpack:///./src/module/sw-catalog/page/sw-catalog-detail/index.js","webpack:///./src/module/sw-catalog/page/sw-catalog-create/index.js","webpack:///./src/module/sw-catalog/index.js","webpack:///./src/module/sw-customer/page/sw-customer-list/index.js","webpack:///./src/module/sw-customer/page/sw-customer-detail/index.js","webpack:///./src/module/sw-customer/page/sw-customer-create/index.js","webpack:///./src/module/sw-customer/view/sw-customer-detail-base/index.js","webpack:///./src/module/sw-customer/view/sw-customer-detail-addresses/index.js","webpack:///./src/module/sw-customer/view/sw-customer-create-base/index.js","webpack:///./src/module/sw-customer/component/sw-customer-base-form/index.js","webpack:///./src/module/sw-customer/component/sw-customer-base-info/index.js","webpack:///./src/module/sw-customer/component/sw-customer-address-form/index.js","webpack:///./src/module/sw-customer/component/sw-customer-default-addresses/index.js","webpack:///./src/module/sw-customer/index.js","webpack:///./src/module/sw-manufacturer/page/sw-manufacturer-list/index.js","webpack:///./src/module/sw-manufacturer/page/sw-manufacturer-detail/index.js","webpack:///./src/module/sw-manufacturer/page/sw-manufacturer-create/index.js","webpack:///./src/module/sw-manufacturer/index.js","webpack:///./src/module/sw-order/page/sw-order-list/index.js","webpack:///./src/module/sw-order/page/sw-order-detail/index.js","webpack:///./src/module/sw-order/view/sw-order-detail-base/index.js","webpack:///./src/module/sw-order/view/sw-order-detail-deliveries/index.js","webpack:///./src/module/sw-order/component/sw-order-line-items-grid/index.js","webpack:///./src/module/sw-order/component/sw-order-delivery-line-items-grid/index.js","webpack:///./src/module/sw-order/component/sw-order-delivery/index.js","webpack:///./src/module/sw-order/index.js","webpack:///./src/module/sw-media/component/sw-media-modal-delete/index.js","webpack:///./src/module/sw-media/mixin/mediagrid.listener.mixin.js","webpack:///./src/module/sw-media/mixin/sibebar.listener.mixin.js","webpack:///./src/module/sw-media/page/sw-media-index/index.js","webpack:///./src/module/sw-media/component/sw-media-upload/index.js","webpack:///./src/module/sw-media/component/sw-media-modal-replace/index.js","webpack:///./src/module/sw-media/page/sw-media-catalog/index.js","webpack:///./src/module/sw-media/component/sw-media-collapse/index.js","webpack:///./src/module/sw-media/component/sidebar/sw-media-quickinfo/index.js","webpack:///./src/module/sw-media/component/sidebar/sw-media-sidebar/index.js","webpack:///./src/module/sw-media/component/sw-media-grid-catalog-item/index.js","webpack:///./src/module/sw-media/index.js","webpack:///./src/module/sw-integration/extension/sw-settings-index/index.js","webpack:///./src/module/sw-integration/page/sw-integration-list/index.js","webpack:///./src/module/sw-integration/index.js","webpack:///./src/module/sw-sales-channel/component/structure/sw-admin-menu-extension/index.js","webpack:///./src/module/sw-sales-channel/component/structure/sw-sales-channel-menu/index.js","webpack:///./src/module/sw-sales-channel/component/sw-sales-channel-modal/index.js","webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-detail/index.js","webpack:///./src/module/sw-sales-channel/page/sw-sales-channel-create/index.js","webpack:///./src/module/sw-sales-channel/view/sw-sales-channel-detail-base/index.js","webpack:///./src/module/sw-sales-channel/view/sw-sales-channel-create-base/index.js","webpack:///./src/module/sw-sales-channel/index.js","webpack:///./src/module/sw-settings/component/sw-settings-item/index.js","webpack:///./src/module/sw-settings/page/sw-settings-index/index.js","webpack:///./src/module/sw-settings/mixin/sw-settings-list.mixin.js","webpack:///./src/module/sw-settings/index.js","webpack:///./src/module/sw-settings-currency/extension/sw-settings-index/index.js","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-list/index.js","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-detail/index.js","webpack:///./src/module/sw-settings-currency/page/sw-settings-currency-create/index.js","webpack:///./src/module/sw-settings-currency/index.js","webpack:///./src/module/sw-settings-country/extension/sw-settings-index/index.js","webpack:///./src/module/sw-settings-country/page/sw-settings-country-list/index.js","webpack:///./src/module/sw-settings-country/page/sw-settings-country-detail/index.js","webpack:///./src/module/sw-settings-country/page/sw-settings-country-create/index.js","webpack:///./src/module/sw-settings-country/index.js","webpack:///./src/module/sw-settings-tax/extension/sw-settings-index/index.js","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-list/index.js","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-detail/index.js","webpack:///./src/module/sw-settings-tax/page/sw-settings-tax-create/index.js","webpack:///./src/module/sw-settings-tax/index.js","webpack:///./src/module/sw-settings-language/extension/sw-settings-index/index.js","webpack:///./src/module/sw-settings-language/page/sw-settings-language-list/index.js","webpack:///./src/module/sw-settings-language/page/sw-settings-language-detail/index.js","webpack:///./src/module/sw-settings-language/page/sw-settings-language-create/index.js","webpack:///./src/module/sw-settings-language/index.js","webpack:///./src/module/sw-settings-payment/extension/sw-settings-index/index.js","webpack:///./src/module/sw-settings-payment/page/sw-settings-payment-list/index.js","webpack:///./src/module/sw-settings-payment/page/sw-settings-payment-detail/index.js","webpack:///./src/module/sw-settings-payment/page/sw-settings-payment-create/index.js","webpack:///./src/module/sw-settings-payment/index.js","webpack:///./src/module/sw-settings-shipping/extension/sw-settings-index/index.js","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-list/index.js","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-detail/index.js","webpack:///./src/module/sw-settings-shipping/page/sw-settings-shipping-create/index.js","webpack:///./src/module/sw-settings-shipping/index.js","webpack:///./src/module/sw-profile/extension/sw-admin-menu/index.js","webpack:///./src/module/sw-profile/page/sw-profile-index/index.js","webpack:///./src/module/sw-profile/index.js","webpack:///./src/core/service/utils/types.utils.js","webpack:///./src/core/service/validation.service.js","webpack:///./src/core/service/jsonapi-parser.service.js","webpack:///./src/core/helper/flattree.helper.js","webpack:///./src/core/service/api/api.service.js","webpack:///./src/app/assets/less/all.less","webpack:///./src/module/sw-login/page/index/sw-login.html.twig","webpack:///./src/core/factory/context.factory.js","webpack:///./src/core/helper/refresh-token.helper.js","webpack:///./src/core/factory/http.factory.js","webpack:///./src/core/data/EntityStore.js","webpack:///./src/core/data/AssociationStore.js","webpack:///./src/core/data/EntityProxy.js","webpack:///./src/core/data/error-codes/login.error-codes.js","webpack:///./src/core/data/AuthStore.js","webpack:///./src/core/data/NotificationStore.js","webpack:///./src/core/data/ErrorStore.js","webpack:///./src/core/data/LocaleStore.js","webpack:///./src/core/helper/uploadTask.helper.js","webpack:///./src/core/data/UploadStore.js","webpack:///./src/app/mixin/validation.mixin.js","webpack:///./src/app/mixin/notification.mixin.js","webpack:///./src/app/mixin/listing.mixin.js","webpack:///./src/app/mixin/drag-selector.mixin.js","webpack:///./src/core/helper/device.helper.js","webpack:///./src/core/plugins/device-helper.plugin.js","webpack:///./src/app/adapter/view/vue.adapter.js","webpack:///./src/core/factory/router.factory.js","webpack:///./src/app/routes/index.js","webpack:///./src/app/filter/asset.js","webpack:///./src/app/filter/currency.js","webpack:///./src/app/filter/date.js","webpack:///./src/app/filter/truncate.js","webpack:///./src/app/filter/striphtml.js","webpack:///./src/app/init/index.js","webpack:///./src/app/init/context.init.js","webpack:///./src/app/init/http.init.js","webpack:///./src/app/init/state.init.js","webpack:///./src/app/init/mixin.init.js","webpack:///./src/app/init/directive.init.js","webpack:///./src/app/init/filter.init.js","webpack:///./src/app/init/modules.init.js","webpack:///./src/app/init/view.init.js","webpack:///./src/core/factory/view.factory.js","webpack:///./src/app/init/router.init.js","webpack:///./src/app/init/entity.init.js","webpack:///./src/app/init/locale.init.js","webpack:///./src/core/service/api/index.js","webpack:///./src/core/service/api/shop.api.service.js","webpack:///./src/core/service/api/catalog.api.service.js","webpack:///./src/core/service/api/integration.api.service.js","webpack:///./src/core/service/api/category.api.service.js","webpack:///./src/core/service/api/product.api.service.js","webpack:///./src/core/service/api/product-manufacturer.api.service.js","webpack:///./src/core/service/api/order.api.service.js","webpack:///./src/core/service/api/order-line-item.api.service.js","webpack:///./src/core/service/api/order-delivery.api.service.js","webpack:///./src/core/service/api/order-state.api.service.js","webpack:///./src/core/service/api/customer.api.service.js","webpack:///./src/core/service/api/customer-address.api.service.js","webpack:///./src/core/service/api/customer-group.api.service.js","webpack:///./src/core/service/api/payment-method.api.service.js","webpack:///./src/core/service/api/shipping-method.api.service.js","webpack:///./src/core/service/api/country.api.service.js","webpack:///./src/core/service/api/currency.api.service.js","webpack:///./src/core/service/api/tax.api.service.js","webpack:///./src/core/service/api/rule.api.service.js","webpack:///./src/core/service/api/media.api.service.js","webpack:///./src/core/service/api/sales-channel.api.service.js","webpack:///./src/core/service/api/sales-channel-type.api.service.js","webpack:///./src/core/service/api/search.api.service.js","webpack:///./src/core/service/api/language.api.service.js","webpack:///./src/core/service/api/locale.api.service.js","webpack:///./src/core/service/api/user.api.service.js","webpack:///./src/app/main.js","webpack:///./src/app/service/menu.service.js","webpack:///./src/core/service/login.service.js","webpack:///./src/module/sw-dashboard/page/sw-dashboard-index/sw-dashboard-index.html.twig"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Module","register","Shopware","Component","extend","override","build","getTemplate","getComponentRegistry","Template","getRenderedTemplate","find","findOverride","Application","State","registerStore","getStore","getStoreRegistry","Mixin","getByName","Filter","Directive","Locale","Entity","addDefinition","getDefinition","getDefinitionRegistry","getRawEntityObject","getPropertyBlacklist","getRequiredProperties","getAssociatedProperties","__webpack_exports__","registerPromiseOnFileReader","fileReader","resolve","reject","onerror","abort","DOMException","onload","file_reader_utils","readFileAsArrayBuffer","inputFile","fReader","FileReader","promise_default","a","readAsArrayBuffer","readFileAsDataURL","readAsDataURL","readFileAsText","readAsText","deepCopyObject","object_utils","getObjectDiff","getArrayChanges","merge","debug","warn","debug_utils","format","currency","format_utils","date","dom","getScrollbarHeight","dom_utils","getScrollbarWidth","string","capitalizeString","string_utils","camelCase","md5","types","isObject","types_utils","isPlainObject","isEmpty","isRegExp","isArray","isFunction","isDate","isString","isBoolean","createId","v4_default","replace","throttle","throttle_default","debounce","debounce_default","lodash_merge__WEBPACK_IMPORTED_MODULE_4___default","scope","prop","copyObject","arguments","undefined","JSON","parse","babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_3___default","b","src_core_service_utils_types_utils__WEBPACK_IMPORTED_MODULE_5__","valueOf","babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_2___default","reduce","acc","babel_runtime_helpers_extends__WEBPACK_IMPORTED_MODULE_1___default","babel_runtime_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_0___default","changes","filter","item","includes","forEach","index","objDiff","term","field","src_core_service_utils_types_utils__WEBPACK_IMPORTED_MODULE_2__","createTerms","createOutputInterface","type","nested","operator","_len","queries","Array","_key","getOperator","mapQueries","match","range","parameters","babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_1___default","remappedParameters","operatorKey","rangeOperatorAliases","reduceRangeParameters","not","_len2","_key2","terms","operatorAliases","AND","OR","lt","lte","gt","gte","values","join","map","query","getQuery","alias","defaultOperator","operatorPool","every","lowerQueryOperator","toLowerCase","indexOf","getQueryString","babel_runtime_core_js_json_stringify__WEBPACK_IMPORTED_MODULE_0___default","element","HTMLElement","offsetHeight","scrollHeight","_debug_utils__WEBPACK_IMPORTED_MODULE_0__","offsetWidth","scrollWidth","copyToClipboard","stringToCopy","tempTextArea","document","createElement","body","appendChild","select","execCommand","removeChild","val","sign","opts","style","language","toLocaleString","locale","Date","crypto__WEBPACK_IMPORTED_MODULE_0___default","createHash","update","digest","content","locals","add","default","lodash_capitalize__WEBPACK_IMPORTED_MODULE_0___default","lodash_camelCase__WEBPACK_IMPORTED_MODULE_1___default","shopware","template","sw_login_html_default","mixins","isLoading","isLoginSuccess","isLoginError","mounted","this","mountedComponent","computed","authStore","methods","$refs","swLoginUsernameField","$el","querySelector","focus","loginUserWithPassword","_this","then","success","handleLoginSuccess","handleLoginError","_this2","setTimeout","forwardLogin","_this3","createNotificationError","title","$tc","errorTitle","message","errorMessage","url","lastUrl","previousRoute","sessionStorage","getItem","removeItem","fullPath","$router","description","version","targetVersion","color","routes","component","path","coreRoute","sw_dashboard_index_html_default","icon","components","navigation","id","label","position","sw_product_basic_form_html_default","props","product","required","manufacturers","sw_product_category_form_html_default","inject","catalogs","categoryService","catalogStore","categoriesStore","getAssociation","criteria","catalogId","criteria_factory","hasCriteria","created","createdComponent","getList","page","limit","response","items","onChangeCatalog","categories","category","multiSelectCategories","dismissSelection","sw_product_price_form_html_default","taxRates","currencies","productTaxRate","taxRate","taxId","defaultCurrency","isDefault","sw_product_settings_form_html_default","sw_product_file_upload_html_default","mediaItems","media","uploads","previews","productMediaStore","mediaStore","uploadStore","handleFileUploads","uploadedFiles","from_default","fileInput","files","file","productMedia","createEntities","uploadTask","addUpload","util_service","arrayBuffer","mediaService","uploadMediaById","split","pop","catch","getByIdAsync","productMediaEntity","mediaEntity","delete","mediaId","uploadId","coverId","catalog","user","dataURL","$forceUpdate","getPreviewForMedia","isLocal","addFiles","click","removeFile","find_default","e","upload","removeUpload","isCover","markMediaAsCover","sw_product_detail_base_html_default","taxes","sw_product_detail_context_prices_html_default","Boolean","rules","totalRules","isLoadingRules","priceRuleStore","priceRuleGroups","priceRules","rule","getById","isDeleted","ruleId","findRuleById","currencyId","findCurrencyById","prices","isLoaded","ruleStore","sortBy","total","onRuleChange","priceRule","onAddNewPriceGroup","null","newPriceRule","productId","quantityStart","quantityEnd","onAddCurrency","_this4","price","duplicate","onPriceGroupDelete","onPriceGroupDuplicate","priceGroup","_this5","keys_default","onPriceRuleDuplicate","onPriceRuleDelete","priceRuleGroup","onQuantityEndChange","currencyPrices","sw_product_list_default","products","showDeleteModal","productStore","filters","active","options",">","<","$root","$on","onSearch","destroyed","$off","stockColorVariant","onEdit","params","onInlineEditSave","save","getListingParams","onDeleteProduct","onCloseDeleteModal","onConfirmDelete","sw_product_detail_html_default","manufacturerStore","currencyStore","taxStore","watch","$route.params.id","$route","sortDirection","onRemoveImageToUpload","onSave","productName","titleSaveSuccess","messageSaveSuccess","titleSaveError","messageSaveError","entityName","totalTasks","getPendingTaskCount","runUploads","runningTasks","count","createNotification","createNotificationSuccess","exception","_name","sw_product_create_html_default","beforeRouteEnter","to","from","next","$super","linked","sidebar","redirect","children","base","meta","parentPath","detail","parent","sw_catalog_list_html_default","sw_catalog_detail_html_default","aggregations","addCategoryName","currentEditCategory","categoryStore","getAggregations","getCategories","parentId","searchTerm","concat","aggregateParams","productCount","categoryCount","mediaCount","catalogService","onAddCategory","newCategory","onAddChildCategory","parentCategory","childCount","onEditCategory","$nextTick","onEditCategoryFinish","onDeleteCategory","searchCategories","associatedCategoryStore","store","sw_catalog_create_html_default","sw_customer_list_html_default","customers","customerStore","customer","sw_customer_detail_html_default","beforeRouteLeave","customerEditMode","customerId","customerGroups","salesChannels","countries","addresses","paymentMethods","customerGroupStore","countryStore","salesChannelStore","customerAddressStore","paymentMethodStore","customerName","salutation","firstName","lastName","isCreateCustomer","edit","onDisableCustomerEditMode","onActivateCustomerEditMode","sw_customer_create_html_default","defaultAddress","defaultBillingAddressId","defaultShippingAddressId","password","sw_customer_detail_base_html_default","String","editMode","$emit","sw_customer_detail_addresses_html_default","showAddAddressModal","showEditAddressModal","showDeleteAddressModal","currentAddress","onCreateNewAddress","createNewCustomerAddress","newAddress","createEmptyAddress","onSaveAddress","isValidAddress","address","assign_default","validation_service","onCloseAddressModal","onEditAddress","onDeleteAddress","isDefaultAddress","onConfirmDeleteAddress","onCloseDeleteAddressModal","addressId","sw_customer_create_base_html_default","sw_customer_base_form_html_default","sw_customer_base_info_html_default","onEditCustomer","sw_customer_address_form_html_default","sw_customer_default_addresses_html_default","sw_manufacturer_list_html_default","manufacturer","onDeleteManufacturer","sw_manufacturer_detail_html_default","manufacturerId","manufacturerName","sw_order_list_html_default","orders","orderStore","order","sw_order_detail_html_default","orderId","lineItemsStore","deliveriesStore","sw_order_detail_base_html_default","sw_order_detail_deliveries_html_default","sw_order_line_items_grid_html_default","orderLineItems","sw_order_delivery_line_items_grid_html_default","deliveryLineItems","sw_order_delivery_html_default","delivery","positionsStore","deliveries","sw_media_modal_delete_html_default","itemsToDelete","validator","showModal","closeDeleteModal","originalDomEvent","deleteSelection","mediagrid_listener_mixin","mediaMediaGridListener","sw-media-grid-selection-clear","handleMediaGridSelectionRemoved","sw-media-grid-item-selection-add","handleMediaGridItemSelected","sw-media-grid-item-selection-remove","handleMediaGridItemUnselected","sw-media-grid-media-item-show-details","handleMediaGridItemShowDetails","sw-media-grid-media-item-delete","handleMediaGridItemDelete","sw-media-grid-media-item-replace","handleMediaGridItemReplace","sibebar_listener_mixin","mediaSidebarListener","sw-media-sidebar-move-batch","handleSidebarMoveBatchRequest","sw-media-sidebar-remove-batch","handleSidebarRemoveBatchRequest","sw-media-sidebar-quickaction-replace-item","handleSidebarReplaceItem","sw-media-sidebar-quickaction-move-item","handleSidebarMoveItem","sw-media-sidebar-quickaction-remove-item","handleSidebarRemoveItem","sw_media_index_html_default","lastSelectedItem","selectionToDelete","mediaItemToReplace","searchId","mediaItemStore","isSearch","createComponent","beforeRouteUpdate","loadMedia","getLastSelectedItem","selection","mediaGrid","_ref","_ref2","mediaSidebar","showQuickInfo","_ref3","_ref4","mediaItemsDeletion","all","_ref5","closeReplaceModal","handleItemReplaced","replacementPromise","loadSearchedMedia","loadLastAddedMedia","sw_media_upload_html_default","onClickUpload","onFileInputChange","addMediaEntityFromFile","extensions","links","buffer","sw_media_modal_replace_html_default","itemToReplace","uploadData","previewMediaEntity","showReplaceModal","emitCloseReplaceModal","mimeType","dataUrl","replaceMediaItem","replaceMediaFromUrl","replaceMediaFromFile","fileExtension","replaceFromFile","fileAsArray","emitReplaceStarted","itemUpload","removeSelectedFile","sw_media_catalog_html_default","previewType","destroyedComponent","onNewMedia","getCatalogId","sw_media_collapse_html_default","expandButtonClass","is--hidden","expanded","collapseButtonClass","sw_media_quickinfo_html_default","itemIsAvailable","getMetadata","fileName","fileSize","createdAt","emitQuickAction","action","copyLinkToClipboard","sw_media_sidebar_html_default","emitRequestMoveSelection","emitRequestRemoveSelection","quickInfoButton","toggleContentPanel","sw_media_grid_catalog_item_html_default","gridItemListeners","viewCatalogContent","catalog-content","sw_settings_index_html_default","sw_integration_list_html_default","integrations","isModalLoading","currentIntegration","showSecretAccessKey","integrationStore","secretAccessKeyFieldType","onSaveIntegration","integration","createIntegration","updateIntegration","createSavedSuccessNotification","createSavedErrorNotification","finally","onCloseDetailModal","isNew","onGenerateKeys","integrationService","generateKey","accessKey","secretAccessKey","onShowDetailModal","entry","_this6","sw_admin_menu_extension_html_default","sw_sales_channel_menu_html_default","menuItems","createMenuTree","flatTree","flattree_helper","salesChannel","translated","iconName","convertToTree","sw_sales_channel_modal_html_default","salesChannelTypes","detailType","salesChannelTypeStore","modalTitle","onCloseModal","onOpenDetail","onAddChannel","typeId","sw_sales_channel_detail_html_default","sw_sales_channel_create_html_default","sw_sales_channel_detail_base_html_default","languageStore","shippingMethodStore","salesChannelService","changeDefaultCurrency","changeDefaultLanguage","languageId","changeDefaultCountry","countryId","changeDefaultPaymentMethod","paymentMethodId","changeDefaultShippingMethod","shippingMethodId","sw_sales_channel_create_base_html_default","sw_settings_item_html_default","disabled","classes","is--disabled","sw_settings_index_sw_settings_index_html_default","onDelete","currencyName","extension_sw_settings_index_sw_settings_index_html_default","sw_settings_currency_list_html_default","sw_settings_currency_detail_html_default","sw_settings_country_extension_sw_settings_index_sw_settings_index_html_default","sw_settings_country_list_html_default","sw_settings_country_detail_html_default","country","countryName","sw_settings_tax_extension_sw_settings_index_sw_settings_index_html_default","sw_settings_tax_list_html_default","sw_settings_tax_detail_html_default","tax","taxName","sw_settings_language_extension_sw_settings_index_sw_settings_index_html_default","sw_settings_language_list_html_default","sw_settings_language_detail_html_default","locales","languages","localeStore","offset","languageName","sw_settings_payment_extension_sw_settings_index_sw_settings_index_html_default","sw_settings_payment_list_html_default","sw_settings_payment_detail_html_default","paymentMethod","paymentMethodName","sw_settings_shipping_extension_sw_settings_index_sw_settings_index_html_default","sw_settings_shipping_list_html_default","sw_settings_shipping_detail_html_default","shippingMethod","shippingMethodName","sw_admin_menu_html_default","sw_profile_index_html_default","userProfile","imageSize","newPassword","newPasswordConfirm","userStore","md5mail","email","gravatarImage","userService","getUser","successTitle","successMessage","lodash_isObject__WEBPACK_IMPORTED_MODULE_0___default","lodash_isPlainObject__WEBPACK_IMPORTED_MODULE_1___default","lodash_isEmpty__WEBPACK_IMPORTED_MODULE_2___default","lodash_isRegExp__WEBPACK_IMPORTED_MODULE_3___default","lodash_isArray__WEBPACK_IMPORTED_MODULE_4___default","lodash_isFunction__WEBPACK_IMPORTED_MODULE_5___default","lodash_isDate__WEBPACK_IMPORTED_MODULE_6___default","lodash_isString__WEBPACK_IMPORTED_MODULE_7___default","lodash_isBoolean__WEBPACK_IMPORTED_MODULE_8___default","src_core_service_util_service__WEBPACK_IMPORTED_MODULE_1__","babel_runtime_core_js_object_keys__WEBPACK_IMPORTED_MODULE_0___default","regex","expression","RegExp","test","jsonApiParserService","json","jsonData","src_core_service_utils_types_utils__WEBPACK_IMPORTED_MODULE_3__","err","convertRawDataToJson","parsed","errors","areTopMemberPropertiesPresent","convertedStructure","associations","includedMap","included","babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_2___default","set","createIncludeMap","record","dataItem","createItem","src_core_service_utils_object_utils__WEBPACK_IMPORTED_MODULE_4__","associationLinks","renameObjectPropertiesToCamelCase","parseDataStructure","attributes","relationships","relations","mappedRelations","relationship","related","mapIncluded","createRelationships","attributesCollection","attributeKey","attribute","toUpperCase","includedKey","has","FlatTree","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_1___default","_registeredNodes","babel_runtime_core_js_map__WEBPACK_IMPORTED_MODULE_0___default","_tree","elements","newParent","node","nodeIdentifier","target","src_core_service_utils_debug_utils__WEBPACK_IMPORTED_MODULE_3__","ApiService","httpClient","loginService","apiEndpoint","contentType","babel_runtime_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_2___default","_ref$page","_ref$limit","_ref$sortDirection","headers","requestHeaders","getBasicHeaders","sort","post","getApiBasePath","handleResponse","additionalParams","additionalHeaders","babel_runtime_core_js_promise__WEBPACK_IMPORTED_MODULE_1___default","Error","payload","patch","associationKey","associationId","status","babel_runtime_core_js_object_assign__WEBPACK_IMPORTED_MODULE_0___default","prefix","basicHeaders","Accept","Authorization","getToken","Content-Type","endpoint","client","parseJsonApiData","src_core_service_jsonapi_parser_service__WEBPACK_IMPORTED_MODULE_4__","createContext","context","installationPath","isDevMode","schemeAndHttpHost","basePath","getInstallationPath","apiPath","NODE_ENV","BASE_PATH","getApiPath","environment","apiResourcePath","assetsPath","getAssetsPath","RefreshTokenHelper","classCallCheck_default","_isRefreshing","_subscribers","_whitelist","callback","token","accumulator","getContainer","refreshToken","getRefreshToken","isRefreshing","refreshTokenUsingRefreshToken","refresh","getBearerAuthentication","setBearerAuthentication","access","access_token","expiry","expires_in","urls","_whitelists","createHTTPClient","tokenHandler","refresh_token_helper","interceptors","use","error","config","originalRequest","resource","baseURL","whitelist","fireRefreshTokenRequest","newToken","onRefreshToken","subscribe","axios_default","refreshTokenInterceptor","createClient","EntityStore","apiService","EntityClass","serviceContainer","force","entity","setData","newId","duplicateData","draft","setLocalData","iterator","deletionsOnly","syncQueue","getDeletionQueue","toConsumableArray_default","getUpdateQueue","deletionQueue","updateQueue","getChanges","AssociationStore","parentEntity","possibleConstructorReturn_default","__proto__","get_prototype_of_default","populateParent","get_default","populateParentEntity","parentProp","data_EntityStore","EntityProxy","that","original","entitySchema","createAssociatedStores","Proxy","exposedData","removeAssociationKeysFromData","populateAssociations","associatedProps","associatedEntityPropNames","populateAssociatedStores","applyAsChange","includeAssociations","changedAssociations","getChangedAssociations","getDeletedAssociationsQueue","sendCreateRequest","sendUpdateRequest","handleException","_response","refreshAssociations","updateById","association","associationIds","pages","Math","ceil","directDelete","remove","requiredProperties","addError","_this7","associationDefinitions","associatedEntityPropDefinitions","initContainer","definition","apiEndPoint","kebabEntityName","api_service","data_AssociationStore","populateAssociatedStore","_this8","associationName","_this9","assocDeletionQueue","_this10","associationChanges","_this11","properties","propertyList","blacklist","addition","validateSchema","extends_default","defineProperty_default","privateData","schema","associationProps","obj","login_error_codes_title","codes","3","4","5","6","7","8","9","10","data_AuthStore","AuthStore","username","loginByUsername","refresh_token","loginSuccess","loginFailure","code","_getErrorCode","getErrorCode","parseInt","data_NotificationStore","NotificationStore","notifications","defaults","system","variant","autoClose","duration","notification","uuid","addNotification","removeNotification","findIndex","data_ErrorStore","ErrorStore","formErrors","errorTemplate","propertyDepth","propertyPath","source","pointer","data_LocaleStore","LocaleStore","localeFactory","setLocale","uploadTask_helper","UploadTask","uploadFunction","running","resolved","markAsResolved","data_UploadStore","UploadStore","tags","map_default","tag","isTagMissing","task","taskCollection","remove_default","noop_default","start","getRunningTaskCount","validation","isValid","validate","valid","validationList","validateRule","validationRule","trim","validationService","notificationStore","createNotificationInfo","createNotificationWarning","createSystemNotificationSuccess","createSystemNotificationInfo","createSystemNotificationWarning","createSystemNotificationError","createSystemNotification","maxPage","routeName","getDataFromRoute","updateRoute","localFilter","generateCriteriaFromFilters","onPageChange","onSwitchFilter","filterIndex","onSortColumn","column","dataIndex","onRefresh","mouseDown","startPoint","endPoint","dragSelection","dragSelectorClass","_dragIsActive","_selectionBox","rect","parentNode","getBoundingClientRect","left","min","x","top","y","width","abs","height","_selectionBoxStyling","onDragSelection","onDragDeselection","onMouseDown","pageX","pageY","addEventListener","_onMouseMove","_onMouseUp","_getScroll","scrollLeft","documentElement","scrollTop","_showSelectBox","$children","_handleSelection","selectBox","getElementsByClassName","setAttribute","newSelection","filtered","_isItemInSelectBox","removeEventListener","el","classList","contains","scroll","offsetTop","offsetLeft","clientWidth","clientHeight","DeviceHelper","listeners","resize","event","listenerObject","listener","onResize","removeResizeListener","getUserAgent","navigator","userAgent","getViewportWidth","innerWidth","getViewportHeight","innerHeight","getDevicePixelRatio","devicePixelRatio","getScreenWidth","screen","getScreenHeight","getScreenOrientation","orientation","getBrowserLanguage","getPlatform","platform","device_helper","pluginInstalled","device_helper_plugin","install","Vue","deviceHelper","define_properties_default","$device","mixin","vueComponents","VueAdapter","componentFactory","stateFactory","filterFactory","directiveFactory","createInstance","renderElement","router","providers","vue_esm","vue_router_esm","vue_i18n_esm","getDirectiveRegistry","directive","getRegistry","factoryMethod","empty","getSuperMethod","comp","methodName","extends","constructor","i18n","messages","getLocaleRegistry","localeMessages","currentLocale","getLastKnownLocale","fallbackLocale","initLocales","getComponents","performance","provide","initComponents","getComponent","componentName","getWrapper","getName","componentConfig","vueComponent","createRouter","Router","View","moduleFactory","LoginService","allRoutes","moduleRoutes","instance","addRoutes","route","convertRouteComponentToViewComponent","addModuleRoutes","createRouterInstance","mergedRoutes","core","moduleRootRoutes","moduleNormalRoutes","moduleRoute","root","beforeEach","bearerAuthExpiry","getExpiry","loggedIn","validateExpiry","setItem","stringify_default","foundModule","getModuleRegistry","currentNavigationEntry","$current","$module","manifest","beforeRouterInterceptor","getViewComponent","getRouterInstance","componentList","componentKey","iterateChildRoutes","child","app_routes","contextService","stripHtml","ellipsis","strippedValue","init","container","coreState","state","coreMixin","coreDirectives","coreFilter","coreModuleRoutes","getModuleRoutes","view","viewAdapter","factoryContainer","adapter","viewFactory","wrapper","factory","entityFactory","addEntityDefinition","data_EntityProxy","de_DE","en_GB","api","shopService","ShopApiService","CatalogApiService","IntegrationApiService","CategoryApiService","productService","ProductApiService","productManufacturerService","ProductManufacturerApiService","orderService","OrderApiService","orderLineItemService","OrderLineItemApiService","orderDeliveryService","OrderDeliveryApiService","orderStateService","OrderStateApiService","customerService","CustomerApiService","customerAddressService","CustomerAddressApiService","customerGroupService","CustomerGroupApiService","paymentMethodService","PaymentMethodApiService","shippingMethodService","ShippingMethodApiService","countryService","CountryApiService","currencyService","CurrencyApiService","taxService","TaxApiService","ruleService","RuleApiService","MediaApiService","apiRoute","SalesChannelApiService","salesChannelTypeService","SalesChannelTypeApiService","searchService","SearchApiService","_ref$additionalParams","_ref$additionalHeader","languageService","LanguageApiService","localeService","LocaleApiService","UserApiService","initializer","addInitializer","addServiceProvider","getMainMenu","navigationElement","sortTree","addItem","prevItem","nextItem","createMenuService","localStorageKey","pass","grant_type","client_id","scopes","round","authObject","localStorage","timestamp","clearBearerAuthentication","getLocalStorageKey","setLocalStorageKey","storageKey","section","bearerAuth","createLoginService","jsonapi_parser_service","ServiceFactoryClass"],"mappings":"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","file":"static/js/app.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"undefined/bundles/administration/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([987,4,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export const Module = {\n    register: Shopware.Module.register\n};\n\nexport const Component = {\n    register: Shopware.Component.register,\n    extend: Shopware.Component.extend,\n    override: Shopware.Component.override,\n    build: Shopware.Component.build,\n    getTemplate: Shopware.Component.getTemplate,\n    getComponentRegistry: Shopware.Component.getComponentRegistry\n};\n\nexport const Template = {\n    register: Shopware.Template.register,\n    extend: Shopware.Template.extend,\n    override: Shopware.Template.override,\n    getRenderedTemplate: Shopware.Template.getRenderedTemplate,\n    find: Shopware.Template.find,\n    findOverride: Shopware.Template.findOverride\n};\n\nexport const Application = Shopware.Application;\n\nexport const State = {\n    registerStore: Shopware.State.registerStore,\n    getStore: Shopware.State.getStore,\n    getStoreRegistry: Shopware.State.getStoreRegistry\n};\n\nexport const Mixin = {\n    register: Shopware.Mixin.register,\n    getByName: Shopware.Mixin.getByName\n};\n\nexport const Filter = {\n    register: Shopware.Filter.register,\n    getByName: Shopware.Filter.getByName\n};\n\nexport const Directive = {\n    register: Shopware.Directive.register,\n    getByName: Shopware.Directive.getByName\n};\n\nexport const Locale = {\n    register: Shopware.Locale.register,\n    getByName: Shopware.Locale.getByName,\n    extend: Shopware.Locale.extend\n};\n\nexport const Entity = {\n    addDefinition: Shopware.Entity.addDefinition,\n    getDefinition: Shopware.Entity.getDefinition,\n    getDefinitionRegistry: Shopware.Entity.getDefinitionRegistry,\n    getRawEntityObject: Shopware.Entity.getRawEntityObject,\n    getPropertyBlacklist: Shopware.Entity.getPropertyBlacklist,\n    getRequiredProperties: Shopware.Entity.getRequiredProperties,\n    getAssociatedProperties: Shopware.Entity.getAssociatedProperties\n};\n\nexport default {\n    Module,\n    Component,\n    Template,\n    Application,\n    State,\n    Mixin,\n    Entity,\n    Filter,\n    Directive,\n    Locale\n};\n","/**\n * @module core/service/utils/file-reader\n */\n\nfunction registerPromiseOnFileReader(fileReader, resolve, reject) {\n    fileReader.onerror = () => {\n        fileReader.abort();\n        reject(new DOMException('Problem parsing file.'));\n    };\n\n    fileReader.onload = () => {\n        resolve(fileReader.result);\n    };\n}\n\nfunction readFileAsArrayBuffer(inputFile) {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsArrayBuffer(inputFile);\n    });\n}\n\nfunction readFileAsDataURL(inputFile) {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsDataURL(inputFile);\n    });\n}\n\nfunction readFileAsText(inputFile) {\n    const fReader = new FileReader();\n\n    return new Promise((resolve, reject) => {\n        registerPromiseOnFileReader(fReader, resolve, reject);\n\n        fReader.readAsText(inputFile);\n    });\n}\n\nexport default {\n    readFileAsArrayBuffer,\n    readFileAsDataURL,\n    readFileAsText\n};\n","/**\n * @module core/service/utils\n */\nimport throttle from 'lodash/throttle';\nimport debounce from 'lodash/debounce';\nimport uuidV4 from 'uuid/v4';\n\nimport {\n    deepCopyObject,\n    hasOwnProperty,\n    getObjectDiff,\n    getArrayChanges,\n    merge\n} from './utils/object.utils';\nimport { warn } from './utils/debug.utils';\nimport { currency, date } from './utils/format.utils';\nimport domUtils from './utils/dom.utils';\nimport stringUtils from './utils/string.utils';\nimport typesUtils from './utils/types.utils';\nimport fileReaderUtils from './utils/file-reader.utils';\n\nexport const object = {\n    deepCopyObject: deepCopyObject,\n    hasOwnProperty: hasOwnProperty,\n    getObjectDiff: getObjectDiff,\n    getArrayChanges: getArrayChanges,\n    merge: merge\n};\n\nexport const debug = {\n    warn: warn\n};\n\nexport const format = {\n    currency: currency,\n    date: date\n};\n\nexport const dom = {\n    getScrollbarHeight: domUtils.getScrollbarHeight,\n    getScrollbarWidth: domUtils.getScrollbarWidth\n};\n\nexport const string = {\n    capitalizeString: stringUtils.capitalizeString,\n    camelCase: stringUtils.camelCase,\n    md5: stringUtils.md5\n};\n\nexport const types = {\n    isObject: typesUtils.isObject,\n    isPlainObject: typesUtils.isPlainObject,\n    isEmpty: typesUtils.isEmpty,\n    isRegExp: typesUtils.isRegExp,\n    isArray: typesUtils.isArray,\n    isFunction: typesUtils.isFunction,\n    isDate: typesUtils.isDate,\n    isString: typesUtils.isString,\n    isBoolean: typesUtils.isBoolean\n};\n\nexport const fileReader = {\n    readAsArrayBuffer: fileReaderUtils.readFileAsArrayBuffer,\n    readAsDataURL: fileReaderUtils.readFileAsDataURL,\n    readAsText: fileReaderUtils.readFileAsText\n};\n\nexport default {\n    createId,\n    throttle,\n    debounce,\n    object,\n    debug,\n    format,\n    dom,\n    string,\n    types,\n    fileReader\n};\n\n/**\n * Returns a uuid string in hex format.\n *\n * @returns {String}\n */\nfunction createId() {\n    return uuidV4().replace(/-/g, '');\n}\n","module.exports = \"{% block sw_product_basic_form %}\\n    <div class=\\\"product-basic-form\\\">\\n\\n        {% block sw_product_basic_form_title_field %}\\n            <sw-field type=\\\"text\\\"\\n                      :label=\\\"$tc('sw-product.basicForm.labelTitle')\\\"\\n                      :placeholder=\\\"$tc('sw-product.basicForm.placeholderTitle')\\\"\\n                      v-model=\\\"product.name\\\">\\n            </sw-field>\\n        {% endblock %}\\n\\n        {% block sw_product_basic_form_description_field %}\\n            <sw-text-editor :label=\\\"$tc('sw-product.basicForm.labelDescription')\\\"\\n                            :placeholder=\\\"$tc('sw-product.basicForm.placeholderDescription')\\\"\\n                            v-model=\\\"product.descriptionLong\\\">\\n            </sw-text-editor>\\n        {% endblock %}\\n\\n        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n            {% block sw_product_basic_form_id_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-product.basicForm.labelProductNumber')\\\"\\n                          :placeholder=\\\"$tc('sw-product.basicForm.placeholderProductNumber')\\\"\\n                          :value=\\\"product.id\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_product_basic_form_manufacturer_field %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-product.basicForm.labelManufacturer')\\\"\\n                          :placeholder=\\\"$tc('sw-product.basicForm.placeholderManufacturer')\\\"\\n                          validation=\\\"required\\\"\\n                          v-model=\\\"product.manufacturerId\\\">\\n                    {% block sw_product_basic_form_manufacturer_field_options %}\\n                        <option slot=\\\"options\\\" v-for=\\\"manufacturer in manufacturers\\\" :value=\\\"manufacturer.id\\\">{{ manufacturer.name }}</option>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n        </sw-container>\\n\\n        {% block sw_product_basic_form_product_images %}\\n            <sw-product-file-upload :product=\\\"product\\\"></sw-product-file-upload>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_product_category_form %}\\n    <div class=\\\"sw-product-category-form\\\">\\n\\n        {% block sw_product_category_form_content %}\\n            {% block sw_product_category_form_catalog_field %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-product.categoryForm.labelCatalog')\\\"\\n                          :placeholder=\\\"$tc('sw-product.categoryForm.placeholderCatalog')\\\"\\n                          validation=\\\"required\\\"\\n                          @change=\\\"onChangeCatalog\\\"\\n                          v-model=\\\"product.catalogId\\\">\\n                    <option slot=\\\"options\\\" v-for=\\\"catalog in catalogs\\\" :value=\\\"catalog.id\\\">{{ catalog.name }}</option>\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_product_category_form_category_field %}\\n                <sw-multi-select id=\\\"categories\\\"\\n                                 ref=\\\"multiSelectCategories\\\"\\n                                 :label=\\\"$tc('sw-product.categoryForm.labelCategory')\\\"\\n                                 :placeholder=\\\"$tc('sw-product.categoryForm.placeholderCategory')\\\"\\n                                 :serviceProvider=\\\"categoryService\\\"\\n                                 :store=\\\"categoriesStore\\\"\\n                                 :criteria=\\\"criteria\\\"\\n                                 :disabled=\\\"!hasCriteria\\\"\\n                                 v-model=\\\"product.categories\\\">\\n                </sw-multi-select>\\n            {% endblock %}\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_product_price_form %}\\n    <div class=\\\"sw-product-price-form\\\">\\n\\n        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n            {% block sw_product_price_form_tax_field %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-product.priceForm.labelTaxRate')\\\"\\n                          :placeholder=\\\"$tc('sw-product.priceForm.placeholderTaxRate')\\\"\\n                          validation=\\\"required\\\"\\n                          v-model=\\\"product.taxId\\\">\\n                    {% block sw_product_price_form_tax_field_options %}\\n                        <option slot=\\\"options\\\" v-for=\\\"tax in taxRates\\\" :value=\\\"tax.id\\\">{{ tax.name }}</option>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_product_price_form_purchase_price_field %}\\n                <sw-field type=\\\"number\\\"\\n                          :label=\\\"$tc('sw-product.priceForm.labelPurchasePriceGross')\\\"\\n                          :placeholder=\\\"$tc('sw-product.priceForm.placeholderPurchasePriceGross')\\\"\\n                          suffix=\\\"EUR\\\"\\n                          min=\\\"0.00\\\"\\n                          step=\\\"0.01\\\"\\n                          v-model=\\\"product.purchasePrice\\\">\\n                </sw-field>\\n            {% endblock %}\\n        </sw-container>\\n\\n        {% block sw_product_price_form_price_field %}\\n            <sw-price-field\\n                    :price=\\\"product.price\\\"\\n                    :taxRate=\\\"productTaxRate\\\"\\n                    :currency=\\\"defaultCurrency\\\"\\n                    validation=\\\"required\\\">\\n            </sw-price-field>\\n        {% endblock %}\\n\\n        <sw-container grid=\\\"1fr 1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n            {% block sw_product_price_form_purchase_unit_field %}\\n                <sw-field type=\\\"number\\\"\\n                          :label=\\\"$tc('sw-product.priceForm.labelPurchaseUnit')\\\"\\n                          :placeholder=\\\"$tc('sw-product.priceForm.placeholderPurchaseUnit')\\\"\\n                          min=\\\"0.00\\\"\\n                          step=\\\"0.01\\\"\\n                          v-model=\\\"product.purchaseUnit\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_product_price_form_reference_unit_field %}\\n                <sw-field type=\\\"number\\\"\\n                          :label=\\\"$tc('sw-product.priceForm.labelReferenceUnit')\\\"\\n                          :placeholder=\\\"$tc('sw-product.priceForm.placeholderReferenceUnit')\\\"\\n                          min=\\\"0.00\\\"\\n                          step=\\\"0.01\\\"\\n                          v-model=\\\"product.referenceUnit\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_product_price_form_pack_unit_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-product.priceForm.labelPackUnit')\\\"\\n                          :placeholder=\\\"$tc('sw-product.priceForm.placeholderPackUnit')\\\"\\n                          v-model=\\\"product.packUnit\\\">\\n                </sw-field>\\n            {% endblock %}\\n        </sw-container>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_product_settings_form %}\\n    <div class=\\\"sw-product-settings-form\\\">\\n\\n        {% block sw_product_settings_form_content %}\\n            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                {% block sw_product_settings_form_create_date_field %}\\n                    <sw-field type=\\\"datetime\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelCreatedAt')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderCreatedAt')\\\"\\n                              v-model=\\\"product.createdAt\\\">\\n                        <sw-icon name=\\\"default-calendar-full\\\" slot=\\\"suffix\\\"></sw-icon>\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_release_date_field %}\\n                    <sw-field type=\\\"datetime\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelReleaseDate')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderReleaseDate')\\\"\\n                              v-model=\\\"product.releaseDate\\\">\\n                        <sw-icon name=\\\"default-calendar-full\\\" slot=\\\"suffix\\\"></sw-icon>\\n                    </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n\\n            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                {% block sw_product_settings_form_width_field %}\\n                    <sw-field type=\\\"number\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelWidth')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderWidth')\\\"\\n                              suffix=\\\"mm\\\"\\n                              step=\\\"0.01\\\"\\n                              v-model=\\\"product.width\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_height_field %}\\n                    <sw-field type=\\\"number\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelHeight')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderHeight')\\\"\\n                              suffix=\\\"mm\\\"\\n                              step=\\\"0.01\\\"\\n                              v-model=\\\"product.height\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_length_field %}\\n                    <sw-field type=\\\"number\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelLength')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderLength')\\\"\\n                              suffix=\\\"mm\\\"\\n                              step=\\\"0.01\\\"\\n                              v-model=\\\"product.length\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_weight_field %}\\n                    <sw-field type=\\\"number\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelWeight')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderWeight')\\\"\\n                              suffix=\\\"kg\\\"\\n                              step=\\\"0.01\\\"\\n                              v-model=\\\"product.weight\\\">\\n                    </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n\\n            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                    {% block sw_product_settings_form_min_purchase_field %}\\n                        <sw-field type=\\\"number\\\"\\n                                  :label=\\\"$tc('sw-product.settingsForm.labelMinPurchase')\\\"\\n                                  :placeholder=\\\"$tc('sw-product.settingsForm.placeholderMinPurchase')\\\"\\n                                  v-model=\\\"product.minPurchase\\\">\\n                        </sw-field>\\n                    {% endblock %}\\n\\n                    {% block sw_product_settings_form_max_purchase_field %}\\n                        <sw-field type=\\\"number\\\"\\n                                  :label=\\\"$tc('sw-product.settingsForm.labelMaxPurchase')\\\"\\n                                  :placeholder=\\\"$tc('sw-product.settingsForm.placeholderMaxPurchase')\\\"\\n                                  v-model=\\\"product.maxPurchase\\\">\\n                        </sw-field>\\n                    {% endblock %}\\n                </sw-container>\\n\\n                {% block sw_product_settings_form_ean_field %}\\n                    <sw-field type=\\\"text\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelEan')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderEan')\\\"\\n                              v-model=\\\"product.ean\\\">\\n                    </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n\\n            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                {% block sw_product_settings_form_pseudo_sales_field %}\\n                    <sw-field type=\\\"number\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelPseudoSales')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderPseudoSales')\\\"\\n                              v-model=\\\"product.pseudoSales\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_stock_field %}\\n                    <sw-field type=\\\"number\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelStock')\\\"\\n                              :placeholder=\\\"$tc('sw-product.settingsForm.placeholderStock')\\\"\\n                              v-model=\\\"product.stock\\\">\\n                    </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n\\n            <sw-container grid=\\\"1fr 1fr 1fr\\\" gap=\\\"0px 30px\\\" align=\\\"center\\\">\\n                {% block sw_product_settings_form_active_field %}\\n                    <sw-field type=\\\"checkbox\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelActive')\\\"\\n                              v-model=\\\"product.active\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_shipping_free_field %}\\n                    <sw-field type=\\\"checkbox\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelShippingFree')\\\"\\n                              v-model=\\\"product.shippingFree\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_product_settings_form_mark_as_topseller_field %}\\n                    <sw-field type=\\\"checkbox\\\"\\n                              :label=\\\"$tc('sw-product.settingsForm.labelMarkAsTopseller')\\\"\\n                              v-model=\\\"product.markAsTopseller\\\">\\n                    </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_drop_zone %}\\n    <div class=\\\"sw-product-file-upload\\\">\\n        <label>\\n            <h3>Produktfotos</h3>\\n        </label>\\n        <input class=\\\"sw-product-file-upload__file-input\\\" type=\\\"file\\\" id=\\\"files\\\" ref=\\\"fileInput\\\" accept=\\\"image/*\\\" multiple @change=\\\"handleFileUploads\\\"/>\\n        {% block sw_product_media_upload_button %}\\n            <div class=\\\"sw-product-file-upload__dropzone\\\">\\n                <sw-button class=\\\"sw-product-file-upload__upload-button\\\" @click=\\\"addFiles\\\" variant=\\\"primary\\\">\\n                    {{ $tc('sw-product.file-upload.buttonUpload') }}\\n                </sw-button>\\n            </div>\\n        {% endblock %}\\n        {% block sw_product_media_grid %}\\n            <div class=\\\"sw-product-file-upload__grid\\\">\\n                {%  block sw_media_grid_items %}\\n                    <sw-image v-for=\\\"mediaItem in mediaItems\\\"\\n                              @sw-image-delete=\\\"removeFile( mediaItem.mediaId )\\\"\\n                              @sw-image-cover=\\\"markMediaAsCover( mediaItem )\\\"\\n                              :key=\\\"mediaItem.mediaId\\\"\\n                              :ref=\\\"'image' + mediaItem.mediaId\\\"\\n                              :isCover=\\\"isCover(mediaItem)\\\"\\n                              :altText=\\\"mediaItem.media.name\\\"\\n                              :url=\\\"getPreviewForMedia(mediaItem.media)\\\"\\n                              :downloadable=\\\"true\\\"></sw-image>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_product_detail_base %}\\n    <div class=\\\"sw-product-detail-base\\\">\\n\\n        {% block sw_product_detail_base_basic_info_card %}\\n            <sw-card :title=\\\"$tc('sw-product.detailBase.cardTitleProductInfo')\\\" :isLoading=\\\"product.isLoading\\\">\\n                {% block sw_product_detail_base_basic_info_form %}\\n                    <sw-product-basic-form :product=\\\"product\\\" :manufacturers=\\\"manufacturers\\\"></sw-product-basic-form>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_base_category_card %}\\n            <sw-card :title=\\\"$tc('sw-product.detailBase.cardTitleAssignment')\\\" :isLoading=\\\"product.isLoading\\\">\\n                {% block sw_product_detail_base_category_form %}\\n                    <sw-product-category-form :product=\\\"product\\\"></sw-product-category-form>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_base_price_card %}\\n            <sw-card :title=\\\"$tc('sw-product.detailBase.cardTitlePrices')\\\" :isLoading=\\\"product.isLoading\\\">\\n                {% block sw_product_detail_base_price_form %}\\n                    <sw-product-price-form :product=\\\"product\\\" :taxRates=\\\"taxes\\\" :currencies=\\\"currencies\\\"></sw-product-price-form>\\n                {% endblock %}\\n\\n                <sw-container grid=\\\"1fr\\\" justify=\\\"end\\\">\\n                    <router-link :to=\\\"{ name: 'sw.product.detail.prices', params: { id: $route.params.id } }\\\" class=\\\"sw-card__quick-link\\\">\\n                        {{ $tc('sw-product.detailBase.linkAdvancedPrices') }} <sw-icon name=\\\"default-arrow-simple-right\\\" small></sw-icon>\\n                    </router-link>\\n                </sw-container>\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_base_settings_card %}\\n            <sw-card :title=\\\"$tc('sw-product.detailBase.cardTitleSettings')\\\" :isLoading=\\\"product.isLoading\\\">\\n                {% block sw_product_detail_base_settings_form %}\\n                    <sw-product-settings-form :product=\\\"product\\\"></sw-product-settings-form>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_product_detail_prices %}\\n    <div class=\\\"sw-product-detail-context-prices\\\">\\n\\n        {% block sw_product_detail_prices_empty_state %}\\n            <sw-card class=\\\"context-prices__empty-state\\\"\\n                     v-if=\\\"!isLoaded && !product.priceRules.length\\\"\\n                     :large=\\\"true\\\">\\n                <sw-loader></sw-loader>\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_prices_price_card %}\\n            <sw-card :title=\\\"priceGroup.rule ? priceGroup.rule.name : $tc('sw-product.priceRules.cardTitlePriceRule')\\\"\\n                     v-for=\\\"priceGroup in priceRuleGroups\\\"\\n                     :key=\\\"priceGroup.ruleId\\\"\\n                     class=\\\"context-price\\\"\\n                     :isLoading=\\\"isLoading\\\"\\n                     :large=\\\"true\\\"\\n                     v-else>\\n\\n                {% block sw_product_detail_prices_price_card_toolbar %}\\n                    <div class=\\\"context-prices__toolbar\\\">\\n\\n                        {% block sw_product_detail_prices_price_card_rule_selection %}\\n                            <sw-field type=\\\"select\\\"\\n                                      :placeholder=\\\"$tc('sw-product.priceRules.placeholderRule')\\\"\\n                                      validation=\\\"required\\\"\\n                                      :value=\\\"priceGroup.ruleId\\\"\\n                                      @change=\\\"onRuleChange($event, priceGroup.ruleId)\\\">\\n\\n                                {% block sw_product_detail_prices_price_card_rule_selection_options %}\\n                                    <option slot=\\\"options\\\"\\n                                            v-for=\\\"rule in rules\\\"\\n                                            :key=\\\"rule.id\\\"\\n                                            :value=\\\"rule.id\\\"\\n                                            :disabled=\\\"!!priceRuleGroups[rule.id]\\\">{{ rule.name }}</option>\\n                                {% endblock %}\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_product_detail_prices_price_card_action_delete %}\\n                            <sw-button @click=\\\"onPriceGroupDelete(priceGroup.ruleId)\\\">\\n                                <sw-icon name=\\\"small-default-x-line-medium\\\" size=\\\"20\\\"></sw-icon> {{ $tc('sw-product.priceRules.buttonPriceRuleDelete') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_product_detail_prices_price_card_action_duplicate %}\\n                            <sw-button @click=\\\"onPriceGroupDuplicate(priceGroup)\\\" :disabled=\\\"priceGroup.ruleId === null\\\">\\n                                <sw-icon name=\\\"small-copy\\\" size=\\\"20\\\"></sw-icon> {{ $tc('sw-product.priceRules.buttonPriceRuleDuplicate') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_product_detail_prices_price_card_action_currency %}\\n                            <sw-context-button :menuOffsetLeft=\\\"0\\\">\\n                                {% block sw_product_detail_prices_price_card_action_currency_button %}\\n                                    <sw-button slot=\\\"button\\\" :disabled=\\\"priceGroup.ruleId === null\\\">\\n                                        <sw-icon name=\\\"default-basic-plus-circle\\\" size=\\\"20\\\"></sw-icon> {{ $tc('sw-product.priceRules.buttonPriceRuleCurrencyAdd') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block sw_product_detail_prices_price_card_action_currency_menu %}\\n                                    <sw-context-menu-item v-for=\\\"currency in currencies\\\"\\n                                                          :key=\\\"currency.id\\\"\\n                                                          :disabled=\\\"!!priceGroup.currencies[currency.id] || priceGroup.ruleId === null\\\"\\n                                                          @click=\\\"onAddCurrency(priceGroup.ruleId, currency)\\\">\\n                                        <span slot=\\\"icon\\\" class=\\\"currency-symbol\\\">{{ currency.symbol }}</span>\\n                                        {{ currency.name }}\\n                                        {{ (currency.isDefault) ? $tc('sw-product.priceRules.textCurrencyDefault') : '' }}\\n                                    </sw-context-menu-item>\\n                                {% endblock %}\\n                            </sw-context-button>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_product_detail_prices_price_matrix %}\\n                    <div class=\\\"context-prices__prices\\\" v-for=\\\"currencyRule in priceGroup.currencies\\\">\\n\\n                        {% block sw_product_detail_prices_price_matrix_title %}\\n                            <h3 v-if=\\\"currencyRule.currency\\\">\\n                                {{ $tc('sw-product.priceRules.textPriceRuleForCurrency') }}: {{ currencyRule.currency.name }} {{ (currencyRule.currency.isDefault) ? $tc('sw-product.priceRules.textCurrencyDefault') : '' }}\\n                            </h3>\\n                        {% endblock %}\\n\\n                        {% block sw_product_detail_prices_price_matrix_grid %}\\n                            <sw-grid :items=\\\"currencyRule.prices\\\" :selectable=\\\"false\\\" v-if=\\\"isLoaded\\\">\\n                                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                    {% block sw_product_detail_prices_price_matrix_grid_columns %}\\n\\n                                        {% block sw_product_detail_prices_price_matrix_grid_quantity_start %}\\n                                            <sw-grid-column flex=\\\"1\\\"\\n                                                            align=\\\"stretch\\\"\\n                                                            :label=\\\"$tc('sw-product.priceRules.columnQuantityStart')\\\">\\n                                                <sw-field type=\\\"number\\\"\\n                                                          validation=\\\"required\\\"\\n                                                          v-model=\\\"item.quantityStart\\\">\\n                                                </sw-field>\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_detail_prices_price_matrix_grid_quantity_end %}\\n                                            <sw-grid-column flex=\\\"1\\\"\\n                                                            align=\\\"stretch\\\"\\n                                                            :label=\\\"$tc('sw-product.priceRules.columnQuantityEnd')\\\">\\n                                                <sw-field type=\\\"number\\\"\\n                                                          v-model=\\\"item.quantityEnd\\\"\\n                                                          :validation=\\\"item.quantityEnd === null || item.quantityEnd > item.quantityStart\\\"\\n                                                          @change=\\\"onQuantityEndChange($event, item, priceGroup)\\\"\\n                                                          :placeholder=\\\"$tc('sw-product.priceRules.placeholderQuantityEnd')\\\">\\n                                                </sw-field>\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_detail_prices_price_matrix_grid_price %}\\n                                            <sw-grid-column flex=\\\"2\\\"\\n                                                            align=\\\"stretch\\\"\\n                                                            :label=\\\"$tc('sw-product.priceRules.columnPrice')\\\">\\n                                                <sw-price-field :price=\\\"item.price\\\"\\n                                                                :taxRate=\\\"productTaxRate\\\"\\n                                                                :currency=\\\"currencyRule.currency\\\"\\n                                                                validation=\\\"required\\\">\\n                                                </sw-price-field>\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_detail_prices_price_matrix_grid_actions %}\\n                                            <sw-grid-column flex=\\\"64px\\\" align=\\\"center\\\">\\n                                                {% block sw_product_detail_prices_price_matrix_grid_actions_button %}\\n                                                    <sw-context-button>\\n                                                        {% block sw_product_detail_prices_price_matrix_grid_actions_duplicate %}\\n                                                            <sw-context-menu-item @click=\\\"onPriceRuleDuplicate(item)\\\">\\n                                                                {{ $tc('sw-product.priceRules.contextMenuDuplicate') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_product_detail_prices_price_matrix_grid_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\"\\n                                                                                  @click=\\\"onPriceRuleDelete(item)\\\"\\n                                                                                  :disabled=\\\"currencyRule.currency.isDefault &&\\n                                                                                             currencyRule.prices.length <= 1 &&\\n                                                                                             Object.keys(priceGroup.currencies).length > 1\\\">\\n                                                                {{ $tc('sw-product.priceRules.contextMenuDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </template>\\n                            </sw-grid>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_prices_actions %}\\n            <div class=\\\"context-prices__actions\\\" v-if=\\\"!isLoading\\\">\\n                {% block sw_product_detail_prices_actions_add_button %}\\n                    <sw-button @click=\\\"onAddNewPriceGroup\\\">\\n                        {{ $tc('sw-product.priceRules.buttonAddAdditionalPriceRule') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_product_list %}\\n    <sw-page class=\\\"sw-product-list\\\">\\n\\n        {% block sw_order_list_search_bar_type %}\\n            <template slot=\\\"search-bar-type\\\">\\n                {{ $tc('sw-product.general.mainMenuItemGeneral') }}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_product_list_smart_bar_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                {% block sw_product_list_smart_bar_header_title %}\\n                    <h2>\\n                        {% block sw_product_list_smart_bar_header_title_text %}\\n                            {{ $tc('sw-product.list.textProductOverview') }}\\n                        {% endblock %}\\n\\n                        {% block sw_product_list_smart_bar_header_amount %}\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                ({{ total }})\\n                            </span>\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_product_list_smart_bar_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_product_list_smart_bar_actions_add %}\\n                    <sw-button :routerLink=\\\"{ name: 'sw.product.create' }\\\" variant=\\\"primary\\\">\\n                        {{ $tc('sw-product.list.buttonAddProduct') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        <template slot=\\\"content\\\">\\n            {% block sw_product_list_content %}\\n                <div class=\\\"sw-product-list__content\\\">\\n                    {% block sw_product_list_grid %}\\n                        <sw-grid v-if=\\\"total\\\"\\n                                 :items=\\\"products\\\"\\n                                 :sortBy=\\\"sortBy\\\"\\n                                 :sortDirection=\\\"sortDirection\\\"\\n                                 :sidebar=\\\"true\\\"\\n                                 :isFullpage=\\\"true\\\"\\n                                 :selectable=\\\"false\\\"\\n                                 @edit=\\\"onEdit\\\"\\n                                 @sort-column=\\\"onSortColumn\\\"\\n                                 @inline-edit-finish=\\\"onInlineEditSave\\\">\\n\\n                            {% block sw_product_list_grid_slots %}\\n                                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                    {% block sw_product_list_grid_columns %}\\n\\n                                        {% block sw_product_list_grid_columns_name %}\\n                                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-product.list.columnName')\\\"\\n                                                            dataIndex=\\\"name\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            editable>\\n                                                {% block sw_product_list_grid_columns_name_link %}\\n                                                    <router-link :to=\\\"{ name: 'sw.product.detail', params: { id: item.id } }\\\">\\n                                                        {% block sw_product_list_grid_columns_name_label %}\\n                                                            {{ item.name }}\\n                                                        {% endblock %}\\n                                                    </router-link>\\n                                                {% endblock %}\\n\\n                                                {% block sw_product_list_grid_columns_name_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.name\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_columns_manufacturer %}\\n                                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-product.list.columnManufacturer')\\\"\\n                                                            dataIndex=\\\"manufacturer.name\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            editable>\\n                                                {{ item.manufacturer.name }}\\n\\n                                                {% block sw_product_list_grid_columns_manufacturer_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.manufacturer.name\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_columns_active %}\\n                                            <sw-grid-column flex=\\\"minmax(80px, 95px)\\\"\\n                                                            :label=\\\"$tc('sw-product.list.columnActive')\\\"\\n                                                            dataIndex=\\\"active\\\"\\n                                                            align=\\\"center\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            editable>\\n                                                <sw-icon name=\\\"small-default-checkmark-line-medium\\\" small v-if=\\\"item.active\\\" class=\\\"is--active\\\"></sw-icon>\\n                                                <sw-icon name=\\\"small-default-x-line-medium\\\" small v-else class=\\\"is--inactive\\\"></sw-icon>\\n\\n                                                {% block sw_product_list_grid_columns_active_editor %}\\n                                                    <sw-field type=\\\"checkbox\\\" v-model=\\\"item.active\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_columns_price %}\\n                                            <sw-grid-column flex=\\\"minmax(95px, 105px)\\\"\\n                                                            :label=\\\"$tc('sw-product.list.columnPrice')\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            dataIndex=\\\"price\\\"\\n                                                            align=\\\"right\\\">\\n                                                {{ item.price.gross | currency }}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_columns_stock %}\\n                                            <sw-grid-column flex=\\\"minmax(95px, 150px)\\\"\\n                                                            :label=\\\"$tc('sw-product.list.columnInStock')\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            dataIndex=\\\"stock\\\"\\n                                                            align=\\\"right\\\">\\n                                                {{ item.stock }}\\n                                                <sw-color-badge :variant=\\\"item.stock | stockColorVariant\\\"></sw-color-badge>\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_columns_actions %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 100px)\\\" align=\\\"center\\\">\\n                                                <sw-context-button>\\n                                                    {% block sw_product_list_grid_columns_actions_edit %}\\n                                                        <sw-context-menu-item :routerLink=\\\"{ name: 'sw.product.detail', params: { id: item.id } }\\\">\\n                                                            {{ $tc('sw-product.list.contextMenuEdit') }}\\n                                                        </sw-context-menu-item>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_product_list_grid_columns_actions_duplicate %}\\n                                                        <sw-context-menu-item :disabled=\\\"true\\\">\\n                                                            {{ $tc('sw-product.list.contextMenuDuplicate') }}\\n                                                        </sw-context-menu-item>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_product_list_grid_columns_actions_delete %}\\n                                                        <sw-context-menu-item @click=\\\"onDeleteProduct(item.id)\\\" variant=\\\"danger\\\">\\n                                                            {{ $tc('sw-product.list.contextMenuDelete') }}\\n                                                        </sw-context-menu-item>\\n                                                    {% endblock %}\\n                                                </sw-context-button>\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                    {% endblock %}\\n\\n                                    {% block sw_product_list_delete_modal %}\\n                                        <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                  @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                  :title=\\\"$tc('sw-product.list.modalTitleDelete')\\\"\\n                                                  variant=\\\"small\\\">\\n                                            {% block sw_product_list_delete_modal_confirm_delete_text %}\\n                                                <p class=\\\"sw-product-list__confirm-delete-text\\\">\\n                                                    {{ $tc('sw-product.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                </p>\\n                                            {% endblock %}\\n\\n                                            {% block sw_product_list_delete_modal_footer %}\\n                                                <template slot=\\\"modal-footer\\\">\\n                                                    {% block sw_product_list_delete_modal_cancel %}\\n                                                        <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                   size=\\\"small\\\">\\n                                                            {{ $tc('sw-product.list.buttonCancel') }}\\n                                                        </sw-button>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_product_list_delete_modal_confirm %}\\n                                                        <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                   variant=\\\"primary\\\"\\n                                                                   size=\\\"small\\\">\\n                                                            {{ $tc('sw-product.list.buttonDelete') }}\\n                                                        </sw-button>\\n                                                    {% endblock %}\\n                                                </template>\\n                                            {% endblock %}\\n                                        </sw-modal>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                <template slot=\\\"pagination\\\">\\n                                    {% block sw_product_list_grid_pagination %}\\n                                        <sw-pagination :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block sw_product_list_grid_sidebar %}\\n                                    <sw-sidebar slot=\\\"sidebar\\\">\\n                                        {% block sw_product_list_grid_sidebar_filter %}\\n                                            <sw-sidebar-item icon=\\\"default-action-filter\\\"\\n                                                             :title=\\\"$tc('sw-product.list.titleFilter')\\\">\\n                                                <sw-field type=\\\"switch\\\"\\n                                                          v-for=\\\"(filter, index) in filters\\\"\\n                                                          :label=\\\"filter.label\\\"\\n                                                          :value=\\\"filter.active\\\"\\n                                                          :key=\\\"index\\\"\\n                                                          @change=\\\"onSwitchFilter(filter.criteria, index)\\\">\\n                                                </sw-field>\\n\\n                                                <sw-alert variant=\\\"warning\\\" :showIcon=\\\"false\\\">\\n                                                    <strong>Demo</strong> filters which will be replaced with more meaningful filters in the future.\\n                                                </sw-alert>\\n                                            </sw-sidebar-item>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_sidebar_refresh %}\\n                                            <sw-sidebar-item icon=\\\"default-arrow-360-left\\\"\\n                                                             :title=\\\"$tc('sw-product.list.titleRefresh')\\\"\\n                                                             @click=\\\"onRefresh\\\">\\n                                            </sw-sidebar-item>\\n                                        {% endblock %}\\n                                    </sw-sidebar>\\n                                {% endblock %}\\n                            {% endblock %}\\n                        </sw-grid>\\n                    {% endblock %}\\n\\n                    {% block sw_product_list_empty_state %}\\n                        <sw-empty-state v-else-if=\\\"!isLoading && !total\\\" :title=\\\"$tc('sw-product.list.messageEmpty')\\\"></sw-empty-state>\\n                    {% endblock %}\\n\\n                    {% block sw_product_list_grid_loader %}\\n                        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_product_detail %}\\n    <sw-page class=\\\"sw-product-detail\\\">\\n\\n        {% block sw_product_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"product.name\\\">{{ product.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-product.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_product_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"product.isLoading\\\" :routerLink=\\\"{ name: 'sw.product.index' }\\\">\\n                        {{ $tc('sw-product.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_product_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"product.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-product.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_product_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n                {% block sw_product_detail_content_tabs %}\\n                    <sw-tabs class=\\\"sw-product-detail-page__tabs\\\">\\n                        <sw-tabs-item :route=\\\"{ name: 'sw.product.detail.base', params: { id: $route.params.id } }\\\"\\n                                      :title=\\\"$tc('sw-product.detail.tabGeneral')\\\">\\n                            {{ $tc('sw-product.detail.tabGeneral') }}\\n                        </sw-tabs-item>\\n                        <sw-tabs-item :route=\\\"{ name: 'sw.product.detail.prices', params: { id: $route.params.id } }\\\"\\n                                      :title=\\\"$tc('sw-product.detail.tabAdvancedPrices')\\\">\\n                            {{ $tc('sw-product.detail.tabAdvancedPrices') }}\\n                        </sw-tabs-item>\\n                    </sw-tabs>\\n                {% endblock %}\\n\\n                {% block sw_product_detail_content_view %}\\n                    <router-view :product=\\\"product\\\"\\n                                 :manufacturers=\\\"manufacturers\\\"\\n                                 :taxes=\\\"taxes\\\"\\n                                 :currencies=\\\"currencies\\\">\\n                    </router-view>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_product_detail_content_tabs %}{% endblock %}\\n\\n{% block sw_product_detail_content_tabs %}\\n    <sw-tabs class=\\\"sw-product-detail-page__tabs\\\">\\n        <sw-tabs-item :route=\\\"{ name: 'sw.product.create', params: { id: $route.params.id } }\\\"\\n                      :title=\\\"$tc('sw-product.detail.tabGeneral')\\\">\\n            {{ $tc('sw-product.detail.tabGeneral') }}\\n        </sw-tabs-item>\\n    </sw-tabs>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_catalog_list %}\\n    <sw-page class=\\\"sw-catalog-list\\\">\\n        <template slot=\\\"smart-bar-header\\\">\\n            {% block sw_catalog_list_smart_bar_header %}\\n                <h2>{{ $tc('sw-catalog.general.headlineCatalogs') }}</h2>\\n            {% endblock %}\\n        </template>\\n\\n        <template slot=\\\"smart-bar-actions\\\">\\n            {% block sw_catalog_list_smart_bar_actions %}\\n                <sw-button :routerLink=\\\"{ name: 'sw.catalog.create' }\\\" variant=\\\"primary\\\">\\n                    {{ $tc('sw-catalog.general.buttonCreateCatalog') }}\\n                </sw-button>\\n            {% endblock %}\\n        </template>\\n\\n        <sw-card-view slot=\\\"content\\\" class=\\\"sw-catalog-list__content\\\">\\n            {% block sw_catalog_list_content %}\\n\\n                {% block sw_catalog_list_introduction %}\\n                    <sw-card class=\\\"sw-catalog-list__overview\\\">\\n                        <sw-container grid=\\\"100px 1fr\\\" align=\\\"start\\\">\\n                            <sw-icon name=\\\"default-package-closed\\\" size=\\\"60\\\" :style=\\\"{ color: $route.meta.$module.color }\\\"></sw-icon>\\n                            <div class=\\\"sw-catalog-list__intro\\\">\\n                                <h3>{{ $tc('sw-catalog.general.introHeadlineCatalogs') }}</h3>\\n                                <p>{{ $tc('sw-catalog.general.introDescriptionCatalogs') }}</p>\\n                            </div>\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n\\n                {% block sw_catalog_list_overview %}\\n                    <sw-card :isLoading=\\\"isLoading\\\" class=\\\"sw-catalog-list__overview\\\">\\n                        {% block sw_catalog_list_grid %}\\n                            <sw-grid :items=\\\"catalogs\\\" :selectable=\\\"false\\\">\\n\\n                                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                    {% block sw_catalog_list_grid_columns %}\\n                                        {% block sw_catalog_list_grid_column_name %}\\n                                            <sw-grid-column flex=\\\"1fr\\\"\\n                                                            :label=\\\"$tc('sw-catalog.list.columnLabelName')\\\"\\n                                                            dataIndex=\\\"name\\\">\\n                                                {{ item.name }}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_catalog_list_grid_column_actions %}\\n                                            <sw-grid-column flex=\\\"200px\\\" :label=\\\"$tc('sw-catalog.list.columnLabelActions')\\\" align=\\\"center\\\">\\n                                                {% block sw_catalog_list_grid_column_actions_edit %}\\n                                                    <router-link :to=\\\"{ name: 'sw.catalog.detail', params: { id: item.id } }\\\" class=\\\"sw-catalog-list__edit-action\\\">\\n                                                        <sw-icon name=\\\"small-pencil-paper\\\" size=\\\"16\\\"></sw-icon> {{ $tc('sw-catalog.list.actionLabelEdit') }}\\n                                                    </router-link>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </template>\\n                            </sw-grid>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n            {% endblock %}\\n        </sw-card-view>\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_catalog_detail %}\\n    <sw-page class=\\\"sw-catalog-detail\\\">\\n        <template slot=\\\"smart-bar-header\\\">\\n            {% block sw_catalog_detail_smart_bar_header %}\\n                <h2>{{ catalog.name }}</h2>\\n            {% endblock %}\\n        </template>\\n\\n        <template slot=\\\"smart-bar-actions\\\">\\n            {% block sw_catalog_detail_smart_bar_actions %}\\n                {% block sw_catalog_detail_smart_bar_actions_abort %}\\n                    <sw-button :disabled=\\\"isLoading\\\" :routerLink=\\\"{ name: 'sw.catalog.index' }\\\">\\n                        {{ $tc('sw-catalog.detail.buttonAbortLabel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_catalog_detail_smart_bar_actions_save %}\\n                    <sw-button :disabled=\\\"isLoading\\\" variant=\\\"primary\\\" @click.prevent=\\\"onSave\\\">{{ $tc('sw-catalog.detail.buttonSaveLabel') }}</sw-button>\\n                {% endblock %}\\n            {% endblock %}\\n        </template>\\n\\n        <sw-card-view slot=\\\"content\\\">\\n            {% block sw_catalog_detail_content %}\\n\\n                {% block sw_catalog_detail_info %}\\n                    <div class=\\\"sw-catalog-detail__info\\\">\\n\\n                        {% block sw_catalog_detail_info_header %}\\n                            <sw-container grid=\\\"1fr 1fr\\\">\\n                                {% block sw_catalog_detail_info_intro %}\\n                                    <div class=\\\"sw-catalog-detail__intro\\\">\\n                                        <h3>{{ $tc('sw-catalog.detail.introHeadlineDetail') }}</h3>\\n                                        <p v-html=\\\"$tc('sw-catalog.detail.introDescriptionDetail', 0, { name: catalog.name })\\\"></p>\\n                                    </div>\\n                                {% endblock %}\\n                            </sw-container>\\n                        {% endblock %}\\n\\n                        {% block sw_catalog_detail_info_statistic %}\\n                            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"30px\\\" class=\\\"sw-catalog-detail__stats\\\">\\n\\n                                {% block sw_catalog_detail_info_statistic_products %}\\n                                    <div class=\\\"info-card\\\">\\n                                        <h4 class=\\\"info-card__headline\\\">{{ $tc('sw-catalog.detail.labelOverviewProducts') }}</h4>\\n                                        <div class=\\\"info-card__stats is--color-product\\\">\\n                                            <span v-if=\\\"aggregations.productCount\\\">{{ aggregations.productCount.count }}</span>\\n                                            <sw-loader size=\\\"30\\\" v-else></sw-loader>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_catalog_detail_info_statistic_categories %}\\n                                    <div class=\\\"info-card\\\">\\n                                        <h4 class=\\\"info-card__headline\\\">{{ $tc('sw-catalog.detail.labelOverviewCategories') }}</h4>\\n                                        <div class=\\\"info-card__stats is--color-category\\\">\\n                                            <span v-if=\\\"aggregations.categoryCount\\\">{{ aggregations.categoryCount.count }}</span>\\n                                            <sw-loader size=\\\"30\\\" v-else></sw-loader>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_catalog_detail_info_statistic_pages %}\\n                                    <div class=\\\"info-card\\\">\\n                                        <h4 class=\\\"info-card__headline\\\">{{ $tc('sw-catalog.detail.labelOverviewPages') }}</h4>\\n                                        <div class=\\\"info-card__stats is--color-page\\\">0</div>\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_catalog_detail_info_statistic_media %}\\n                                    <div class=\\\"info-card\\\">\\n                                        <h4 class=\\\"info-card__headline\\\">{{ $tc('sw-catalog.detail.labelOverviewMedia') }}</h4>\\n                                        <div class=\\\"info-card__stats is--color-media\\\">\\n                                            <span v-if=\\\"aggregations.mediaCount\\\">{{ aggregations.mediaCount.count }}</span>\\n                                            <sw-loader size=\\\"30\\\" v-else></sw-loader>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n                            </sw-container>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_catalog_detail_properties %}\\n                    <sw-card :title=\\\"$tc('sw-catalog.detail.cardTitleProperties')\\\" :isLoading=\\\"isLoading\\\" class=\\\"sw-catalog-detail__properties\\\">\\n                        {% block sw_catalog_detail_properties_name_field %}\\n                            <sw-field :label=\\\"$tc('sw-catalog.detail.fieldLabelName')\\\" name=\\\"catalogName\\\" v-model=\\\"catalog.name\\\"></sw-field>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n\\n                {% block sw_catalog_detail_categories %}\\n                    <sw-card :title=\\\"$tc('sw-catalog.detail.cardTitleCategories')\\\" :isLoading=\\\"isLoading\\\" class=\\\"sw-catalog-detail__categories\\\">\\n\\n                        {% block sw_catalog_detail_categories_tree %}\\n                            <sw-tree :items=\\\"categories\\\" :sortable=\\\"true\\\" @getTreeItems=\\\"getCategories\\\" @searchTreeItems=\\\"searchCategories\\\">\\n\\n                                {% block sw_catalog_detail_categories_tree_actions %}\\n                                    <template slot=\\\"actions\\\">\\n                                        <sw-container grid=\\\"3fr 1fr\\\" gap=\\\"0 20px\\\">\\n                                            <sw-field v-model=\\\"addCategoryName\\\" @keyup.enter=\\\"onAddCategory\\\" :placeholder=\\\"$tc('sw-catalog.detail.fieldPlaceholderAddCategory')\\\"></sw-field>\\n                                            <sw-button @click=\\\"onAddCategory\\\">{{ $tc('sw-catalog.detail.buttonAddCategory') }}</sw-button>\\n                                        </sw-container>\\n                                    </template>\\n                                {% endblock %}\\n\\n                                {% block sw_catalog_detail_categories_tree_items %}\\n                                    <template slot=\\\"items\\\" slot-scope=\\\"{ treeItems, sortable, draggedItem }\\\">\\n                                        {% block sw_catalog_detail_categories_tree_items_item %}\\n                                            <sw-tree-item v-for=\\\"item in treeItems\\\"\\n                                                          :key=\\\"item.id\\\"\\n                                                          :item=\\\"item\\\"\\n                                                          :sortable=\\\"currentEditCategory === null ? sortable : false\\\"\\n                                                          :draggedItem=\\\"draggedItem\\\">\\n\\n                                                {% block sw_catalog_detail_categories_tree_items_item_content %}\\n                                                    <template slot=\\\"content\\\" slot-scope=\\\"{ item }\\\">\\n                                                        {% block sw_catalog_detail_categories_tree_items_item_content_edit %}\\n                                                            <template v-if=\\\"currentEditCategory === item.data.id\\\">\\n                                                                <sw-field class=\\\"sw-catalog-detail__edit-category-field\\\"\\n                                                                          v-model=\\\"item.data.name\\\"\\n                                                                          @keyup.enter=\\\"onEditCategoryFinish(item)\\\">\\n                                                                </sw-field>\\n                                                            </template>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_catalog_detail_categories_tree_items_item_content_default %}\\n                                                            <template v-else>\\n                                                                <span class=\\\"sw-tree-item__label\\\">{{ item.data.name }}</span>\\n                                                                <span class=\\\"sw-tree-item__child-count\\\" v-if=\\\"item.childCount > 0\\\">{{ item.childCount }}</span>\\n                                                            </template>\\n                                                        {% endblock %}\\n                                                    </template>\\n                                                {% endblock %}\\n\\n                                                {% block sw_catalog_detail_categories_tree_items_item_actions %}\\n                                                    <template slot=\\\"actions\\\" slot-scope=\\\"{ item, openTreeItem }\\\">\\n\\n                                                        {% block sw_catalog_detail_categories_tree_items_item_actions_edit_mode %}\\n                                                            <template v-if=\\\"currentEditCategory === item.data.id\\\">\\n                                                                <sw-button variant=\\\"primary\\\" @click=\\\"onEditCategoryFinish(item)\\\">\\n                                                                    <sw-icon name=\\\"small-default-checkmark-line-medium\\\" size=\\\"14\\\"></sw-icon>\\n                                                                </sw-button>\\n                                                            </template>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_catalog_detail_categories_tree_items_item_actions_default %}\\n                                                            <template v-else>\\n                                                                <sw-context-button>\\n                                                                    {% block sw_catalog_detail_categories_tree_items_item_actions_add_child %}\\n                                                                        <sw-context-menu-item icon=\\\"small-documentation-map-closed\\\"\\n                                                                                              :disabled=\\\"currentEditCategory !== null\\\"\\n                                                                                              @click=\\\"onAddChildCategory(item); openTreeItem(true)\\\">\\n                                                                            {{ $tc('sw-catalog.detail.contextButtonAddChildCategory') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n\\n                                                                    {% block sw_catalog_detail_categories_tree_items_item_actions_standard %}\\n                                                                        <div class=\\\"sw-context-menu__group\\\">\\n                                                                            {% block sw_catalog_detail_categories_tree_items_item_actions_edit %}\\n                                                                                <sw-context-menu-item icon=\\\"small-pencil\\\" @click=\\\"onEditCategory(item)\\\">\\n                                                                                    {{ $tc('sw-catalog.detail.contextButtonEditCategory') }}\\n                                                                                </sw-context-menu-item>\\n                                                                            {% endblock %}\\n\\n                                                                            {% block sw_catalog_detail_categories_tree_items_item_actions_delete %}\\n                                                                                <sw-context-menu-item icon=\\\"small-default-x-line-medium\\\" variant=\\\"danger\\\" @click=\\\"onDeleteCategory(item)\\\">\\n                                                                                    {{ $tc('sw-catalog.detail.contextButtonDeleteCategory') }}\\n                                                                                </sw-context-menu-item>\\n                                                                            {% endblock %}\\n                                                                        </div>\\n                                                                    {% endblock %}\\n                                                                </sw-context-button>\\n                                                            </template>\\n                                                        {% endblock %}\\n                                                    </template>\\n                                                {% endblock %}\\n                                            </sw-tree-item>\\n                                        {% endblock %}\\n                                    </template>\\n                                {% endblock %}\\n                            </sw-tree>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n            {% endblock %}\\n        </sw-card-view>\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_catalog_detail_smart_bar_header %}\\n    <h2 v-if=\\\"catalog.name\\\">{{ catalog.name }}</h2>\\n    <h2 v-else>{{ $tc('sw-catalog.create.headlineNewCatalog') }}</h2>\\n{% endblock %}\\n\\n{% block sw_catalog_detail_info %}{% endblock %}\";","module.exports = \"{% block sw_customer_list %}\\n    <sw-page class=\\\"sw-customer-list\\\">\\n\\n        {% block sw_order_list_search_bar_type %}\\n            <template slot=\\\"search-bar-type\\\">\\n                {{ $tc('sw-customer.general.mainMenuItemGeneral') }}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_customer_list_smart_bar_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                {% block sw_customer_list_smart_bar_header_title %}\\n                    <h2>\\n                        {% block sw_customer_list_smart_bar_header_title_text %}\\n                            {{ $tc('sw-customer.list.textCustomers') }}\\n                        {% endblock %}\\n\\n                        {% block sw_customer_list_smart_bar_header_amount %}\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                ({{ total }})\\n                            </span>\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_customer_list_smart_bar_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_customer_list_smart_bar_actions_add %}\\n                    <sw-button variant=\\\"primary\\\" :routerLink=\\\"{ name: 'sw.customer.create' }\\\">\\n                        {{ $tc('sw-customer.list.buttonAddCustomer') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        <template slot=\\\"content\\\">\\n            {% block sw_customer_list_content %}\\n                <div class=\\\"sw-customer-list__content\\\">\\n                    {% block sw_customer_list_grid %}\\n                        <sw-grid v-if=\\\"total\\\"\\n                                 :items=\\\"customers\\\"\\n                                 :sortBy=\\\"sortBy\\\"\\n                                 :sortDirection=\\\"sortDirection\\\"\\n                                 :sidebar=\\\"true\\\"\\n                                 :selectable=\\\"false\\\"\\n                                 :isFullpage=\\\"true\\\"\\n                                 @sort-column=\\\"onSortColumn\\\"\\n                                 @inline-edit-finish=\\\"onInlineEditSave\\\">\\n\\n                            {% block sw_customer_list_grid_slots %}\\n                                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                    {% block sw_customer_list_grid_columns %}\\n\\n                                        {% block sw_customer_list_grid_columns_customer_number %}\\n                                            <sw-grid-column flex=\\\"minmax(80px, 100px)\\\"\\n                                                            :label=\\\"$tc('sw-customer.list.columnCustomerNumber')\\\"\\n                                                            dataIndex=\\\"customerNumber\\\"\\n                                                            align=\\\"right\\\"\\n                                                            truncate\\n                                                            sortable\\n                                                            editable>\\n                                                {% block sw_customer_list_grid_columns_customer_number_label %}\\n                                                    {{ item.customerNumber }}\\n                                                {% endblock %}\\n\\n                                                {% block sw_customer_list_grid_columns_customer_number_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.customerNumber\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_list_grid_columns_name %}\\n                                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-customer.list.columnName')\\\"\\n                                                            dataIndex=\\\"firstName,lastName\\\"\\n                                                            truncate\\n                                                            sortable\\n                                                            editable>\\n                                                {% block sw_customer_list_grid_columns_name_label %}\\n                                                    <router-link :to=\\\"{ name: 'sw.customer.detail', params: { id: item.id } }\\\">\\n                                                        {{ item.firstName }} {{ item.lastName }}\\n                                                    </router-link>\\n                                                {% endblock %}\\n\\n                                                {% block sw_customer_list_grid_columns_name_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.firstName\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.lastName\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_list_grid_columns_street %}\\n                                            <sw-grid-column flex=\\\"minmax(150px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-customer.list.columnStreet')\\\"\\n                                                            dataIndex=\\\"defaultBillingAddress.street\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_customer_list_grid_columns_street_label %}\\n                                                    {{ item.defaultBillingAddress.street }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_list_grid_columns_zipcode %}\\n                                            <sw-grid-column flex=\\\"minmax(80px, 100px)\\\"\\n                                                            :label=\\\"$tc('sw-customer.list.columnZip')\\\"\\n                                                            dataIndex=\\\"defaultBillingAddress.zipcode\\\"\\n                                                            align=\\\"right\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_customer_list_grid_columns_zipcode_label %}\\n                                                    {{ item.defaultBillingAddress.zipcode }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_list_grid_columns_city %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-customer.list.columnCity')\\\"\\n                                                            dataIndex=\\\"defaultBillingAddress.city\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_customer_list_grid_columns_city_label %}\\n                                                    {{ item.defaultBillingAddress.city }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_list_grid_columns_email %}\\n                                            <sw-grid-column flex=\\\"minmax(300px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-customer.list.columnEmail')\\\"\\n                                                            dataIndex=\\\"email\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            editable>\\n                                                {% block sw_customer_list_grid_columns_email_label %}\\n                                                    {{ item.email }}\\n                                                {% endblock %}\\n\\n                                                {% block sw_customer_list_grid_columns_email_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.email\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_list_grid_columns_actions %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 100px)\\\"\\n                                                            align=\\\"center\\\">\\n                                                {% block sw_customer_list_grid_columns_actions_context_button %}\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_view %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{\\n                                                                        name: 'sw.customer.detail',\\n                                                                        params: { id: item.id } }\\\">\\n                                                                    {{ $tc('sw-customer.list.contextMenuView') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{\\n                                                                        name: 'sw.customer.detail.base',\\n                                                                        params: { id: item.id, edit: 'edit' }}\\\">\\n                                                                    {{ $tc('sw-customer.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_duplicate %}\\n                                                            <sw-context-menu-item :disabled=\\\"true\\\">\\n                                                                {{ $tc('sw-customer.list.contextMenuDuplicate') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" :disabled=\\\"true\\\">\\n                                                                {{ $tc('sw-customer.list.contextMenuDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </template>\\n                            {% endblock %}\\n\\n                            <template slot=\\\"pagination\\\">\\n                                {% block sw_customer_list_grid_pagination %}\\n                                    <sw-pagination :page=\\\"page\\\"\\n                                                   :limit=\\\"limit\\\"\\n                                                   :total=\\\"total\\\"\\n                                                   :total-visible=\\\"7\\\"\\n                                                   @page-change=\\\"onPageChange\\\">\\n                                    </sw-pagination>\\n                                {% endblock %}\\n                            </template>\\n\\n                            {% block sw_customer_list_grid_sidebar %}\\n                                <sw-sidebar slot=\\\"sidebar\\\">\\n                                    {% block sw_customer_list_grid_sidebar_refresh %}\\n                                        <sw-sidebar-item icon=\\\"default-arrow-360-left\\\" @click=\\\"onRefresh\\\"></sw-sidebar-item>\\n                                    {% endblock %}\\n                                </sw-sidebar>\\n                            {% endblock %}\\n                        </sw-grid>\\n                    {% endblock %}\\n\\n                    {% block sw_customer_list_empty_state %}\\n                        <sw-empty-state v-else-if=\\\"!isLoading && !total\\\" :title=\\\"$tc('sw-customer.list.messageEmpty')\\\"></sw-empty-state>\\n                    {% endblock %}\\n\\n                    {% block sw_customer_list_grid_loader %}\\n                        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </template>\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_customer_detail %}\\n    <sw-page class=\\\"sw-customer-detail\\\">\\n        {% block sw_customer_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2>{{ customerName }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_customer_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_customer_detail_actions_cancel_editing %}\\n                    <sw-button v-if=\\\"customerEditMode && !isCreateCustomer\\\"\\n                               :disabled=\\\"customer.isLoading\\\"\\n                               @click.prevent=\\\"onDisableCustomerEditMode\\\">\\n                        {{ $tc('sw-customer.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_customer_detail_actions_cancel %}\\n                    <sw-button v-else :disabled=\\\"customer.isLoading\\\" :routerLink=\\\"{ name: 'sw.customer.index' }\\\">\\n                        {{ $tc('sw-customer.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_customer_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"customer.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-customer.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_customer_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n                {% block sw_customer_detail_content_tabs %}\\n                    <sw-tabs class=\\\"sw-customer-detail-page__tabs\\\">\\n                        {% block sw_customer_detail_content_tab_general %}\\n                            <sw-tabs-item :route=\\\"{ name: 'sw.customer.detail.base', params: { id: $route.params.id } }\\\"\\n                                          :title=\\\"$tc('sw-customer.detail.tabGeneral')\\\">\\n                                {{ $tc('sw-customer.detail.tabGeneral') }}\\n                            </sw-tabs-item>\\n                        {% endblock %}\\n\\n                        {% block sw_customer_detail_content_tab_addresses %}\\n                            <sw-tabs-item :route=\\\"{ name: 'sw.customer.detail.addresses', params: { id: $route.params.id } }\\\"\\n                                          :title=\\\"$tc('sw-customer.detail.tabAddresses')\\\">\\n                                {{ $tc('sw-customer.detail.tabAddresses') }}\\n                            </sw-tabs-item>\\n                        {% endblock %}\\n                    </sw-tabs>\\n                {% endblock %}\\n\\n                {% block sw_customer_detail_content_view %}\\n                    <router-view :customer=\\\"customer\\\"\\n                                 :customerName=\\\"customerName\\\"\\n                                 :addresses=\\\"addresses\\\"\\n                                 :salesChannels=\\\"salesChannels\\\"\\n                                 :customerGroups=\\\"customerGroups\\\"\\n                                 :paymentMethods=\\\"paymentMethods\\\"\\n                                 :countries=\\\"countries\\\"\\n                                 :customerEditMode=\\\"customerEditMode\\\"\\n                                 @activateCustomerEditMode=\\\"onActivateCustomerEditMode\\\">\\n                    </router-view>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_customer_detail_content_tabs %}{% endblock %}\\n\\n{% block sw_customer_detail_header %}\\n    <template slot=\\\"smart-bar-header\\\">\\n        <h2 v-if=\\\"customerName\\\">{{ customerName }}</h2>\\n        <h2 v-else>{{ $tc('sw-customer.detail.headlineNewCustomer') }}</h2>\\n    </template>\\n{% endblock %}\\n\\n{% block sw_customer_detail_content_tabs %}\\n    <sw-tabs class=\\\"sw-customer-detail-page__tabs\\\">\\n        <sw-tabs-item :route=\\\"{ name: 'sw.customer.create', params: { id: $route.params.id } }\\\"\\n                      :title=\\\"$tc('sw-customer.detail.tabGeneral')\\\">\\n            {{ $tc('sw-customer.detail.tabGeneral') }}\\n        </sw-tabs-item>\\n    </sw-tabs>\\n{% endblock %}\";","module.exports = \"{% block sw_customer_detail_base %}\\n    <div class=\\\"sw-customer-detail-base\\\">\\n        {% block sw_customer_detail_base_transition %}\\n            <transition-group name=\\\"sw-customer-fade\\\" mode=\\\"out-in\\\">\\n                {% block sw_customer_detail_base_form_card %}\\n                    <sw-card :title=\\\"$tc('sw-customer.detailBase.labelAccountCard')\\\"\\n                             v-if=\\\"editMode\\\"\\n                             :isLoading=\\\"customer.isLoading\\\"\\n                             key=\\\"edit\\\">\\n                        {% block sw_customer_detail_base_form %}\\n                            <sw-customer-base-form :customer=\\\"customer\\\"\\n                                                   :salesChannels=\\\"salesChannels\\\"\\n                                                   :customerGroups=\\\"customerGroups\\\"\\n                                                   :paymentMethods=\\\"paymentMethods\\\">\\n                            </sw-customer-base-form>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n\\n                {% block sw_customer_detail_base_info_holder %}\\n                    <div v-if=\\\"!editMode\\\" key=\\\"info\\\" class=\\\"sw-customer-detail-base__info-holder\\\">\\n\\n                        {% block sw_customer_detail_base_info_card %}\\n                            <sw-user-card :title=\\\"$tc('sw-customer.detailBase.labelAccountCard')\\\"\\n                                          :user=\\\"customer\\\"\\n                                          :isLoading=\\\"customer.isLoading\\\">\\n\\n                                {% block sw_customer_detail_base_info_card_actions %}\\n                                    <template slot=\\\"actions\\\">\\n                                        {% block sw_customer_detail_base_info_action_edit %}\\n                                            <sw-button size=\\\"small\\\" @click=\\\"onActivateCustomerEditMode\\\">\\n                                                <sw-icon name=\\\"small-pencil\\\" small></sw-icon>\\n                                                {{ $tc('sw-customer.detailBase.buttonEdit') }}\\n                                            </sw-button>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_detail_base_info_action_change_password %}\\n                                            <sw-button size=\\\"small\\\" disabled>\\n                                                <sw-icon name=\\\"default-lock-key\\\" small></sw-icon>\\n                                                {{ $tc('sw-customer.detailBase.buttonChangePassword') }}\\n                                            </sw-button>\\n                                        {% endblock %}\\n                                    </template>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_base_customer_active_field %}\\n                                    <sw-field slot=\\\"metadata-additional\\\"\\n                                              class=\\\"sw-customer-detail-base__active-field\\\"\\n                                              type=\\\"checkbox\\\"\\n                                              :label=\\\"$tc('sw-customer.detailBase.labelAccountActiveField')\\\"\\n                                              v-model=\\\"customer.active\\\">\\n                                    </sw-field>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_base_info_metadata %}\\n                                    <sw-customer-base-info @activateCustomerEditMode=\\\"onActivateCustomerEditMode\\\"\\n                                                           :customerName=\\\"customerName\\\"\\n                                                           :customer=\\\"customer\\\">\\n                                    </sw-customer-base-info>\\n                                {% endblock %}\\n\\n                            </sw-user-card>\\n                        {% endblock %}\\n\\n                        {% block sw_customer_detail_base_default_addresses_card %}\\n                            <sw-card :title=\\\"$tc('sw-customer.detailBase.labelAddressesCard')\\\"\\n                                     v-if=\\\"customer.defaultShippingAddress || customer.defaultBillingAddress\\\"\\n                                     class=\\\"sw-customer-detail-base__default-addresses\\\"\\n                                     :isLoading=\\\"customer.isLoading\\\">\\n                                {% block sw_customer_detail_base_default_addresses %}\\n                                    <sw-customer-default-addresses :customer=\\\"customer\\\" slot=\\\"grid\\\"></sw-customer-default-addresses>\\n                                {% endblock %}\\n                            </sw-card>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </transition-group>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_customer_detail_addresses %}\\n    <div class=\\\"sw-customer-detail-addresses\\\">\\n\\n        {% block sw_customer_detail_addresses %}\\n            <sw-card :isLoading=\\\"customer.isLoading\\\" large=\\\"true\\\">\\n\\n                {% block sw_customer_detail_addresses_add_button %}\\n                    <div class=\\\"sw-customer-detail-addresses__toolbar\\\">\\n                        {% block sw_customer_detail_addresses_add_button %}\\n                            <sw-button @click=\\\"onCreateNewAddress\\\">\\n                                <sw-icon name=\\\"small-default-plus-circle\\\" small></sw-icon>\\n                                {{ $tc('sw-customer.detailAddresses.buttonAddAddress') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_customer_detail_addresses_add_modal %}\\n                    <sw-modal v-if=\\\"currentAddress\\\"\\n                              @closeModal=\\\"onCloseAddressModal\\\"\\n                              :title=\\\"$tc('sw-customer.detailAddresses.modalTitleAddress')\\\">\\n\\n                        {% block sw_customer_detail_addresses_add_modal_address_form %}\\n                            <sw-customer-address-form :address=\\\"currentAddress\\\"\\n                                                      :countries=\\\"countries\\\">\\n                            </sw-customer-address-form>\\n                        {% endblock %}\\n\\n                        {% block sw_customer_detail_addresses_add_modal_footer %}\\n                            <template slot=\\\"modal-footer\\\">\\n                                {% block sw_customer_detail_addresses_add_modal_cancel %}\\n                                    <sw-button size=\\\"small\\\" @click=\\\"onCloseAddressModal\\\">\\n                                        {{ $tc('sw-customer.detailAddresses.buttonCancel') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_add_modal_apply %}\\n                                    <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onSaveAddress\\\">\\n                                        {{ $tc('sw-customer.detailAddresses.buttonApply') }}\\n                                    </sw-button>\\n                                {% endblock %}\\n                            </template>\\n                        {% endblock %}\\n                    </sw-modal>\\n                {% endblock %}\\n\\n                {% block sw_customer_detail_addresses_grid %}\\n                    <sw-grid :items=\\\"customer.addresses\\\" :selectable=\\\"false\\\">\\n                        {% block sw_customer_detail_addresses_grid_slots %}\\n                            <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_default_shipping_address %}\\n                                    <sw-grid-column flex=\\\"minmax(65px, 65px)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnDefaultShippingAddress')\\\"\\n                                                    iconLabel=\\\"default-shopping-cart\\\"\\n                                                    dataIndex=\\\"defaultShippingAddress\\\"\\n                                                    align=\\\"center\\\">\\n                                        {% block sw_customer_detail_addresses_grid_columns_default_shipping_address_radio %}\\n                                            <sw-field type=\\\"radio\\\"\\n                                                      v-model=\\\"customer.defaultShippingAddressId\\\"\\n                                                      name=\\\"defaultShippingAddress\\\"\\n                                                      :options=\\\"[{ value: item.id }]\\\">\\n                                            </sw-field>\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_default_billing_address %}\\n                                    <sw-grid-column flex=\\\"minmax(65px, 65px)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnDefaultBillingAddress')\\\"\\n                                                    iconLabel=\\\"default-documentation-file\\\"\\n                                                    dataIndex=\\\"defaultBillingAddress\\\"\\n                                                    align=\\\"center\\\">\\n                                        {% block sw_customer_detail_addresses_grid_columns_default_billing_address_radio %}\\n                                            <sw-field type=\\\"radio\\\"\\n                                                      v-model=\\\"customer.defaultBillingAddressId\\\"\\n                                                      name=\\\"defaultBillingAddress\\\"\\n                                                      :options=\\\"[{ value: item.id }]\\\">\\n                                            </sw-field>\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_company %}\\n                                    <sw-grid-column flex=\\\"minmax(120px, 1fr)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnCompany')\\\"\\n                                                    dataIndex=\\\"company\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_company_label %}\\n                                            {{ item.company }}\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_first_name %}\\n                                    <sw-grid-column flex=\\\"minmax(120px, 1fr)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnFirstName')\\\"\\n                                                    dataIndex=\\\"firstName\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_first_name_label %}\\n                                            {{ item.firstName }}\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_last_name %}\\n                                    <sw-grid-column flex=\\\"minmax(120px, 1fr)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnLastName')\\\"\\n                                                    dataIndex=\\\"lastName\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_last_name_label %}\\n                                            {{ item.lastName }}\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_street %}\\n                                    <sw-grid-column flex=\\\"minmax(120px, 1fr)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnStreet')\\\"\\n                                                    dataIndex=\\\"street\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_street_label %}\\n                                            {{ item.street }}\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_zipcode %}\\n                                    <sw-grid-column flex=\\\"minmax(80px, 100px)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnZipCode')\\\"\\n                                                    dataIndex=\\\"zipcode\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_zipcode_label %}\\n                                            {{ item.zipcode }}\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_city %}\\n                                    <sw-grid-column flex=\\\"minmax(120px, 1fr)\\\"\\n                                                    :label=\\\"$tc('sw-customer.detailAddresses.columnCity')\\\"\\n                                                    dataIndex=\\\"city\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_city_label %}\\n                                            {{ item.city }}\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_grid_columns_actions %}\\n                                    <sw-grid-column flex=\\\"minmax(100px, 100px)\\\"\\n                                                    dataIndex=\\\"actions\\\"\\n                                                    align=\\\"center\\\"\\n                                                    truncate>\\n                                        {% block sw_customer_detail_addresses_grid_columns_actions_menu %}\\n                                            <sw-context-button>\\n\\n                                                {% block sw_customer_detail_addresses_grid_columns_actions_edit %}\\n                                                    <sw-context-menu-item @click=\\\"onEditAddress(item.id)\\\">\\n                                                        {{ $tc('sw-customer.detailAddresses.contextMenuEdit') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                                {% block sw_customer_detail_addresses_grid_columns_actions_delete %}\\n                                                    <sw-context-menu-item @click=\\\"onDeleteAddress(item.id)\\\"\\n                                                                          variant=\\\"danger\\\"\\n                                                                          :disabled=\\\"isDefaultAddress(item.id)\\\">\\n                                                        {{ $tc('sw-customer.detailAddresses.contextMenuDelete') }}\\n                                                    </sw-context-menu-item>\\n                                                {% endblock %}\\n\\n                                            </sw-context-button>\\n                                        {% endblock %}\\n                                    </sw-grid-column>\\n                                {% endblock %}\\n\\n                                {% block sw_customer_detail_addresses_delete_modal %}\\n                                    <sw-modal v-if=\\\"showDeleteAddressModal === item.id\\\"\\n                                              @closeModal=\\\"onCloseDeleteAddressModal\\\"\\n                                              :title=\\\"$tc('sw-customer.detailAddresses.modalTitleDeleteAddress')\\\"\\n                                              variant=\\\"small\\\">\\n                                        {% block sw_customer_detail_addresses_delete_modal_confirm_delete_text %}\\n                                            <p class=\\\"sw-customer-detail-addresses__confirm-delete-text\\\">\\n                                                {{ $tc('sw-customer.detailAddresses.textDeleteAddressConfirm') }}\\n                                            </p>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_detail_addresses_delete_modal_address_item %}\\n                                            <sw-address :address=\\\"item\\\"></sw-address>\\n                                        {% endblock %}\\n\\n                                        {% block sw_customer_detail_addresses_delete_modal_footer %}\\n                                            <template slot=\\\"modal-footer\\\">\\n                                                {% block sw_customer_detail_addresses_delete_modal_cancel %}\\n                                                    <sw-button @click=\\\"onCloseDeleteAddressModal\\\"\\n                                                               size=\\\"small\\\">\\n                                                        {{ $tc('sw-customer.detailAddresses.buttonCancel') }}\\n                                                    </sw-button>\\n                                                {% endblock %}\\n\\n                                                {% block sw_customer_detail_addresses_delete_modal_confirm %}\\n                                                    <sw-button @click=\\\"onConfirmDeleteAddress(item.id)\\\"\\n                                                               variant=\\\"primary\\\"\\n                                                               size=\\\"small\\\">\\n                                                        {{ $tc('sw-customer.detailAddresses.buttonDelete') }}\\n                                                    </sw-button>\\n                                                {% endblock %}\\n                                            </template>\\n                                        {% endblock %}\\n                                    </sw-modal>\\n                                {% endblock %}\\n\\n                            </template>\\n                        {% endblock %}\\n                    </sw-grid>\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_customer_detail_base_form_card %}\\n    {% parent %}\\n\\n    <sw-card :title=\\\"$tc('sw-customer.detailBase.labelAddressesCard')\\\"\\n             :isLoading=\\\"customer.isLoading\\\"\\n             key=\\\"address\\\">\\n        <sw-customer-address-form :address=\\\"defaultAddress\\\" :countries=\\\"countries\\\"></sw-customer-address-form>\\n    </sw-card>\\n{% endblock %}\";","module.exports = \"{% block sw_customer_base_form %}\\n    <div class=\\\"sw-customer-base-form\\\">\\n        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n            {% block sw_customer_base_form_first_salutation_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelSalutation')\\\"\\n                          v-model=\\\"customer.salutation\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_first_name_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelFirstName')\\\"\\n                          v-model=\\\"customer.firstName\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_last_name_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelLastName')\\\"\\n                          v-model=\\\"customer.lastName\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_email_field %}\\n                <sw-field type=\\\"email\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelEmail')\\\"\\n                          v-model=\\\"customer.email\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_phone_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelPhoneNumber')\\\"\\n                          disabled>\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_company_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelCompany')\\\"\\n                          disabled>\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_customer_group_field %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelCustomerGroup')\\\"\\n                          :placeholder=\\\"$tc('sw-customer.baseForm.placeholderCustomerGroup')\\\"\\n                          v-model=\\\"customer.groupId\\\">\\n                    {% block sw_customer_base_form_customer_group_field_options %}\\n                        <option slot=\\\"options\\\" v-for=\\\"customerGroup in customerGroups\\\" :key=\\\"customerGroup.id\\\" :value=\\\"customerGroup.id\\\">\\n                            {{ customerGroup.name }}\\n                        </option>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_sales_channel_field %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelSalesChannel')\\\"\\n                          :placeholder=\\\"$tc('sw-customer.baseForm.placeholderSalesChannel')\\\"\\n                          v-model=\\\"customer.salesChannelId\\\">\\n                    {% block sw_customer_base_form_sales_channel_field_options %}\\n                        <option slot=\\\"options\\\" v-for=\\\"salesChannel in salesChannels\\\" :key=\\\"salesChannel.id\\\" :value=\\\"salesChannel.id\\\">\\n                            {{ salesChannel.name }}\\n                        </option>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_payment_method_field %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelPaymentMethod')\\\"\\n                          :placeholder=\\\"$tc('sw-customer.baseForm.placeholderPaymentMethod')\\\"\\n                          v-model=\\\"customer.defaultPaymentMethodId\\\">\\n                    {% block sw_customer_base_form_payment_method_field_options %}\\n                        <option slot=\\\"options\\\" v-for=\\\"paymentMethod in paymentMethods\\\" :key=\\\"paymentMethod.id\\\" :value=\\\"paymentMethod.id\\\">\\n                            {{ paymentMethod.name }}\\n                        </option>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_customer_number_field %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelCustomerNumber')\\\"\\n                          v-model=\\\"customer.customerNumber\\\">\\n                </sw-field>\\n            {% endblock %}\\n\\n            {% block sw_customer_base_form_birthday_field %}\\n                <sw-field type=\\\"date\\\"\\n                          :label=\\\"$tc('sw-customer.baseForm.labelBirthday')\\\"\\n                          name=\\\"birthday\\\"\\n                          v-model=\\\"customer.birthday\\\">\\n                    {% block sw_customer_base_form_birthday_field_icon %}\\n                        <sw-icon name=\\\"default-calendar-full\\\" small slot=\\\"suffix\\\"></sw-icon>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n        </sw-container>\\n    </div>\\n{% endblock %}\\n\";","import objectMerge from 'lodash/merge';\nimport type from 'src/core/service/utils/types.utils';\n\n/**\n * @module core/service/utils/object\n */\nexport default {\n    deepCopyObject,\n    hasOwnProperty,\n    getObjectDiff,\n    getArrayChanges,\n    merge: objectMerge\n};\n\n/**\n * Lodash import for object merges.\n */\nexport const merge = objectMerge;\n\n/**\n * Shorthand method for `Object.prototype.hasOwnProperty`\n *\n * @param {Object} scope\n * @param {String} prop\n * @returns {Boolean}\n */\nexport function hasOwnProperty(scope, prop) {\n    return Object.prototype.hasOwnProperty.call(scope, prop);\n}\n\n/**\n * Deep copy an object\n *\n * @param {Object} copyObject\n * @returns {Object}\n */\nexport function deepCopyObject(copyObject = {}) {\n    return JSON.parse(JSON.stringify(copyObject));\n}\n\n/**\n * Get a simple recursive diff of two objects.\n * Does not consider an entity schema or entity related logic.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {*}\n */\nexport function getObjectDiff(a, b) {\n    if (a === b) {\n        return {};\n    }\n\n    if (!type.isObject(a) || !type.isObject(b)) {\n        return b;\n    }\n\n    if (type.isDate(a) || type.isDate(b)) {\n        if (a.valueOf() === b.valueOf()) {\n            return {};\n        }\n\n        return b;\n    }\n\n    return Object.keys(b).reduce((acc, key) => {\n        if (!hasOwnProperty(a, key)) {\n            return { ...acc, [key]: b[key] };\n        }\n\n        if (type.isArray(b[key])) {\n            const changes = getArrayChanges(a[key], b[key]);\n\n            if (Object.keys(changes).length > 0) {\n                return { ...acc, [key]: b[key] };\n            }\n\n            return acc;\n        }\n\n        const changes = getObjectDiff(a[key], b[key]);\n\n        if (Object.keys(changes).length > 0) {\n            return { ...acc, [key]: changes };\n        }\n\n        return acc;\n    }, {});\n}\n\n/**\n * Check if the compared array has changes.\n * Works a little bit different like the object diff because it does not return a real changeset.\n * In case of a change we will always use the complete compare array,\n * because it always holds the newest state regarding deletions, additions and the order.\n *\n * @param {Array} a\n * @param {Array} b\n * @return {*}\n */\nexport function getArrayChanges(a, b) {\n    if (a === b) {\n        return [];\n    }\n\n    if (!type.isArray(a) || !type.isArray(b)) {\n        return b;\n    }\n\n    if (a.length !== b.length) {\n        return b;\n    }\n\n    if (!type.isObject(b[0])) {\n        return b.filter(item => !a.includes(item));\n    }\n\n    const changes = [];\n\n    b.forEach((item, index) => {\n        const objDiff = getObjectDiff(a[index], b[index]);\n\n        if (Object.keys(objDiff).length > 0) {\n            changes.push(b[index]);\n        }\n    });\n\n    return changes;\n}\n","module.exports = \"{% block sw_customer_base_info %}\\n    <sw-container class=\\\"sw-customer-base-info\\\" grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n        {% block sw_customer_base_info_metadata %}\\n            <sw-description-list>\\n                {% block sw_customer_base_metadata_customer_number %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelCustomerNumber') }}</dt>\\n                    <dd>{{ customer.customerNumber }}</dd>\\n                {% endblock %}\\n\\n                {% block sw_customer_base_metadata_customer_group %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelCustomerGroup') }}</dt>\\n                    <dd>{{ customer.group.name }}</dd>\\n                {% endblock %}\\n\\n                {% block sw_customer_base_metadata_birthday %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelBirthday') }}</dt>\\n                    <dd>\\n                        {{ customer.birthday ? customer.birthday : $tc('sw-customer.baseInfo.emptyTextBirthday') }}\\n                    </dd>\\n                {% endblock %}\\n\\n                {% block sw_customer_base_metadata_last_login %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelLastLogin') }}</dt>\\n                    <dd>\\n                        {{ customer.lastLogin ? customer.lastLogin : $tc('sw-customer.baseInfo.emptyTextLogin') }}\\n                    </dd>\\n                {% endblock %}\\n            </sw-description-list>\\n            <sw-description-list>\\n                {% block sw_customer_base_metadata_language %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelLanguage') }}</dt>\\n                    <dd>Deutsch</dd>\\n                {% endblock %}\\n\\n                {% block sw_customer_base_metadata_orders %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelOrders') }}</dt>\\n                    <dd>{{ customer.orderCustomers.length }}</dd>\\n                {% endblock %}\\n\\n                {% block sw_customer_base_metadata_turnover %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelTurnover') }}</dt>\\n                    <dd>0</dd>\\n                {% endblock %}\\n\\n                {% block sw_customer_base_metadata_payment_failures %}\\n                    <dt>{{ $tc('sw-customer.baseInfo.labelPaymentFailures') }}</dt>\\n                    <dd>0</dd>\\n                {% endblock %}\\n            </sw-description-list>\\n        {% endblock %}\\n    </sw-container>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_customer_address_form %}\\n    <div class=\\\"sw-customer-address-form\\\">\\n        {% block sw_customer_address_form_container %}\\n            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                {% block sw_customer_address_form_company_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelCompany')\\\"\\n                              name=\\\"addressCompany\\\"\\n                              v-model=\\\"address.company\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_department_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelDepartment')\\\"\\n                              name=\\\"addressDepartment\\\"\\n                              v-model=\\\"address.department\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_salutation_title_container %}\\n                    <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"10px\\\">\\n                        {% block sw_customer_address_form_salutation_field %}\\n                            <sw-field :label=\\\"$tc('sw-customer.addressForm.labelSalutation')\\\"\\n                                      name=\\\"addressSalutation\\\"\\n                                      validation=\\\"required\\\"\\n                                      v-model=\\\"address.salutation\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_customer_address_form_title_field %}\\n                            <sw-field :label=\\\"$tc('sw-customer.addressForm.labelTitle')\\\"\\n                                      name=\\\"addressTitle\\\"\\n                                      v-model=\\\"address.title\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_first_name_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelFirstName')\\\"\\n                              name=\\\"addressFirstName\\\"\\n                              validation=\\\"required\\\"\\n                              v-model=\\\"address.firstName\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_last_name_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelLastName')\\\"\\n                              name=\\\"addressLastName\\\"\\n                              validation=\\\"required\\\"\\n                              v-model=\\\"address.lastName\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_street_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelStreet')\\\"\\n                              name=\\\"addressStreet\\\"\\n                              validation=\\\"required\\\"\\n                              v-model=\\\"address.street\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_additional_address_line_1_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelAdditionalAddressLine1')\\\"\\n                              name=\\\"addressAdditionalAddressLine1\\\"\\n                              v-model=\\\"address.additionalAddressLine1\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_additional_address_line_2_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelAdditionalAddressLine2')\\\"\\n                              name=\\\"addressAdditionalAddressLine2\\\"\\n                              v-model=\\\"address.additionalAddressLine2\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_zipcode_city_container %}\\n                    <sw-container grid=\\\"90px 1fr\\\" gap=\\\"10px\\\">\\n                        {% block sw_customer_address_form_zipcode_field %}\\n                            <sw-field :label=\\\"$tc('sw-customer.addressForm.labelZipcode')\\\"\\n                                      name=\\\"addressZipcode\\\"\\n                                      validation=\\\"required\\\"\\n                                      v-model=\\\"address.zipcode\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_customer_address_form_city_field %}\\n                            <sw-field :label=\\\"$tc('sw-customer.addressForm.labelCity')\\\"\\n                                      name=\\\"addressCity\\\"\\n                                      validation=\\\"required\\\"\\n                                      v-model=\\\"address.city\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_country_field %}\\n                    <sw-field type=\\\"select\\\"\\n                              :label=\\\"$tc('sw-customer.addressForm.labelCountry')\\\"\\n                              name=\\\"addressCountry\\\"\\n                              validation=\\\"required\\\"\\n                              v-model=\\\"address.countryId\\\">\\n                        {% block sw_customer_address_form_country_field_options %}\\n                            <option slot=\\\"options\\\" v-for=\\\"country in countries\\\" :key=\\\"country.id\\\" :value=\\\"country.id\\\">\\n                                {{ country.name }}\\n                            </option>\\n                        {% endblock %}\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_phone_number_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelPhoneNumber')\\\"\\n                              name=\\\"addressPhoneNumber\\\"\\n                              v-model=\\\"address.phoneNumber\\\">\\n                    </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_customer_address_form_vat_id_field %}\\n                    <sw-field :label=\\\"$tc('sw-customer.addressForm.labelVatId')\\\"\\n                              name=\\\"vatId\\\"\\n                              v-model=\\\"address.vatId\\\">\\n                    </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_customer_default_addresses %}\\n    <sw-container class=\\\"sw-customer-default-addresses\\\" grid=\\\"50% 50%\\\">\\n\\n        {% block sw_customer_default_addresses_shipping %}\\n            <sw-card-section v-if=\\\"customer.defaultShippingAddress.id\\\" divider=\\\"right\\\">\\n                {% block sw_customer_default_addresses_shipping_postal %}\\n                    <sw-address :address=\\\"customer.defaultShippingAddress\\\"\\n                                :headline=\\\"$tc('sw-customer.detailBase.titleDefaultShippingAddress')\\\">\\n                    </sw-address>\\n                {% endblock %}\\n            </sw-card-section>\\n        {% endblock %}\\n\\n        {% block sw_customer_default_addresses_billing %}\\n            <sw-card-section v-if=\\\"customer.defaultBillingAddress.id\\\">\\n                {% block sw_customer_default_addresses_billing_postal %}\\n                    <sw-address :address=\\\"customer.defaultBillingAddress\\\"\\n                                :headline=\\\"$tc('sw-customer.detailBase.titleDefaultBillingAddress')\\\">\\n                    </sw-address>\\n                {% endblock %}\\n            </sw-card-section>\\n        {% endblock %}\\n\\n    </sw-container>\\n{% endblock %}\";","module.exports = \"{% block sw_manufacturer_list %}\\n    <sw-page class=\\\"sw-manufacturer-list\\\">\\n\\n        {% block sw_manufacturer_list_smart_bar_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                {% block sw_manufacturer_list_smart_bar_header_title %}\\n                    <h2>\\n                        {% block sw_manufacturer_list_smart_bar_header_title_text %}\\n                            {{ $tc('sw-manufacturer.list.textManufacturerOverview') }}\\n                        {% endblock %}\\n\\n                        {% block sw_manufacturer_list_smart_bar_header_amount %}\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                ({{ total }})\\n                            </span>\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_manufacturer_list_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_manufacturer_list_smart_bar_actions %}\\n                    <sw-button :routerLink=\\\"{ name: 'sw.manufacturer.create' }\\\" variant=\\\"primary\\\">\\n                        {{ $tc('sw-manufacturer.list.buttonAddManufacturer') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        <template slot=\\\"content\\\">\\n            {% block sw_manufacturer_list_content %}\\n                <div class=\\\"sw-manufacturer-list__content\\\">\\n                    {% block sw_manufacturer_list_grid %}\\n                        <sw-grid :items=\\\"manufacturers\\\"\\n                                 :sortBy=\\\"sortBy\\\"\\n                                 :sortDirection=\\\"sortDirection\\\"\\n                                 :sidebar=\\\"true\\\"\\n                                 :selectable=\\\"false\\\"\\n                                 :isFullpage=\\\"true\\\"\\n                                 @sort-column=\\\"onSortColumn\\\"\\n                                 @inline-edit-finish=\\\"onInlineEditSave\\\">\\n\\n                            {% block sw_manufacturer_list_grid_slots %}\\n                                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                    {% block sw_manufacturer_list_grid_columns %}\\n\\n                                        {% block sw_manufacturer_list_grid_columns_name %}\\n                                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-manufacturer.list.columnName')\\\"\\n                                                            dataIndex=\\\"name\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            editable>\\n                                                <router-link :to=\\\"{ name: 'sw.manufacturer.detail', params: { id: item.id } }\\\">\\n                                                    {{ item.name }}\\n                                                </router-link>\\n\\n                                                {% block sw_manufacturer_list_grid_columns_name_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.name\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_manufacturer_list_grid_columns_link %}\\n                                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-manufacturer.list.columnLink')\\\"\\n                                                            dataIndex=\\\"link\\\"\\n                                                            sortable\\n                                                            truncate\\n                                                            editable>\\n                                                {{ item.link }}\\n\\n                                                {% block sw_manufacturer_list_grid_columns_link_editor %}\\n                                                    <sw-field type=\\\"text\\\" v-model=\\\"item.link\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_manufacturer_list_grid_columns_description %}\\n                                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-manufacturer.list.columnDescription')\\\"\\n                                                            dataIndex=\\\"description\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {{ item.description | striphtml | truncate }}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_product_list_grid_columns_actions %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 100px)\\\" align=\\\"center\\\">\\n                                                <sw-context-button>\\n\\n                                                    {% block sw_product_list_grid_columns_actions_edit %}\\n                                                        <sw-context-menu-item :routerLink=\\\"{\\n                                                                name: 'sw.manufacturer.detail',\\n                                                                params: { id: item.id } }\\\">\\n                                                            {{ $tc('sw-manufacturer.list.contextMenuEdit') }}\\n                                                        </sw-context-menu-item>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_product_list_grid_columns_actions_duplicate %}\\n                                                        <sw-context-menu-item :disabled=\\\"true\\\">\\n                                                            {{ $tc('sw-manufacturer.list.contextMenuDuplicate') }}\\n                                                        </sw-context-menu-item>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_product_list_grid_columns_actions_delete %}\\n                                                        <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDeleteManufacturer(item.id)\\\">\\n                                                            {{ $tc('sw-manufacturer.list.contextMenuDelete') }}\\n                                                        </sw-context-menu-item>\\n                                                    {% endblock %}\\n                                            </sw-context-button>\\n                                        </sw-grid-column>\\n                                    {% endblock %}\\n\\n                                    {% block sw_manufacturer_list_delete_modal %}\\n                                        <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                  @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                  :title=\\\"$tc('sw-manufacturer.list.modalTitleDelete')\\\"\\n                                                  variant=\\\"small\\\">\\n                                            {% block sw_manufacturer_list_delete_modal_confirm_delete_text %}\\n                                                <p class=\\\"sw-customer-detail-addresses__confirm-delete-text\\\">\\n                                                    {{ $tc('sw-manufacturer.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                </p>\\n                                            {% endblock %}\\n\\n                                            {% block sw_manufacturer_list_delete_modal_footer %}\\n                                                <template slot=\\\"modal-footer\\\">\\n                                                    {% block sw_manufacturer_list_delete_modal_cancel %}\\n                                                        <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                   size=\\\"small\\\">\\n                                                            {{ $tc('sw-manufacturer.list.buttonCancel') }}\\n                                                        </sw-button>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_manufacturer_list_delete_modal_confirm %}\\n                                                        <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                   variant=\\\"primary\\\"\\n                                                                   size=\\\"small\\\">\\n                                                            {{ $tc('sw-manufacturer.list.buttonDelete') }}\\n                                                        </sw-button>\\n                                                    {% endblock %}\\n                                                </template>\\n                                            {% endblock %}\\n                                        </sw-modal>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </template>\\n                            {% endblock %}\\n\\n                            <template slot=\\\"pagination\\\">\\n                                {% block sw_manufacturer_list_grid_pagination %}\\n                                    <sw-pagination :page=\\\"page\\\"\\n                                                   :limit=\\\"limit\\\"\\n                                                   :total=\\\"total\\\"\\n                                                   :total-visible=\\\"7\\\"\\n                                                   @page-change=\\\"onPageChange\\\">\\n                                    </sw-pagination>\\n                                {% endblock %}\\n                            </template>\\n\\n                            {% block sw_manufacturer_list_grid_sidebar %}\\n                                <sw-sidebar slot=\\\"sidebar\\\">\\n                                    {% block sw_manufacturer_list_grid_sidebar_refresh %}\\n                                        <sw-sidebar-item icon=\\\"default-arrow-360-left\\\" @click=\\\"onRefresh\\\"></sw-sidebar-item>\\n                                    {% endblock %}\\n                                </sw-sidebar>\\n                            {% endblock %}\\n                        </sw-grid>\\n                    {% endblock %}\\n\\n                    {% block sw_manufacturer_list_grid_loader %}\\n                        <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </template>\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_manufacturer_detail %}\\n    <sw-page class=\\\"sw-manufacturer-detail\\\">\\n\\n        {% block sw_manufacturer_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"manufacturer.name\\\">{{ manufacturer.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-manufacturer.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_manufacturer_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_manufacturer_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"manufacturer.isLoading\\\" :routerLink=\\\"{ name: 'sw.manufacturer.index' }\\\">\\n                        {{ $tc('sw-manufacturer.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_manufacturer_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"manufacturer.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-manufacturer.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_manufacturer_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n                {% block sw_manufacturer_detail_base_basic_info_card %}\\n                    <sw-card :title=\\\"$tc('sw-manufacturer.detail.cardTitleManufacturerInfo')\\\" :isLoading=\\\"manufacturer.isLoading\\\">\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0 30px\\\">\\n                            {% block sw_manufacturer_detail_base_info_field_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-manufacturer.detail.labelName')\\\"\\n                                          :placeholder=\\\"$tc('sw-manufacturer.detail.placeholderName')\\\"\\n                                          name=\\\"name\\\"\\n                                          validation=\\\"required\\\"\\n                                          v-model=\\\"manufacturer.name\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_manufacturer_detail_base_info_field_media_selection %}\\n                                <div class=\\\"sw-manufacturer-detail__media-upload-selection\\\">\\n                                    {{ $tc('sw-manufacturer.detail.textMediaSelection') }}\\n\\n                                    <sw-button class=\\\"sw-manufacturer-detail__media-upload-selection-button\\\" :disabled=\\\"true\\\">\\n                                        <sw-icon name=\\\"default-action-trash\\\" class=\\\"sw-manufacturer-detail__media-upload-selection-icon\\\"></sw-icon>\\n                                    </sw-button>\\n                                </div>\\n                            {% endblock %}\\n                        </sw-container>\\n\\n                        {% block sw_manufacturer_detail_base_info_field_description %}\\n                            <sw-text-editor\\n                                      :label=\\\"$tc('sw-manufacturer.detail.labelDescription')\\\"\\n                                      :placeholder=\\\"$tc('sw-manufacturer.detail.placeholderDescription')\\\"\\n                                      name=\\\"description\\\"\\n                                      v-model=\\\"manufacturer.description\\\">\\n                            </sw-text-editor>\\n                        {% endblock %}\\n\\n                        {% block sw_manufacturer_detail_base_info_field_link %}\\n                            <sw-field type=\\\"url\\\"\\n                                      :label=\\\"$tc('sw-manufacturer.detail.labelLink')\\\"\\n                                      :placeholder=\\\"$tc('sw-manufacturer.detail.placeholderLink')\\\"\\n                                      name=\\\"link\\\"\\n                                      v-model=\\\"manufacturer.link\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_order_list %}\\n    <sw-page class=\\\"sw-order-list\\\">\\n\\n        {% block sw_order_list_search_bar_type %}\\n            <template slot=\\\"search-bar-type\\\">\\n                {{ $tc('sw-order.general.mainMenuItemGeneral') }}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_order_list_smart_bar_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                {% block sw_order_list_smart_bar_header_title %}\\n                    <h2>\\n                        {% block sw_order_list_smart_bar_header_title_text %}\\n                            {{ $tc('sw-order.list.textOrders') }}\\n                        {% endblock %}\\n\\n                        {% block sw_order_list_smart_bar_header_amount %}\\n                            <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                ({{ total }})\\n                            </span>\\n                        {% endblock %}\\n                    </h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_order_list_smart_bar_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_order_list_smart_bar_actions_slot %}\\n\\n                    {% block sw_order_list_smart_bar_actions_add %}\\n                        <sw-button variant=\\\"primary\\\" disabled>\\n                            {{ $tc('sw-order.list.buttonAddOrder') }}\\n                        </sw-button>\\n                    {% endblock %}\\n\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_order_list_content %}\\n            <template slot=\\\"content\\\">\\n\\n                {% block sw_order_list_content_slot %}\\n                    <div class=\\\"sw-order-list__content\\\">\\n\\n                        {% block sw_order_list_grid %}\\n                            <sw-grid v-if=\\\"total || term\\\"\\n                                     :items=\\\"orders\\\"\\n                                     :sortBy=\\\"sortBy\\\"\\n                                     :sortDirection=\\\"sortDirection\\\"\\n                                     :sidebar=\\\"true\\\"\\n                                     :selectable=\\\"false\\\"\\n                                     :isFullpage=\\\"true\\\"\\n                                     @sort-column=\\\"onSortColumn\\\"\\n                                     @inline-edit-finish=\\\"onInlineEditSave\\\">\\n\\n                                {% block sw_order_list_grid_slots %}\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n\\n                                        {% block sw_order_list_grid_columns_customer_name %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-order.list.columnCustomerName')\\\"\\n                                                            dataIndex=\\\"customer.firstName,customer.lastName\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_order_list_grid_columns_customer_name_label %}\\n                                                    {{ item.orderCustomer.firstName }} {{ item.orderCustomer.lastName }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_list_grid_columns_billing_address %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 1fr)\\\"\\n                                                            :label=\\\"$tc('sw-order.list.columnBillingAddress')\\\"\\n                                                            dataIndex=\\\"billingAddress.street\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_order_list_grid_columns_billing_address_label %}\\n                                                    {{ item.billingAddress.street }},\\n                                                    {{ item.billingAddress.zipcode }}\\n                                                    {{ item.billingAddress.city }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_list_grid_columns_amount %}\\n                                            <sw-grid-column flex=\\\"minmax(80px, 180px)\\\"\\n                                                            :label=\\\"$tc('sw-order.list.columnAmount')\\\"\\n                                                            dataIndex=\\\"amountTotal\\\"\\n                                                            align=\\\"right\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_order_list_grid_columns_amount_label %}\\n                                                    {{ item.amountTotal | currency(item.currency.shortName) }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_list_grid_columns_state %}\\n                                            <sw-grid-column flex=\\\"minmax(80px, 180px)\\\"\\n                                                            :label=\\\"$tc('sw-order.list.columnState')\\\"\\n                                                            dataIndex=\\\"state.description\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_order_list_grid_columns_state_label %}\\n                                                    {{ item.state.description }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_list_grid_columns_order_date %}\\n                                            <sw-grid-column flex=\\\"minmax(90px, 180px)\\\"\\n                                                            :label=\\\"$tc('sw-order.list.orderDate')\\\"\\n                                                            dataIndex=\\\"date\\\"\\n                                                            truncate\\n                                                            sortable>\\n                                                {% block sw_order_list_grid_columns_order_date_label %}\\n                                                    {{ item.date | date }}\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_list_grid_columns_actions %}\\n                                            <sw-grid-column flex=\\\"minmax(100px, 100px)\\\"\\n                                                            align=\\\"center\\\">\\n                                                {% block sw_order_list_grid_columns_actions_context_button %}\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_view %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.order.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-order.list.contextMenuView') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_confirm_payment %}\\n                                                            <sw-context-menu-item disabled>\\n                                                                {{ $tc('sw-order.list.contextMenuConfirmPayment') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_customer_list_grid_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" disabled>\\n                                                                {{ $tc('sw-order.list.contextMenuDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                    </sw-context-button>\\n                                                {% endblock %}\\n                                            </sw-grid-column>\\n                                        {% endblock %}\\n\\n                                    </template>\\n                                {% endblock %}\\n\\n                                <template slot=\\\"pagination\\\">\\n                                    {% block sw_order_list_grid_pagination %}\\n                                        <sw-pagination :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </template>\\n\\n                                {% block sw_order_list_grid_sidebar %}\\n                                    <sw-sidebar slot=\\\"sidebar\\\">\\n                                        {% block sw_order_list_grid_sidebar_refresh %}\\n                                            <sw-sidebar-item icon=\\\"default-arrow-360-left\\\" @click=\\\"onRefresh\\\"></sw-sidebar-item>\\n                                        {% endblock %}\\n                                    </sw-sidebar>\\n                                {% endblock %}\\n\\n                            </sw-grid>\\n                        {% endblock %}\\n\\n                        {% block sw_order_list_empty_state %}\\n                            <sw-empty-state v-else-if=\\\"!isLoading && !total\\\" :title=\\\"$tc('sw-order.list.messageEmpty')\\\"></sw-empty-state>\\n                        {% endblock %}\\n\\n                        {% block sw_order_list_grid_loader %}\\n                            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n    </sw-page>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_order_detail %}\\n    <sw-page class=\\\"sw-order-detail\\\">\\n\\n        {% block sw_order_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                {% block sw_order_detail_header_title %}\\n                    <h2 v-if=\\\"order.id\\\">{{ $tc('sw-order.detail.textHeadline') }} {{ order.id }}</h2>\\n                {% endblock %}\\n\\n                {% block sw_order_detail_header_title_new %}\\n                    <h2 v-else>{{ $tc('sw-order.detail.textHeadlineNew') }}</h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_order_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_order_detail_actions_abort %}\\n                    <sw-button :routerLink=\\\"{ name: 'sw.order.index' }\\\" :disabled=\\\"order.isLoading\\\">\\n                        {{ $tc('sw-order.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_order_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"order.isLoading\\\">\\n                        {{ $tc('sw-order.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_order_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_order_detail_content_tabs %}\\n                    <sw-tabs class=\\\"sw-order-detail-page__tabs\\\">\\n                        {% block sw_order_detail_content_tabs_tab_base %}\\n                            <sw-tabs-item :route=\\\"{ name: 'sw.order.detail.base', params: { id: $route.params.id } }\\\"\\n                                          :title=\\\"$tc('sw-order.detail.tabOrderDetails')\\\">\\n                                {{ $tc('sw-order.detail.tabOrderDetails') }}\\n                            </sw-tabs-item>\\n                        {% endblock %}\\n\\n                        {% block sw_order_detail_content_tabs_tab_deliveries %}\\n                            <sw-tabs-item :route=\\\"{ name: 'sw.order.detail.deliveries', params: { id: $route.params.id } }\\\"\\n                                          :title=\\\"$tc('sw-order.detail.tabDeliveries')\\\">\\n                                {{ $tc('sw-order.detail.tabDeliveries') }}\\n                            </sw-tabs-item>\\n                        {% endblock %}\\n                    </sw-tabs>\\n                {% endblock %}\\n\\n                {% block sw_order_detail_content_view %}\\n                    <router-view :order=\\\"order\\\"></router-view>\\n                {% endblock %}\\n\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_order_detail_base %}\\n    <div class=\\\"sw-order-detail-base\\\">\\n\\n        {% block sw_order_detail_base_info_card %}\\n            <sw-user-card :title=\\\"$tc('sw-order.detailBase.cardTitleDetails')\\\"\\n                          :user=\\\"order.orderCustomer\\\"\\n                          :isLoading=\\\"order.isLoading\\\">\\n\\n                {% block sw_order_detail_base_info_card_actions %}\\n                    <template slot=\\\"actions\\\">\\n                        {% block sw_order_detail_base_info_card_action_print %}\\n                            <sw-button size=\\\"small\\\" disabled>\\n                                <sw-icon name=\\\"default-device-printer\\\" small></sw-icon>\\n                                {{ $tc('sw-order.detailBase.buttonPrint') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_order_detail_base_info_card_action_archive %}\\n                            <sw-button size=\\\"small\\\" disabled>\\n                                <sw-icon name=\\\"small-documentation-map-closed\\\" small></sw-icon>\\n                                {{ $tc('sw-order.detailBase.buttonArchive') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_order_detail_base_info_card_action_cancel %}\\n                            <sw-button size=\\\"small\\\" disabled>\\n                                <sw-icon name=\\\"small-default-x-line-medium\\\" small></sw-icon>\\n                                {{ $tc('sw-order.detailBase.buttonCancel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    </template>\\n                {% endblock %}\\n\\n                {% block sw_order_detail_base_info_card_order_overview %}\\n                    <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"30px 30px\\\">\\n                        {% block sw_order_detail_base_info_card_order_metadata %}\\n                            <sw-description-list>\\n                                <dt>{{ $tc('sw-order.detailBase.labelOrderStatus') }}</dt>\\n                                <dd>{{ order.state.description }}</dd>\\n                                <dt>{{ $tc('sw-order.detailBase.summaryLabelAmountTotal') }}</dt>\\n                                <dd>{{ order.amountTotal | currency(order.currency.shortName) }}</dd>\\n                                <dt>{{ $tc('sw-order.detailBase.labelOrderDate') }}</dt>\\n                                <dd>{{ order.date | date }}</dd>\\n                                <dt>{{ $tc('sw-order.detailBase.labelSalesChannel') }}</dt>\\n                                <dd>{{ order.salesChannel.name }}</dd>\\n                            </sw-description-list>\\n                        {% endblock %}\\n\\n                        {% block sw_order_detail_base_info_card_billing_address %}\\n                            <sw-address :headline=\\\"$tc('sw-order.detailBase.headlineBillingAddress')\\\"\\n                                        :address=\\\"order.billingAddress\\\">\\n                            </sw-address>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n\\n            </sw-user-card>\\n        {% endblock %}\\n\\n        {% block sw_order_detail_base_line_items_card %}\\n            <sw-card :title=\\\"$tc('sw-order.detailBase.cardTitleLineItems')\\\"\\n                     :isLoading=\\\"order.isLoading\\\">\\n\\n                {% block sw_order_detail_base_line_items_card_rows %}\\n                    <sw-container slot=\\\"grid\\\" type=\\\"row\\\">\\n                        {% block sw_order_detail_base_line_items_grid %}\\n                            <sw-order-line-items-grid :orderLineItems=\\\"order.lineItems\\\" :order=\\\"order\\\"></sw-order-line-items-grid>\\n                        {% endblock %}\\n\\n                        {% block sw_order_detail_base_line_items_row_summary %}\\n                            <sw-card-section divider=\\\"top\\\" secondary slim>\\n                                <sw-container grid=\\\"1fr 440px\\\"\\n                                              class=\\\"sw-order-detail-base__summary\\\">\\n                                    {% block sw_order_detail_base_line_items_summary %}\\n                                        <sw-description-list columns=\\\"265px 1fr\\\"\\n                                                             class=\\\"sw-order-detail-base__summary-data\\\">\\n                                            <dt>{{ $tc('sw-order.detailBase.summaryLabelAmount') }}</dt>\\n                                            <dd>{{ order.positionPrice | currency(order.currency.shortName) }}</dd>\\n                                            <dt>{{ $tc('sw-order.detailBase.summaryLabelShippingCosts') }}</dt>\\n                                            <dd>{{ order.shippingTotal | currency(order.currency.shortName) }}</dd>\\n                                            <dt><strong>{{ $tc('sw-order.detailBase.summaryLabelAmountTotal') }}</strong></dt>\\n                                            <dd><strong>{{ order.amountTotal | currency(order.currency.shortName) }}</strong></dd>\\n                                        </sw-description-list>\\n                                    {% endblock %}\\n                                </sw-container>\\n                            </sw-card-section>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_order_detail_deliveries %}\\n    <div class=\\\"sw-order-detail-deliveries\\\">\\n\\n        {% block sw_order_detail_delivery_items %}\\n            <sw-order-delivery v-for=\\\"(delivery, index) in order.deliveries\\\"\\n                               class=\\\"sw-order-detail-deliveries__delivery\\\"\\n                               :title=\\\"$tc('sw-order.detailDeliveries.cardTitleItems', 0, { count: index + 1 })\\\"\\n                               :delivery=\\\"delivery\\\"\\n                               :key=\\\"delivery.id\\\"\\n                               :order=\\\"order\\\">\\n            </sw-order-delivery>\\n        {% endblock %}\\n\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_order_line_items_grid %}\\n    <sw-grid class=\\\"sw-order-line-items-grid\\\"\\n             :selectable=\\\"false\\\"\\n             :items=\\\"orderLineItems\\\"\\n             table>\\n\\n        {% block sw_order_line_items_grid_columns %}\\n            <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n\\n                {% block sw_order_line_items_grid_columns_name %}\\n                    <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnProductName')\\\">\\n                        {% block sw_order_line_items_grid_columns_name_link %}\\n                            <router-link :title=\\\"$tc('sw-order.detailBase.contextMenuShowProduct')\\\"\\n                                         :to=\\\"{ name: 'sw.product.detail', params: { id: item.identifier } }\\\">\\n                                {% block sw_order_line_items_grid_columns_name_label %}\\n                                    {{ item.label }}\\n                                {% endblock %}\\n                            </router-link>\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_line_items_grid_columns_unit_price %}\\n                    <sw-grid-column flex=\\\"minmax(110px, 130px)\\\"\\n                                    align=\\\"right\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnPrice')\\\">\\n                        {% block sw_order_line_items_grid_columns_unit_price_label %}\\n                            {{ item.unitPrice | currency(order.currency.shortName) }}\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_line_items_grid_columns_quantity %}\\n                    <sw-grid-column flex=\\\"minmax(110px, 110px)\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnQuantity')\\\"\\n                                    align=\\\"right\\\">\\n                        {% block sw_order_line_items_grid_columns_quantity_label %}\\n                            {{ item.quantity }}\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_line_items_grid_columns_total_price %}\\n                    <sw-grid-column flex=\\\"minmax(110px, 130px)\\\"\\n                                    align=\\\"right\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnTotalPrice')\\\">\\n                        {% block sw_order_line_items_grid_columns_total_price_label %}\\n                            {{ item.totalPrice | currency(order.currency.shortName) }}\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_line_items_grid_columns_actions %}\\n                    <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                    align=\\\"center\\\"\\n                                    label=\\\"\\\"\\n                                    iconLabel=\\\"small-search\\\">\\n                        {% block sw_order_line_items_grid_columns_actions_button %}\\n                            <sw-context-button>\\n\\n                                {% block sw_order_line_items_grid_columns_actions_show %}\\n                                    <sw-context-menu-item icon=\\\"default-eye-open\\\" :routerLink=\\\"{ name: 'sw.product.detail', params: { id: item.identifier } }\\\">\\n                                        {% block sw_order_line_items_grid_columns_actions_show_label %}\\n                                            {{ $tc('sw-order.detailBase.contextMenuShowProduct') }}\\n                                        {% endblock %}\\n                                    </sw-context-menu-item>\\n                                {% endblock %}\\n\\n                            </sw-context-button>\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-grid>\\n{% endblock %}\";","module.exports = \"{% block sw_order_delivery_line_items_grid %}\\n    <sw-grid class=\\\"sw-order-delivery-line-items-grid\\\" :items=\\\"deliveryLineItems\\\" table>\\n\\n        {% block sw_order_delivery_line_items_grid_columns %}\\n            <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n\\n                {% block sw_order_delivery_line_items_grid_columns_name %}\\n                    <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnProductName')\\\">\\n                        {% block sw_order_delivery_line_items_grid_columns_name_link %}\\n                            <router-link :title=\\\"$tc('sw-order.detailBase.contextMenuShowProduct')\\\"\\n                                         :to=\\\"{ name: 'sw.product.detail', params: { id: item.identifier } }\\\">\\n                                {% block sw_order_delivery_line_items_grid_columns_name_label %}\\n                                    {{ item.orderLineItem.label }}\\n                                {% endblock %}\\n                            </router-link>\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_delivery_line_items_grid_columns_unit_price %}\\n                    <sw-grid-column flex=\\\"minmax(110px, 130px)\\\"\\n                                    align=\\\"right\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnPrice')\\\">\\n                        {% block sw_order_delivery_line_items_grid_columns_unit_price_label %}\\n                            {{ item.unitPrice }} {{ order.currency.symbol }}\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_delivery_line_items_grid_columns_quantity %}\\n                    <sw-grid-column flex=\\\"minmax(110px, 110px)\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnQuantity')\\\"\\n                                    align=\\\"right\\\">\\n                        {% block sw_order_delivery_line_items_grid_columns_quantity_label %}\\n                            {{ item.quantity }}\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_delivery_line_items_grid_columns_total_price %}\\n                    <sw-grid-column flex=\\\"minmax(110px, 130px)\\\"\\n                                    align=\\\"right\\\"\\n                                    :label=\\\"$tc('sw-order.detailBase.columnTotalPrice')\\\">\\n                        {% block sw_order_delivery_line_items_grid_columns_total_price_label %}\\n                            {{ item.totalPrice }} {{ order.currency.symbol }}\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n\\n                {% block sw_order_delivery_line_items_grid_columns_actions %}\\n                    <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                    align=\\\"center\\\"\\n                                    label=\\\"\\\"\\n                                    iconLabel=\\\"small-search\\\">\\n                        {% block sw_order_delivery_line_items_grid_columns_actions_button %}\\n                            <sw-context-button>\\n\\n                                {% block sw_order_delivery_line_items_grid_columns_actions_show %}\\n                                    <sw-context-menu-item icon=\\\"default-eye-open\\\" :routerLink=\\\"{ name: 'sw.product.detail', params: { id: item.identifier } }\\\">\\n                                        {% block sw_order_delivery_line_items_grid_columns_actions_show_label %}\\n                                            {{ $tc('sw-order.detailBase.contextMenuShowProduct') }}\\n                                        {% endblock %}\\n                                    </sw-context-menu-item>\\n                                {% endblock %}\\n\\n                            </sw-context-button>\\n                        {% endblock %}\\n                    </sw-grid-column>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-grid>\\n{% endblock %}\";","module.exports = \"{% block sw_order_delivery %}\\n    <sw-card class=\\\"sw-order-delivery\\\" :title=\\\"title\\\" :isLoading=\\\"isLoading\\\">\\n\\n        {% block sw_order_delivery_rows %}\\n            <sw-container type=\\\"row\\\" slot=\\\"grid\\\">\\n\\n                {% block sw_order_delivery_actions %}\\n                    <sw-card-section divider=\\\"bottom\\\" class=\\\"sw-order-detail-deliveries__delivery-actions\\\">\\n\\n                        {% block sw_order_delivery_action_merge %}\\n                            <sw-button size=\\\"small\\\" disabled>\\n                                {{ $tc('sw-order.detailDeliveries.buttonMerge') }}\\n                                <sw-icon name=\\\"small-arrow-small-down\\\" small></sw-icon>\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_order_detail_delivery_action_delete %}\\n                            <sw-button size=\\\"small\\\" disabled>\\n                                <sw-icon name=\\\"small-default-x-line-medium\\\" small></sw-icon>\\n                                {{ $tc('sw-order.detailDeliveries.buttonDelete') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                    </sw-card-section>\\n                {% endblock %}\\n\\n                {% block sw_order_delivery_row_line_items %}\\n                    {# TODO: Get line items from delivery #}\\n                    <sw-order-delivery-line-items-grid :deliveryLineItems=\\\"delivery.positions\\\"\\n                                                       :order=\\\"order\\\">\\n                    </sw-order-delivery-line-items-grid>\\n                {% endblock %}\\n\\n                {% block sw_order_delivery_row_info %}\\n                    <sw-card-section divider=\\\"top\\\" secondary slim>\\n                        {% block sw_order_detail_delivery_info %}\\n                            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0 30px\\\">\\n\\n                                {% block sw_order_delivery_metadata %}\\n                                    <sw-description-list>\\n                                        {% block sw_order_delivery_shipping_method_label %}\\n                                            <dt>{{ $tc('sw-order.detailDeliveries.labelShippingMethod') }}</dt>\\n                                        {% endblock %}\\n                                        {% block sw_order_delivery_shipping_method_value %}\\n                                            <dd>{{ delivery.shippingMethod.name }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_delivery_date_label %}\\n                                            <dt>{{ $tc('sw-order.detailDeliveries.labelDeliveryDate') }}</dt>\\n                                        {% endblock %}\\n                                        {% block sw_order_delivery_date_value %}\\n                                            <dd>{{ delivery.shippingDateEarliest | date }}</dd>\\n                                        {% endblock %}\\n\\n                                        {% block sw_order_shipping_costs_label %}\\n                                            <dt>{{ $tc('sw-order.detailDeliveries.labelShippingCosts') }}</dt>\\n                                        {% endblock %}\\n                                        {% block sw_order_shipping_costs_value %}\\n                                            <dd></dd>\\n                                        {% endblock %}\\n                                    </sw-description-list>\\n                                {% endblock %}\\n\\n                                {% block sw_order_delivery_address %}\\n                                    <sw-address headline=\\\"Shipping Address\\\"\\n                                                :address=\\\"delivery.shippingAddress\\\">\\n                                    </sw-address>\\n                                {% endblock %}\\n                            </sw-container>\\n                        {% endblock %}\\n                    </sw-card-section>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\";","module.exports = \"{% block sw_media_modal_delete %}\\n    <sw-modal v-if=\\\"showModal\\\"\\n              variant=\\\"small\\\"\\n              class=\\\"sw-media-modal-delete\\\"\\n              @closeModal=\\\"closeDeleteModal($event)\\\"\\n              :title=\\\"$tc('sw-media.modalDelete.modalHeader')\\\">\\n\\n        {% block sw_media_modal_body %}\\n            {{ $tc('sw-media.modalDelete.deleteMessage', itemsToDelete.length, { mediaName: itemsToDelete[0].name, count: itemsToDelete.length }) }}\\n        {% endblock %}\\n\\n        {% block sw_media_modal_footer %}\\n            <template slot=\\\"modal-footer\\\">\\n\\n                {% block sw_media_modal_delete_cancel_button %}\\n                    <sw-button @click=\\\"closeDeleteModal($event)\\\" size=\\\"small\\\">\\n                        {{ $tc('sw-media.modalDelete.modalButtonAbort') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_media_modal_delete_confirm_button %}\\n                    <sw-button @click=\\\"deleteSelection($event)\\\" size=\\\"small\\\" variant=\\\"primary\\\">\\n                        {{ $tc('sw-media.modalDelete.modalButtonDelete') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\";","module.exports = \"{% block sw_media_index %}\\n    <sw-page class=\\\"sw-media-index\\\">\\n        <template slot=\\\"content\\\">\\n            {% block sw_media_index_page_content %}\\n                <div class=\\\"sw-media-index__page\\\">\\n                    {% block sw_media_index_content %}\\n                        <div class=\\\"sw-media-index__content\\\">\\n                            {% block sw_media_index_catalogs %}\\n                                {% block sw_media_index_catalogs_title %}\\n                                    <h4>{{ $tc('sw-media.index.catalogs') }}</h4>\\n                                {% endblock %}\\n\\n                                {% block sw_media_index_catalogs_grid %}\\n                                    <sw-media-grid previewType=\\\"media-grid-preview-as-grid\\\"\\n                                                   previewComponent=\\\"sw-media-grid-catalog-item\\\"\\n                                                   :selectable=\\\"false\\\"\\n                                                   :items=\\\"catalogs\\\">\\n                                    </sw-media-grid>\\n                                {% endblock %}\\n\\n                                {% block sw_media_index_catalogs_divider %}\\n                                    <hr class=\\\"sw-media-index__divider\\\">\\n                                {% endblock %}\\n                            {% endblock %}\\n\\n                            {% block sw_media_index_items %}\\n                                {% block sw_media_index_items_title %}\\n                                    <h4 v-if=\\\"!isSearch\\\">{{ $tc('sw-media.index.lastAdded') }}</h4>\\n                                {% endblock %}\\n                                {% block sw_media_index_searched_item_title %}\\n                                    <h4 v-if=\\\"isSearch\\\">{{ $tc('sw-media.index.searchResult') }}</h4>\\n                                {% endblock %}\\n\\n                                {% block sw_media_index_items_grid %}\\n                                    <sw-media-grid previewType=\\\"media-grid-preview-as-grid\\\"\\n                                           previewComponent=\\\"sw-media-grid-media-item\\\"\\n                                           :editable=\\\"true\\\"\\n                                           :selectable=\\\"true\\\"\\n                                           :items=\\\"mediaItems\\\"\\n                                           ref=\\\"mediaGrid\\\"\\n                                           v-on=\\\"mediaMediaGridListener\\\">\\n                                    </sw-media-grid>\\n                                {% endblock %}\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_media_index_sidebar %}\\n                        <div class=\\\"sw-media-index__sidebar\\\">\\n                            <sw-media-sidebar\\n                                :item=\\\"lastSelectedItem\\\"\\n                                v-on=\\\"mediaSidebarListener\\\"\\n                                ref=\\\"mediaSidebar\\\">\\n                            </sw-media-sidebar>\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_media_index_modal_delete %}\\n                <sw-media-modal-delete\\n                   :itemsToDelete =\\\"selectionToDelete\\\"\\n                   @sw-media-modal-delete-close=\\\"closeDeleteModal\\\"\\n                   @sw-media-modal-delete-delete=\\\"deleteSelection\\\">\\n                </sw-media-modal-delete>\\n            {% endblock %}\\n\\n            {% block sw_media_catalog_modal_replace %}\\n                <sw-media-modal-replace\\n                    v-if=\\\"mediaItemToReplace\\\"\\n                    :itemToReplace=\\\"mediaItemToReplace\\\"\\n                    @sw-media-modal-replace-close=\\\"closeReplaceModal\\\"\\n                    @sw-media-modal-replace-confirmed=\\\"handleItemReplaced\\\">\\n                </sw-media-modal-replace>\\n            {% endblock %}\\n        </template>\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_media_upload %}\\n    <div class=\\\"sw-media-upload\\\">\\n        {% block sw_media_upload_button %}\\n            <sw-button variant=\\\"primary\\\" @click=\\\"onClickUpload\\\">{{ $tc('sw-media.smart-bar.buttonUpload') }}</sw-button>\\n        {% endblock %}\\n        \\n        {% block sw_media_upload_file_input %}\\n            <input class=\\\"sw-media-upload__file-input\\\" type=\\\"file\\\" id=\\\"files\\\" ref=\\\"fileInput\\\" accept=\\\"image/*\\\" multiple @change=\\\"onFileInputChange\\\"/>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_catalog %}\\n    <sw-page class=\\\"sw-media-catalog\\\">\\n\\n        {% block sw_media_list_search_bar_type %}\\n            <template slot=\\\"search-bar-type\\\">\\n                {{ $tc('sw-media.general.mainMenuItemGeneral') }}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_media_catalog_smart_bar %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n\\n                {% block sw_media_catalog_smart_bar_media_upload %}\\n                    <sw-media-upload :catalogId=\\\"getCatalogId()\\\" @new-media-entity=\\\"onNewMedia\\\"></sw-media-upload>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n\\n        <template slot=\\\"content\\\">\\n            {% block sw_media_catalog_page_content %}\\n                <div class=\\\"sw-media-catalog__page-content\\\">\\n                    {% block sw_media_catalog_content_container %}\\n                        <div class=\\\"sw-media-catalog__content-container\\\">\\n                            {% block sw_media_catalog_content %}\\n                                <div class=\\\"sw-media-catalog__content\\\">\\n                                    {% block sw_media_catalog_media_grid %}\\n                                        <sw-media-grid\\n                                            class=\\\"sw-media-catalog__media-grid\\\"\\n                                            :previewType=\\\"previewType\\\"\\n                                            previewComponent=\\\"sw-media-grid-media-item\\\"\\n                                            :selectable=\\\"true\\\"\\n                                            :editable=\\\"true\\\"\\n                                            :items=\\\"mediaItems\\\"\\n                                            ref=\\\"mediaGrid\\\"\\n                                            v-on=\\\"mediaMediaGridListener\\\">\\n                                        </sw-media-grid>\\n                                    {% endblock %}\\n\\n                                    {% block sw_media_catalog_pagination %}\\n                                    <sw-pagination\\n                                        :page=\\\"page\\\"\\n                                        :limit=\\\"limit\\\"\\n                                        :total=\\\"total\\\"\\n                                        @page-change=\\\"onPageChange\\\">\\n                                    </sw-pagination>\\n                                    {% endblock %}\\n                                </div>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_media_catalog_sidebar %}\\n                        <div class=\\\"sw-media-catalog__sidebar\\\">\\n                            <sw-media-sidebar\\n                                :item=\\\"lastSelectedItem\\\"\\n                                v-on=\\\"mediaSidebarListener\\\"\\n                                ref=\\\"mediaSidebar\\\"\\n                            ></sw-media-sidebar>\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_media_catalog_modal_delete %}\\n                <sw-media-modal-delete\\n                   :itemsToDelete=\\\"selectionToDelete\\\"\\n                   @sw-media-modal-delete-close=\\\"closeDeleteModal\\\"\\n                   @sw-media-modal-delete-delete=\\\"deleteSelection\\\">\\n                </sw-media-modal-delete>\\n            {% endblock %}\\n\\n            {% block sw_media_catalog_modal_replace %}\\n                <sw-media-modal-replace\\n                    v-if=\\\"mediaItemToReplace\\\"\\n                    :itemToReplace=\\\"mediaItemToReplace\\\"\\n                    @sw-media-modal-replace-close=\\\"closeReplaceModal\\\"\\n                    @sw-media-modal-replace-confirmed=\\\"handleItemReplaced\\\">\\n                </sw-media-modal-replace>\\n            {% endblock %}\\n        </template>\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_media_modal_replace %}\\n    <sw-modal class=\\\"sw-media-modal-replace\\\"\\n              v-if=\\\"showReplaceModal\\\"\\n              :title=\\\"$tc('sw-media.modalReplace.modalTitle')\\\"\\n              @closeModal=\\\"emitCloseReplaceModal\\\">\\n\\n        {% block sw_media_modal_replace_file_input %}\\n            <input class=\\\"sw-media-modal-replace__file-input\\\" type=\\\"file\\\" id=\\\"replaceFileDialog\\\" ref=\\\"fileInput\\\" accept=\\\"image/*\\\" @change=\\\"onFileInputChange\\\"/>\\n        {% endblock %}\\n\\n        {% block sw_media_modal_replace_upload_button %}\\n            <div class=\\\"sw-media-modal-replace__upload-button\\\">\\n                <sw-button variant=\\\"primary\\\" @click=\\\"onClickUpload\\\">{{ $tc('sw-media.smart-bar.buttonUpload') }}</sw-button>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_media_modal_replace_preview_container %}\\n            <div class=\\\"sw-media-modal-replace__preview-container\\\" v-if=\\\"previewMediaEntity\\\">\\n                {% block sw_media_modal_replace_media_preview %}\\n                    <sw-media-preview class=\\\"sw-media-modal-replace__preview\\\" :item=\\\"previewMediaEntity\\\"></sw-media-preview>\\n                {% endblock %}\\n\\n                {% block sw_media_modal_replace_file_name %}\\n                    <div class=\\\"sw-media-modal-replace__filename\\\">{{ previewMediaEntity.name}}</div>\\n                {% endblock %}\\n\\n                {% block sw_media_modal_replace_remove_selection %}\\n                    <div @click=\\\"removeSelectedFile\\\"><sw-icon size=\\\"16px\\\" name=\\\"small-default-x-line-medium\\\"></sw-icon></div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_media_modal_replace_modal_footer %}\\n            <template slot=\\\"modal-footer\\\">\\n\\n                {% block sw_media_modal_replace_cancel_button %}\\n                    <sw-button size=\\\"small\\\" @click=\\\"emitCloseReplaceModal\\\">\\n                        {{ $tc('sw-media.modalReplace.cancelButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_media_modal_replace_replace_button %}\\n                    <sw-button size=\\\"small\\\" variant=\\\"primary\\\" @click=\\\"replaceMediaItem\\\">\\n                        {{ $tc('sw-media.modalReplace.replaceButton') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\";","module.exports = \"{% block sw_media_sidebar %}\\n    <div class=\\\"sw-media-sidebar\\\">\\n        <sw-sidebar slot=\\\"sidebar\\\">\\n            {% block sw_media_sidebar_container %}\\n                <div class=\\\"sw-media-sidebar__item-container\\\">\\n                    {% block sw_media_sidebar_items_top %}\\n                        <div class=\\\"sw-media-sidebar__items-top\\\">\\n                            {% block sw_media_sidebar_actions_quickinfo %}\\n                                <sw-sidebar-item icon=\\\"default-action-document-view\\\"\\n                                                 :title=\\\"$tc('sw-media.sidebar.actions.quickInfo')\\\"\\n                                                 ref=\\\"quickInfoButton\\\">\\n                                    <sw-media-quickinfo :item=\\\"item\\\" v-on=\\\"$listeners\\\"></sw-media-quickinfo>\\n                                </sw-sidebar-item>\\n                            {% endblock %}\\n\\n                            {% block sw_media_sidebar_actions_filter %}\\n                                <sw-sidebar-item icon=\\\"default-action-filter\\\"\\n                                                 :title=\\\"$tc('sw-media.sidebar.actions.filter')\\\"\\n                                                 :disabled=\\\"true\\\">\\n                                </sw-sidebar-item>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n\\n                    {% block sw_media_sidebar_items_bottom %}\\n                        <div class=\\\"sw-media-sidebar__items-bottom\\\">\\n                            {% block sw_media_sidebar_actions_move_file %}\\n                                <sw-sidebar-item icon=\\\"default-action-move-file\\\"\\n                                                 @click=\\\"emitRequestMoveSelection\\\">\\n                                </sw-sidebar-item>\\n                            {% endblock %}\\n\\n                            {% block sw_media_sidebar_actions_delete_file %}\\n                                <sw-sidebar-item icon=\\\"default-action-trash\\\"\\n                                                 @click=\\\"emitRequestRemoveSelection\\\">\\n                                </sw-sidebar-item>\\n                            {% endblock %}\\n\\n                            {% block sw_media_sidebar_actions_settings %}\\n                                <sw-sidebar-item icon=\\\"default-action-settings\\\"\\n                                                 :title=\\\"$tc('sw-media.sidebar.actions.settings')\\\"\\n                                                 :disabled=\\\"true\\\">\\n                                </sw-sidebar-item>\\n                            {% endblock %}\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </sw-sidebar>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_collapse_panel_header_slot %}\\n    <div class=\\\"sw-media-collapse__header\\\">\\n        {% block sw_media_collapse_title %}\\n            <div class=\\\"sw-media-collapse__title\\\">\\n                {{ title }}\\n            </div>\\n        {% endblock %}\\n        {% block sw_media_collapse_buttons %}\\n            <div class=\\\"sw-media-collapse__indicator\\\">\\n                <sw-icon name=\\\"small-arrow-small-right\\\" class=\\\"sw-media-collapse__button\\\" :class=\\\"expandButtonClass\\\"></sw-icon>\\n                <sw-icon name=\\\"small-arrow-small-down\\\" class=\\\"sw-media-collapse__button\\\" :class=\\\"collapseButtonClass\\\"></sw-icon>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_quickinfo %}\\n    <div class=\\\"sw-media-quickinfo\\\">\\n        <template v-if=\\\"itemIsAvailable\\\">\\n            {% block sw_media_quickinfo_quickactions %}\\n                <sw-media-collapse\\n                    class=\\\"sw-media-quickinfo-collapse\\\"\\n                    :title=\\\"$tc('sw-media.sidebar.quickinfo.actions')\\\"\\n                    :expandOnLoading=\\\"true\\\">\\n\\n                    <template slot=\\\"content\\\">\\n                        {% block sw_media_quickinfo_quickactions_content %}\\n                            <div class=\\\"sw-media-quickinfo__collapse-content sw-media-quickinfo__two-columns\\\">\\n                                {% block sw_media_quickinfo_quickactions_replace %}\\n                                    <div class=\\\"sw-media-quickinfo__quickaction\\\"\\n                                         @click=\\\"emitQuickAction($event, 'replace-item')\\\">\\n                                        <sw-icon small\\n                                                 name=\\\"default-action-cloud-upload\\\"\\n                                                 class=\\\"sw-media-quickinfo__quickactions-icon\\\">\\n                                        </sw-icon>\\n                                        {{ $tc('sw-media.sidebar.quickinfo.replace') }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_media_quickinfo_quickactions_download %}\\n                                    <a class=\\\"sw-media-quickinfo__quickaction\\\"\\n                                       :href=\\\"this.item.url\\\"\\n                                       download>\\n                                        <sw-icon small\\n                                                 name=\\\"default-action-cloud-download\\\"\\n                                                 class=\\\"sw-media-quickinfo__quickactions-icon\\\">\\n                                        </sw-icon>\\n                                        {{ $tc('sw-media.sidebar.quickinfo.download') }}\\n                                    </a>\\n                                {% endblock %}\\n\\n                                {% block sw_media_quickinfo_quickactions_move %}\\n                                    <div class=\\\"sw-media-quickinfo__quickaction\\\"\\n                                         @click=\\\"emitQuickAction($event, 'move-item')\\\">\\n                                        <sw-icon small\\n                                                 name=\\\"default-action-move-file\\\"\\n                                                 class=\\\"sw-media-quickinfo__quickactions-icon\\\">\\n                                        </sw-icon>\\n                                        {{ $tc('sw-media.sidebar.quickinfo.move') }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_media_quickinfo_quickactions_delete %}\\n                                    <div class=\\\"sw-media-quickinfo__quickaction\\\"\\n                                         @click=\\\"emitQuickAction($event, 'remove-item')\\\">\\n                                        <sw-icon small\\n                                                 name=\\\"default-action-trash\\\"\\n                                                 class=\\\"sw-media-quickinfo__quickactions-icon\\\">\\n                                        </sw-icon>\\n                                        {{ $tc('sw-media.sidebar.quickinfo.delete') }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_media_quickinfo_quickactions_copy_link %}\\n                                    <div class=\\\"sw-media-quickinfo__quickaction\\\"\\n                                         @click=\\\"copyLinkToClipboard\\\">\\n                                        <sw-icon small\\n                                                 name=\\\"default-web-link\\\"\\n                                                 class=\\\"sw-media-quickinfo__quickactions-icon\\\">\\n                                        </sw-icon>\\n                                        {{ $tc('sw-media.sidebar.quickinfo.copyLink') }}\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_media_quickinfo_quickactions_more %}\\n                                    <div class=\\\"sw-media-quickinfo__quickaction\\\">\\n                                        <sw-icon name=\\\"default-action-more-horizontal\\\"\\n                                                 class=\\\"sw-media-quickinfo__quickactions-icon\\\"\\n                                                 small>\\n                                        </sw-icon>\\n                                        {{ $tc('sw-media.sidebar.quickinfo.more') }}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </template>\\n\\n                </sw-media-collapse>\\n            {% endblock %}\\n\\n            {% block sw_media_quickinfo_preview %}\\n                <sw-media-collapse\\n                    class=\\\"sw-media-quickinfo-collapse\\\"\\n                    :expandOnLoading=\\\"true\\\"\\n                    :title=\\\"$tc('sw-media.sidebar.quickinfo.preview')\\\">\\n\\n                    <template slot=\\\"content\\\">\\n                        {% block sw_media_quickinfo_preview_content %}\\n                            <div class=\\\"sw-media-quickinfo__collapse-content\\\">\\n                                <div class=\\\"sw-media-quickinfo__preview\\\">\\n                                    {% block sw_media_quickinfo_preview_item %}\\n                                        <sw-media-preview :item=\\\"item\\\"\\n                                                          :playable=\\\"true\\\">\\n                                        </sw-media-preview>\\n                                    {% endblock %}\\n                                </div>\\n                            </div>\\n                        {% endblock %}\\n                    </template>\\n\\n                </sw-media-collapse>\\n            {% endblock %}\\n\\n            {% block sw_media_quickinfo_metadata %}\\n                <sw-media-collapse\\n                    class=\\\"sw-media-quickinfo-collapse\\\"\\n                    :expandOnLoading=\\\"true\\\"\\n                    :title=\\\"$tc('sw-media.sidebar.quickinfo.metadata')\\\">\\n\\n                    <template slot=\\\"content\\\">\\n                        {% block sw_media_quickinfo_metadata_content %}\\n                            <div class=\\\"sw-media-quickinfo__collapse-content sw-media-quickinfo__two-columns\\\">\\n                                <template v-for=\\\"(value, key) in getMetadata\\\">\\n                                    {% block sw_media_quickinfo_metadata_attribute %}\\n                                        <div class=\\\"sw-media-quickinfo__metadata-description\\\">{{ $tc('sw-media.sidebar.metadata.' + key) }}:</div>\\n                                    {% endblock %}\\n                                    {% block sw_media_quickinfo_metadata_value %}\\n                                        <div class=\\\"sw-media-quickinfo__metadata-value\\\">{{ value }}</div>\\n                                    {% endblock %}\\n                                </template>\\n                            </div>\\n                        {% endblock %}\\n                    </template>\\n\\n                </sw-media-collapse>\\n            {% endblock %}\\n        </template>\\n        <template v-else>\\n            {% block sw_media_quickinfo_no_item_selected %}\\n                <sw-alert variant=\\\"warning\\\" :showIcon=\\\"false\\\">\\n                    {{ $tc('sw-media.sidebar.quickinfo.nothingSelected') }}\\n                </sw-alert>\\n            {% endblock %}\\n        </template>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_grid_item_selection_identifier %}{% endblock %}\\n\\n{% block sw_media_grid_item_preview %}\\n    <sw-icon class=\\\"sw-media-grid-item__catalog-item\\\"\\n        name=\\\"folder-thumbnail\\\"\\n        multicolor\\n        size=\\\"64px\\\">\\n    </sw-icon>\\n{% endblock %}\\n\\n{% block sw_media_grid_item_context_items%}\\n    {% block sw_media_grid_catalog_item_show_content_button %}\\n        <sw-context-menu-item :routerLink=\\\"{ name: 'sw.media.catalog-content', params: { id: item.id } }\\\">\\n            {{ $tc('sw-media.catalogItem.showCatalogContent') }}\\n        </sw-context-menu-item>\\n    {% endblock %}\\n\\n    {% block sw_media_grid_catalog_item_show_catalog_button %}\\n        <sw-context-menu-item :routerLink=\\\"{ name: 'sw.catalog.detail', params: { id: item.id } }\\\">\\n            {{ $tc('sw-media.catalogItem.showCatalogDetails') }}\\n        </sw-context-menu-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    <sw-settings-item :label=\\\"$tc('sw-integration.general.mainMenuItemIndex')\\\" :to=\\\"{ name: 'sw.integration.index' }\\\">\\n        <template slot=\\\"icon\\\">\\n            <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                <defs>\\n                    <path id=\\\"integration-a\\\" d=\\\"M40,40 L22,22\\\"/>\\n                    <path id=\\\"integration-b\\\" d=\\\"M59,60 L40,40\\\"/>\\n                    <path id=\\\"integration-c\\\" d=\\\"M61,19 L40,40\\\"/>\\n                    <path id=\\\"integration-d\\\" d=\\\"M40,40 L21,48\\\"/>\\n                    <path id=\\\"integration-e\\\" d=\\\"M40,40 L29,62\\\"/>\\n                    <circle id=\\\"integration-g\\\" cx=\\\"40\\\" cy=\\\"40\\\" r=\\\"10\\\"/>\\n                    <filter id=\\\"integration-f\\\" width=\\\"140%\\\" height=\\\"140%\\\" x=\\\"-25%\\\" y=\\\"-15%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                        <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"2\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                        <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                        <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                        <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                    </filter>\\n                    <circle id=\\\"integration-i\\\" cx=\\\"62\\\" cy=\\\"19\\\" r=\\\"6\\\"/>\\n                    <filter id=\\\"integration-h\\\" width=\\\"150%\\\" height=\\\"150%\\\" x=\\\"-33.3%\\\" y=\\\"-16.7%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                        <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"1\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                        <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                        <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                        <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                    </filter>\\n                    <circle id=\\\"integration-k\\\" cx=\\\"27\\\" cy=\\\"65\\\" r=\\\"5\\\"/>\\n                    <filter id=\\\"integration-j\\\" width=\\\"160%\\\" height=\\\"160%\\\" x=\\\"-40%\\\" y=\\\"-20%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                        <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"1\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                        <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                        <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                        <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                    </filter>\\n                </defs>\\n                <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                    <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M3,46.9602379 C3,78.5450816 32.9673758,52.2243785 46.2862095,68.0168004 C59.6050432,83.8092223 82.9130022,65.3847301 74.0337797,46.9602379 C65.1545573,28.5357457 59.6050432,0.89900747 41.8465983,16.6914293 C24.0881534,32.4838512 3,15.3753942 3,46.9602379 Z\\\"/>\\n                    <circle cx=\\\"40\\\" cy=\\\"40\\\" r=\\\"29\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\"/>\\n                    <g fill-rule=\\\"nonzero\\\" stroke-linecap=\\\"square\\\">\\n                        <use stroke=\\\"#303A4F\\\" stroke-width=\\\"6\\\" xlink:href=\\\"#integration-a\\\"/>\\n                        <use stroke=\\\"#FFF\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-a\\\"/>\\n                    </g>\\n                    <g fill-rule=\\\"nonzero\\\" stroke-linecap=\\\"square\\\">\\n                        <use stroke=\\\"#303A4F\\\" stroke-width=\\\"6\\\" xlink:href=\\\"#integration-b\\\"/>\\n                        <use stroke=\\\"#FFF\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-b\\\"/>\\n                    </g>\\n                    <g fill-rule=\\\"nonzero\\\" stroke-linecap=\\\"square\\\">\\n                        <use stroke=\\\"#303A4F\\\" stroke-width=\\\"6\\\" xlink:href=\\\"#integration-c\\\"/>\\n                        <use stroke=\\\"#FFF\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-c\\\"/>\\n                    </g>\\n                    <g fill-rule=\\\"nonzero\\\" stroke-linecap=\\\"square\\\">\\n                        <use stroke=\\\"#303A4F\\\" stroke-width=\\\"6\\\" xlink:href=\\\"#integration-d\\\"/>\\n                        <use stroke=\\\"#FFF\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-d\\\"/>\\n                    </g>\\n                    <g fill-rule=\\\"nonzero\\\" stroke-linecap=\\\"square\\\">\\n                        <use stroke=\\\"#303A4F\\\" stroke-width=\\\"6\\\" xlink:href=\\\"#integration-e\\\"/>\\n                        <use stroke=\\\"#FFF\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-e\\\"/>\\n                    </g>\\n                    <g fill-rule=\\\"nonzero\\\">\\n                        <use fill=\\\"#000\\\" filter=\\\"url(#integration-f)\\\" xlink:href=\\\"#integration-g\\\"/>\\n                        <circle cx=\\\"40\\\" cy=\\\"40\\\" r=\\\"11\\\" fill=\\\"#189EFF\\\" fill-rule=\\\"evenodd\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\"/>\\n                    </g>\\n                    <g fill-rule=\\\"nonzero\\\">\\n                        <use fill=\\\"#000\\\" filter=\\\"url(#integration-h)\\\" xlink:href=\\\"#integration-i\\\"/>\\n                        <use fill=\\\"#57D9A3\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-i\\\"/>\\n                    </g>\\n                    <circle cx=\\\"59\\\" cy=\\\"59\\\" r=\\\"9\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\"/>\\n                    <circle cx=\\\"21\\\" cy=\\\"21\\\" r=\\\"9\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\"/>\\n                    <g fill-rule=\\\"nonzero\\\">\\n                        <use fill=\\\"#000\\\" filter=\\\"url(#integration-j)\\\" xlink:href=\\\"#integration-k\\\"/>\\n                        <use fill=\\\"#57D9A3\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#integration-k\\\"/>\\n                    </g>\\n                    <circle cx=\\\"21\\\" cy=\\\"48\\\" r=\\\"4\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\"/>\\n                </g>\\n            </svg>\\n        </template>\\n    </sw-settings-item>\\n{% endblock %}\";","module.exports = \"{% block sw_integration_list %}\\n    <sw-page class=\\\"sw-integration-list\\\">\\n        <template slot=\\\"smart-bar-header\\\">\\n            {% block sw_integration_list_smart_bar_header %}\\n                <h2>{{ $tc('sw-integration.general.headlineIntegrations') }}</h2>\\n            {% endblock %}\\n        </template>\\n\\n        <template slot=\\\"smart-bar-actions\\\">\\n            {% block sw_integration_list_smart_bar_actions %}\\n                <sw-button @click=\\\"onShowDetailModal()\\\" variant=\\\"primary\\\">\\n                    {{ $tc('sw-integration.general.buttonCreateIntegration') }}\\n                </sw-button>\\n            {% endblock %}\\n        </template>\\n\\n        <template slot=\\\"content\\\">\\n            <div class=\\\"sw-integration-list__content\\\">\\n                <sw-card-view class=\\\"sw-integration-list__content\\\">\\n                    {% block sw_integration_list_content %}\\n                        {% block sw_integration_list_introduction %}\\n                            <sw-card :hero=\\\"true\\\">\\n                                <h3>{{ $tc('sw-integration.general.heroHeadlineIntegrations') }}</h3>\\n                                <p>{{ $tc('sw-integration.general.heroDescriptionIntegrations') }}</p>\\n                            </sw-card>\\n                        {% endblock %}\\n\\n                        {% block sw_integration_list_overview %}\\n                            <sw-card :isLoading=\\\"isLoading\\\" class=\\\"sw-integration-list__overview\\\">\\n                                {% block sw_integration_list_overview_inner %}\\n                                    {% block sw_integration_list_detail_modal %}\\n                                        <sw-modal v-if=\\\"currentIntegration\\\"\\n                                                  class=\\\"sw-integration-list__detail\\\"\\n                                                  :isLoading=\\\"isModalLoading\\\"\\n                                                  :title=\\\"$tc('sw-integration.detail.detailModalTitle')\\\"\\n                                                  @closeModal=\\\"onCloseDetailModal\\\">\\n                                            {% block sw_integration_list_detail_modal_inner %}\\n\\n                                                <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"30px 30px\\\">\\n                                                    {% block sw_integration_list_detail_modal_inner_field_label %}\\n                                                        <sw-field :label=\\\"$tc('sw-integration.detail.labelFieldLabel')\\\"\\n                                                                  validation=\\\"required\\\"\\n                                                                  v-model=\\\"currentIntegration.label\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_integration_list_detail_modal_inner_field_writeaccess %}\\n                                                        <sw-field :label=\\\"$tc('sw-integration.detail.writeAccessFieldLabel')\\\"\\n                                                                  type=\\\"checkbox\\\"\\n                                                                  value=\\\"boolean\\\"\\n                                                                  v-model=\\\"currentIntegration.writeAccess\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-container>\\n\\n                                                {% block sw_integration_list_detail_modal_inner_field_accesskey %}\\n                                                    <sw-field :label=\\\"$tc('sw-integration.detail.idFieldLabel')\\\"\\n                                                              :disabled=\\\"true\\\"\\n                                                              v-model=\\\"currentIntegration.accessKey\\\"\\n                                                              :copyAble=\\\"true\\\">\\n                                                    </sw-field>\\n                                                {% endblock %}\\n\\n                                                {% block sw_integration_list_detail_modal_inner_field_secretaccesskey %}\\n                                                    <sw-field :type=\\\"secretAccessKeyFieldType\\\"\\n                                                              :label=\\\"$tc('sw-integration.detail.secretFieldLabel')\\\"\\n                                                              :disabled=\\\"true\\\"\\n                                                              v-model=\\\"currentIntegration.secretAccessKey\\\"\\n                                                              :passwordToggleAble=\\\"false\\\"\\n                                                              :copyAble=\\\"showSecretAccessKey\\\">\\n\\n                                                    </sw-field>\\n\\n                                                    <sw-button v-if=\\\"!showSecretAccessKey\\\" @click=\\\"onGenerateKeys\\\"\\n                                                               variant=\\\"danger\\\">\\n                                                        {{ $tc('sw-integration.detail.buttonCreateNewApiKeys') }}\\n                                                    </sw-button>\\n                                                {% endblock %}\\n\\n                                                {% block sw_integration_list_detail_modal_inner_helptext %}\\n                                                    <sw-alert variant=\\\"info\\\"\\n                                                              :title=\\\"$tc('sw-integration.detail.secretHelpTextTitle')\\\"\\n                                                              class=\\\"sw-integration-list__secret-help-text-alert\\\">\\n                                                        {{ $tc('sw-integration.detail.secretHelpText') }}\\n                                                    </sw-alert>\\n                                                {% endblock %}\\n\\n                                                {% block sw_integration_list_detail_modal_inner_footer %}\\n                                                    <template slot=\\\"modal-footer\\\">\\n                                                        {% block sw_integration_list_detail_modal_inner_footer_cancel %}\\n                                                            <sw-button size=\\\"small\\\" @click=\\\"onCloseDetailModal\\\">\\n                                                                {{ $tc('sw-integration.detail.buttonCancel') }}\\n                                                            </sw-button>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_integration_list_detail_modal_inner_footer_apply %}\\n                                                            <sw-button size=\\\"small\\\"\\n                                                                       variant=\\\"primary\\\"\\n                                                                       @click=\\\"onSaveIntegration\\\">\\n                                                                {{ $tc('sw-integration.detail.buttonApply') }}\\n                                                            </sw-button>\\n                                                        {% endblock %}\\n                                                    </template>\\n                                                {% endblock %}\\n                                            {% endblock %}\\n                                        </sw-modal>\\n                                    {% endblock %}\\n\\n                                    {% block sw_integration_list_grid %}\\n                                        <sw-grid v-if=\\\"total\\\"\\n                                                 :items=\\\"integrations\\\"\\n                                                 :selectable=\\\"false\\\"\\n                                                 :header=\\\"false\\\"\\n                                                 :table=\\\"true\\\">\\n                                            {% block sw_integration_list_grid_inner %}\\n                                                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                                    {% block sw_integration_list_grid_inner_slot_columns %}\\n                                                        {% block sw_integration_list_grid_inner_slot_columns_icon %}\\n                                                            <sw-grid-column flex=\\\"minmax(80px, 80px)\\\" dataIndex=\\\"icon\\\">\\n                                                                <span class=\\\"sw-integration-list__app-icon\\\">\\n                                                                    <sw-icon name=\\\"default-action-share\\\">\\n                                                                    </sw-icon>\\n                                                                </span>\\n                                                            </sw-grid-column>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_integration_list_grid_inner_slot_columns_label %}\\n                                                            <sw-grid-column flex=\\\"minmax(150px, 1fr)\\\" dataIndex=\\\"label\\\">\\n                                                                {{ item.label }}\\n                                                            </sw-grid-column>\\n                                                        {% endblock %}\\n                                                        {% block sw_integration_list_grid_inner_slot_columns_actions %}\\n                                                            <sw-grid-column flex=\\\"minmax(100px, 100px)\\\"\\n                                                                            dataIndex=\\\"actions\\\">\\n                                                                <sw-context-button>\\n                                                                    {% block sw_integration_list_grid_inner_slot_columns_actions_edit %}\\n                                                                        <sw-context-menu-item\\n                                                                                @click=\\\"onShowDetailModal(item.id)\\\">\\n                                                                            {{ $tc('sw-integration.list.contextMenuEdit') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n                                                                    {% block sw_integration_list_grid_inner_slot_columns_actions_delete %}\\n                                                                        <sw-context-menu-item variant=\\\"danger\\\"\\n                                                                                              @click=\\\"showDeleteModal = item.id\\\">\\n                                                                            {{ $tc('sw-integration.list.contextMenuDelete') }}\\n                                                                        </sw-context-menu-item>\\n                                                                    {% endblock %}\\n                                                                </sw-context-button>\\n                                                            </sw-grid-column>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_integration_list_grid_inner_slot_delete_modal %}\\n                                                            <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                                      :title=\\\"$tc('sw-integration.detail.deleteModalTitle')\\\"\\n                                                                      @closeModal=\\\"onCloseDeleteModal\\\">\\n                                                                {% block sw_integration_list_grid_inner_slot_delete_modal_confirmtext %}\\n                                                                    <p>\\n                                                                        {{ $tc('sw-integration.detail.confirmDelete') }}\\n                                                                        {{ item.label }}\\n                                                                    </p>\\n                                                                {% endblock %}\\n\\n                                                                {% block sw_integration_list_grid_inner_slot_delete_modal_footer %}\\n                                                                    <template slot=\\\"modal-footer\\\">\\n                                                                        <sw-button size=\\\"small\\\"\\n                                                                                   @click=\\\"onCloseDeleteModal\\\">\\n                                                                            {{ $tc('sw-integration.detail.buttonCancel') }}\\n                                                                        </sw-button>\\n                                                                        <sw-button size=\\\"small\\\"\\n                                                                                   variant=\\\"primary\\\"\\n                                                                                   @click=\\\"onConfirmDelete(item.id)\\\">\\n                                                                            {{ $tc('sw-integration.detail.buttonDelete') }}\\n                                                                        </sw-button>\\n                                                                    </template>\\n                                                                {% endblock %}\\n                                                            </sw-modal>\\n                                                        {% endblock %}\\n                                                    {% endblock %}\\n                                                </template>\\n                                            {% endblock %}\\n                                            <template slot=\\\"pagination\\\">\\n                                                {% block sw_integration_list_grid_pagination %}\\n                                                    <sw-pagination :page=\\\"page\\\"\\n                                                                   :limit=\\\"limit\\\"\\n                                                                   :total=\\\"total\\\"\\n                                                                   :total-visible=\\\"7\\\"\\n                                                                   @page-change=\\\"onPageChange\\\">\\n                                                    </sw-pagination>\\n                                                {% endblock %}\\n                                            </template>\\n                                        </sw-grid>\\n                                    {% endblock %}\\n                                    {% block sw_product_list_empty_state %}\\n                                        <sw-empty-state v-else-if=\\\"!isLoading && !total\\\"\\n                                                        :title=\\\"$tc('sw-integration.list.messageEmpty')\\\">\\n                                        </sw-empty-state>\\n                                    {% endblock %}\\n                                {% endblock %}\\n                            </sw-card>\\n                        {% endblock %}\\n                    {% endblock %}\\n                </sw-card-view>\\n            </div>\\n        </template>\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_admin_menu_navigation_main %}\\n    {% parent %}\\n\\n    <sw-sales-channel-menu></sw-sales-channel-menu>\\n{% endblock %}\";","module.exports = \"{% block sw_sales_channel_menu %}\\n    <div class=\\\"sw-sales-channel-menu\\\">\\n        {% block sw_sales_channel_menu_modal %}\\n            <sw-sales-channel-modal v-if=\\\"showModal\\\" @closeModal=\\\"showModal=false\\\"></sw-sales-channel-modal>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_menu_headline %}\\n            <div class=\\\"sw-admin-menu__headline\\\">\\n                {% block sw_sales_channel_menu_headline_text %}\\n                    <div class=\\\"collapsible-text\\\">{{ $tc('sw-sales-channel.general.titleMenuItems') }}</div>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_menu_headline_action %}\\n                    <button class=\\\"sw-admin-menu__headline-action\\\" @click=\\\"showModal=true\\\">\\n                        <sw-icon class=\\\"sw-admin-menu__headline-icon\\\"\\n                                 name=\\\"small-default-plus-circle\\\"\\n                                 small>\\n                        </sw-icon>\\n                    </button>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_menu_navigation %}\\n            <nav class=\\\"sw-admin-menu__navigation\\\">\\n\\n                {% block sw_sales_channel_menu_navigation_main_list %}\\n                    <ul class=\\\"sw-admin-menu__navigation-list\\\">\\n\\n                        {% block sw_sales_channel_menu_navigation_main_items %}\\n                            <sw-admin-menu-item v-for=\\\"entry in menuItems\\\"\\n                                                :entry=\\\"entry\\\"\\n                                                :key=\\\"entry.id || entry.path\\\"\\n                                                iconSize=\\\"16px\\\"\\n                                                :class=\\\"entry.label\\\">\\n                            </sw-admin-menu-item>\\n                        {% endblock %}\\n                    </ul>\\n                {% endblock %}\\n            </nav>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_sales_channel_modal %}\\n    <sw-modal class=\\\"sw-sales-channel-modal\\\"\\n              :isLoading=\\\"isLoading\\\"\\n              @closeModal=\\\"onCloseModal\\\">\\n\\n        {% block sw_sales_channel_modal_header %}\\n            <template slot=\\\"modal-header\\\">\\n                {% block sw_sales_channel_modal_header_back %}\\n                    <button v-if=\\\"detailType\\\"\\n                            :disabled=\\\"isLoading\\\"\\n                            class=\\\"sw-sales-channel-modal__back\\\"\\n                            :title=\\\"$tc('sw-sales-channel.modal.buttonBack')\\\"\\n                            :aria-label=\\\"$tc('sw-sales-channel.modal.buttonBack')\\\"\\n                            @click.prevent=\\\"detailType = false\\\">\\n                        <sw-icon name=\\\"default-arrow-simple-left\\\" small></sw-icon>\\n                    </button>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_modal_header_title %}\\n                    <h4 class=\\\"sw-sales-channel-modal__title\\\">\\n                        {{ modalTitle }}\\n                    </h4>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_modal_header_close %}\\n                    <button class=\\\"sw-modal__close\\\"\\n                            :title=\\\"$tc('global.sw-modal.labelClose')\\\"\\n                            :aria-label=\\\"$tc('global.sw-modal.labelClose')\\\"\\n                            @click.prevent=\\\"onCloseModal\\\">\\n                            <sw-icon name=\\\"small-default-x-line-medium\\\" small></sw-icon>\\n                    </button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_modal_grid %}\\n            <sw-grid v-if=\\\"!detailType\\\"\\n                     :items=\\\"salesChannelTypes\\\"\\n                     :selectable=\\\"false\\\"\\n                     :header=\\\"false\\\"\\n                     :table=\\\"true\\\">\\n                <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                    {% block sw_sales_channel_grid_columns %}\\n                        {% block sw_sales_channel_grid_columns_icon %}\\n                            <sw-grid-column flex=\\\"80px\\\" dataIndex=\\\"icon\\\">\\n                                <span class=\\\"sw-sales-channel-modal__grid-icon\\\">\\n                                    <sw-icon v-if=\\\"item.iconName\\\" :name=\\\"item.iconName\\\">\\n                                    </sw-icon>\\n                                </span>\\n                            </sw-grid-column>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_grid_columns_content %}\\n                            <sw-grid-column flex=\\\"minmax(200px, 1fr)\\\" dataIndex=\\\"content\\\">\\n                                <div class=\\\"sw-sales-channel-modal__grid-item-content\\\">\\n                                    <h3 class=\\\"sw-sales-channel-modal__grid-item-name\\\">{{ item.name }}</h3>\\n                                    <div class=\\\"sw-sales-channel-modal__grid-item-description\\\">{{ item.description }}</div>\\n                                </div>\\n                            </sw-grid-column>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_grid_columns_actions %}\\n                            <sw-grid-column flex=\\\"auto\\\"\\n                                            align=\\\"center\\\"\\n                                            dataIndex=\\\"actions\\\"\\n                                            class=\\\"sw-sales-channel-modal__grid-actions\\\">\\n                                <sw-button size=\\\"small\\\" @click=\\\"onOpenDetail(item.id)\\\">\\n                                    {{ $tc('sw-sales-channel.modal.buttonShowDetails') }}\\n                                </sw-button>\\n                                <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onAddChannel(item.id)\\\">\\n                                    {{ $tc('sw-sales-channel.modal.buttonAddChannel') }}\\n                                </sw-button>\\n                            </sw-grid-column>\\n                        {% endblock %}\\n                    {% endblock %}\\n                </template>\\n            </sw-grid>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_modal_detail %}\\n            <div v-else>\\n                {% block sw_sales_channel_modal_detail_header %}\\n                    <sw-container grid=\\\"165px 1fr\\\" gap=\\\"30px\\\" class=\\\"sw-sales-channel-modal__detail-header\\\">\\n                        {% block sw_sales_channel_modal_detail_header_cover %}\\n                            <div class=\\\"sw-sales-channel-modal__detail-cover\\\">\\n                                <img :src=\\\"detailType.coverUrl\\\">\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_modal_detail_header_meta %}\\n                            <div class=\\\"sw-sales-channel-modal__detail-meta\\\">\\n                                <h4 class=\\\"sw-sales-channel-modal__detail-name\\\">{{ detailType.name }}</h4>\\n                                <div class=\\\"sw-sales-channel-modal__detail-manufacturer\\\">{{ detailType.manufacturer }}</div>\\n                                <div class=\\\"sw-sales-channel-modal__detail-description\\\">{{ detailType.description }}</div>\\n                                <div class=\\\"sw-sales-channel-modal__detail-actions\\\">\\n                                    <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onAddChannel\\\">\\n                                        {{ $tc('sw-sales-channel.modal.buttonAddChannel') }}\\n                                    </sw-button>\\n                                </div>\\n                            </div>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_modal_detail_screenshots %}\\n                    <div class=\\\"sw-sales-channel-modal__screenshots\\\">\\n                        <div v-for=\\\"url in detailType.screenshotUrls\\\" class=\\\"sw-sales-channel-modal__screenshot\\\">\\n                            <img :src=\\\"url\\\">\\n                        </div>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_modal_detail_description %}\\n                    <h4 class=\\\"sw-sales-channel-modal__detail-description-long-title\\\">\\n                        {{ $tc('sw-sales-channel.modal.titleDescription') }}\\n                    </h4>\\n                    <div class=\\\"sw-sales-channel-modal__detail-description-long-text\\\">\\n                        {{ detailType.descriptionLong }}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_modal_footer %}\\n            <template slot=\\\"modal-footer\\\">\\n                <div v-if=\\\"detailType\\\">\\n                    {% block sw_sales_channel_modal_footer_detail_actions %}\\n                        {% block sw_sales_channel_modal_footer_back %}\\n                            <sw-button size=\\\"small\\\" @click.prevent=\\\"detailType = false\\\" :disabled=\\\"isLoading\\\">\\n                                {{ $tc('sw-sales-channel.modal.buttonBack') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_modal_footer_add_channel %}\\n                            <sw-button variant=\\\"primary\\\" size=\\\"small\\\" @click=\\\"onAddChannel\\\">\\n                                {{ $tc('sw-sales-channel.modal.buttonAddChannel') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    {% endblock %}\\n                </div>\\n\\n                <div v-else>\\n                    {% block sw_sales_channel_modal_footer_actions %}\\n                        {% block sw_sales_channel_modal_footer_cancel %}\\n                        <sw-button size=\\\"small\\\" @click=\\\"onCloseModal\\\">\\n                            {{ $tc('sw-sales-channel.modal.buttonCancel') }}\\n                        </sw-button>\\n                        {% endblock %}\\n                    {% endblock %}\\n                </div>\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\";","module.exports = \"{% block sw_sales_channel_detail %}\\n    <sw-page class=\\\"sw-sales-channel-detail\\\">\\n        {% block sw_sales_channel_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                {% block sw_sales_channel_detail_header_headline %}\\n                    <h2>{{ salesChannel.name }}</h2>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_sales_channel_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-sales-channel.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n                {% block sw_sales_channel_detail_content_tabs %}\\n                    <sw-tabs class=\\\"sw-sales-channel-detail-__tabs\\\">\\n                        {%  block sw_sales_channel_detail_content_tabs_general %}\\n                            <sw-tabs-item :route=\\\"{ name: 'sw.sales.channel.detail', params: { id: $route.params.id } }\\\"\\n                                          :title=\\\"$tc('sw-sales-channel.detail.tabBase')\\\">\\n                                {{ $tc('sw-sales-channel.detail.tabBase') }}\\n                            </sw-tabs-item>\\n                        {% endblock %}\\n                    </sw-tabs>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_content_view %}\\n                    <router-view :salesChannel=\\\"salesChannel\\\"></router-view>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_sales_channel_detail_content_tabs %}{% endblock %}\";","module.exports = \"{% block sw_sales_channel_detail_base %}\\n    <div class=\\\"sw-sales-channel-detail-base\\\">\\n        {% block sw_sales_channel_detail_base_general %}\\n            <sw-card :title=\\\"$tc('sw-sales-channel.detail.titleGeneralSettings')\\\"\\n                     :isLoading=\\\"salesChannel.isLoading\\\"\\n                     key=\\\"edit\\\">\\n                <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                    {% block sw_sales_channel_detail_base_general_input_name %}\\n                        <sw-field type=\\\"text\\\"\\n                                  validation=\\\"required\\\"\\n                                  :label=\\\"$tc('sw-sales-channel.detail.labelInputName')\\\"\\n                                  v-model=\\\"salesChannel.name\\\">\\n                        </sw-field>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_base_general_input_active %}\\n                        <sw-field type=\\\"checkbox\\\"\\n                                  :label=\\\"$tc('sw-sales-channel.detail.labelInputActive')\\\"\\n                                  v-model=\\\"salesChannel.active\\\">\\n                        </sw-field>\\n                    {% endblock %}\\n\\n                    {% block sw_sales_channel_detail_base_general_input_tax_calculation %}\\n                        <sw-field type=\\\"select\\\"\\n                                  :label=\\\"$tc('sw-sales-channel.detail.labelInputTaxCalculation')\\\"\\n                                  v-model=\\\"salesChannel.taxCalculationType\\\">\\n                            <template slot=\\\"options\\\">\\n                                <option value=\\\"vertical\\\">{{ $tc('sw-sales-channel.detail.labelOptionTaxVertical') }}</option>\\n                                <option value=\\\"horizontal\\\">{{ $tc('sw-sales-channel.detail.labelOptionTaxHorizontal') }}</option>\\n                            </template>\\n                        </sw-field>\\n                    {% endblock %}\\n                </sw-container>\\n\\n                {% block sw_sales_channel_detail_base_general_input_payments_methods %}\\n                    <sw-multi-select id=\\\"paymentMethodIds\\\"\\n                                     :label=\\\"$tc('sw-sales-channel.detail.labelInputPaymentMethods')\\\"\\n                                     validation=\\\"required\\\"\\n                                     :serviceProvider=\\\"paymentMethodService\\\"\\n                                     :store=\\\"paymentMethodStore\\\"\\n                                     entityName=\\\"paymentMethod\\\"\\n                                     :defaultItemId=\\\"salesChannel.paymentMethodId\\\"\\n                                     v-model=\\\"salesChannel.paymentMethods\\\"\\n                                     @default_changed=\\\"changeDefaultPaymentMethod\\\">\\n                    </sw-multi-select>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_base_general_input_shipping_methods %}\\n                    <sw-multi-select id=\\\"shippingMethodIds\\\"\\n                                     :label=\\\"$tc('sw-sales-channel.detail.labelInputShippingMethods')\\\"\\n                                     validation=\\\"required\\\"\\n                                     :serviceProvider=\\\"shippingMethodService\\\"\\n                                     :store=\\\"shippingMethodStore\\\"\\n                                     entityName=\\\"shippingMethod\\\"\\n                                     :defaultItemId=\\\"salesChannel.shippingMethodId\\\"\\n                                     v-model=\\\"salesChannel.shippingMethods\\\"\\n                                     @default_changed=\\\"changeDefaultShippingMethod\\\">\\n                    </sw-multi-select>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_base_general_input_countries %}\\n                    <sw-multi-select id=\\\"countryIds\\\"\\n                                     :label=\\\"$tc('sw-sales-channel.detail.labelInputCountries')\\\"\\n                                     validation=\\\"required\\\"\\n                                     :serviceProvider=\\\"countryService\\\"\\n                                     :store=\\\"countryStore\\\"\\n                                     entityName=\\\"country\\\"\\n                                     :defaultItemId=\\\"salesChannel.countryId\\\"\\n                                     v-model=\\\"salesChannel.countries\\\"\\n                                     @default_changed=\\\"changeDefaultCountry\\\">\\n                    </sw-multi-select>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_base_general_input_currencies %}\\n                    <sw-multi-select id=\\\"currencyIds\\\"\\n                                     :label=\\\"$tc('sw-sales-channel.detail.labelInputCurrencies')\\\"\\n                                     validation=\\\"required\\\"\\n                                     :serviceProvider=\\\"currencyService\\\"\\n                                     :store=\\\"currencyStore\\\"\\n                                     entityName=\\\"currency\\\"\\n                                     :defaultItemId=\\\"salesChannel.currencyId\\\"\\n                                     v-model=\\\"salesChannel.currencies\\\"\\n                                     @default_changed=\\\"changeDefaultCurrency\\\">\\n                    </sw-multi-select>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_base_general_input_languages %}\\n                    <sw-multi-select id=\\\"languageIds\\\"\\n                                     :label=\\\"$tc('sw-sales-channel.detail.labelInputLanguages')\\\"\\n                                     validation=\\\"required\\\"\\n                                     :serviceProvider=\\\"languageService\\\"\\n                                     :store=\\\"languageStore\\\"\\n                                     entityName=\\\"language\\\"\\n                                     :defaultItemId=\\\"salesChannel.languageId\\\"\\n                                     v-model=\\\"salesChannel.languages\\\"\\n                                     @default_changed=\\\"changeDefaultLanguage\\\">\\n                    </sw-multi-select>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_base_general_input_catalogs %}\\n                    <sw-multi-select id=\\\"catalogIds\\\"\\n                                     :label=\\\"$tc('sw-sales-channel.detail.labelInputCatalogs')\\\"\\n                                     :serviceProvider=\\\"catalogService\\\"\\n                                     :store=\\\"catalogStore\\\"\\n                                     entityName=\\\"catalog\\\"\\n                                     v-model=\\\"salesChannel.catalogs\\\">\\n                    </sw-multi-select>\\n                {% endblock %}\\n            </sw-card>\\n        {% endblock %}\\n\\n        {% block sw_sales_channel_detail_base_options %}\\n            <sw-card :title=\\\"$tc('sw-sales-channel.detail.titleOptionsCard')\\\">\\n                {% block sw_sales_channel_detail_base_options_api %}\\n                    <sw-container grid=\\\"1fr auto\\\" gap=\\\"30px\\\">\\n                        {% block sw_sales_channel_detail_base_options_input_access_key %}\\n                        <sw-field :label=\\\"$tc('sw-sales-channel.detail.labelAccessKeyField')\\\"\\n                                  :disabled=\\\"true\\\"\\n                                  v-model=\\\"salesChannel.accessKey\\\"\\n                                  :copyAble=\\\"true\\\">\\n                        </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_detail_base_options_input_generate_key %}\\n                        <div class=\\\"sw-sales-channel-detail__action-button\\\">\\n                            <sw-button @click=\\\"onGenerateKeys\\\"\\n                                       class=\\\"sw-sales-channel-detail-base__button-generate-keys\\\">\\n                                <sw-icon name=\\\"small-arrow-360-right\\\" size=\\\"18\\\"></sw-icon>\\n                                {{ $tc('sw-sales-channel.detail.buttonCreateNewApiKeys') }}\\n                            </sw-button>\\n                        </div>\\n                        {% endblock %}\\n                    </sw-container>\\n                {% endblock %}\\n\\n                {% block sw_sales_channel_detail_base_options_delete %}\\n                    <div class=\\\"sw-sales-channel-detail-base__delete\\\">\\n                        {% block sw_sales_channel_detail_base_options_delete_info %}\\n                            <sw-alert variant=\\\"error\\\" >\\n                                {{ $tc('sw-sales-channel.detail.textDeleteInfo') }}\\n                            </sw-alert>\\n                        {% endblock %}\\n\\n                        {% block sw_sales_channel_detail_base_options_delete_button %}\\n                            <div class=\\\"sw-sales-channel-detail-base__button-delete\\\">\\n                                <sw-button variant=\\\"danger\\\"\\n                                           @click=\\\"showDeleteModal = true\\\">\\n                                    {{ $tc('sw-sales-channel.detail.buttonDelete') }}\\n                                </sw-button>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n\\n                    {% block sw_sales_channel_detail_base_options_delete_modal %}\\n                        <sw-modal v-if=\\\"showDeleteModal\\\"\\n                                  ref=\\\"modal\\\"\\n                                  :title=\\\"$tc('sw-sales-channel.detail.deleteModalTitle')\\\"\\n                                  @closeModal=\\\"onCloseDeleteModal\\\">\\n                            {% block sw_sales_channel_detail_options_delete_modal_confirmtext %}\\n                                {{ $tc('sw-sales-channel.detail.textConfirmDelete') }}\\n                                {{ salesChannel.name }}\\n                            {% endblock %}\\n\\n                            {% block sw_sales_channel_detail_options_delete_modal_footer %}\\n                                <template slot=\\\"modal-footer\\\">\\n                                    <sw-button size=\\\"small\\\" @click=\\\"onCloseDeleteModal\\\">\\n                                        {{ $tc('sw-sales-channel.detail.buttonCloseDeleteModal') }}\\n                                    </sw-button>\\n                                    <sw-button size=\\\"small\\\"\\n                                               variant=\\\"primary\\\"\\n                                               @click=\\\"onConfirmDelete\\\">\\n                                        {{ $tc('sw-sales-channel.detail.buttonConfirmDelete') }}\\n                                    </sw-button>\\n                                </template>\\n                            {% endblock %}\\n                        </sw-modal>\\n                    {% endblock %}\\n                {% endblock %}\\n\\n            </sw-card>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_sales_channel_detail_base_options_delete %}{% endblock %}\";","module.exports = \"{% block sw_settings_item %}\\n    <router-link :to=\\\"to\\\" class=\\\"sw-settings-item\\\" :class=\\\"classes\\\">\\n        {% block sw_settings_item_icon %}\\n            <div class=\\\"sw-settings-item__icon\\\">\\n                <slot name=\\\"icon\\\"></slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_settings_item_label %}\\n            <div class=\\\"sw-settings-item__label\\\">\\n                <slot name=\\\"label\\\">{{ label }}</slot>\\n            </div>\\n        {% endblock %}\\n    </router-link>\\n{% endblock %}\";","module.exports = \"{% block sw_settings %}\\n    <sw-page class=\\\"sw-settings-index\\\">\\n\\n        {% block sw_settings_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2>{{ $tc('sw-settings.index.title') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n                {% block sw_settings_content_card %}\\n                    <sw-card class=\\\"sw-settings__card\\\">\\n                        <slot>{% block sw_settings_content_card_slot_default %}{% endblock %}</slot>\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    {% block sw_settings_currency_item %}\\n        <sw-settings-item :label=\\\"$tc('sw-settings-currency.general.mainMenuItemGeneral')\\\" :to=\\\"{ name: 'sw.settings.currency.index' }\\\">\\n            <template slot=\\\"icon\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                    <defs>\\n                        <circle id=\\\"currency-b\\\" cx=\\\"58\\\" cy=\\\"52\\\" r=\\\"11\\\"/>\\n                        <filter id=\\\"currency-a\\\" width=\\\"127.3%\\\" height=\\\"127.3%\\\" x=\\\"-18.2%\\\" y=\\\"-9.1%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"1\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                        </filter>\\n                        <circle id=\\\"currency-d\\\" cx=\\\"10\\\" cy=\\\"10\\\" r=\\\"9.167\\\"/>\\n                        <filter id=\\\"currency-c\\\" width=\\\"132.7%\\\" height=\\\"132.7%\\\" x=\\\"-21.8%\\\" y=\\\"-10.9%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"1\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                        </filter>\\n                    </defs>\\n                    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M9,50.938241 C9,74.3721574 36.5043038,54.8438938 48.7284389,66.5608519 C60.9525739,78.2778101 82.3448102,64.6080256 74.1953869,50.938241 C66.0459635,37.2684565 60.9525739,16.7637797 44.6537272,28.4807379 C28.3548805,40.1976961 9,27.5043247 9,50.938241 Z\\\"/>\\n                        <g fill-rule=\\\"nonzero\\\" transform=\\\"translate(18 27)\\\">\\n                            <rect width=\\\"42\\\" height=\\\"24\\\" x=\\\"1\\\" y=\\\"1\\\" fill=\\\"#FFF\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"4\\\"/>\\n                            <circle cx=\\\"22\\\" cy=\\\"13\\\" r=\\\"7\\\" fill=\\\"#D8DDE6\\\"/>\\n                            <rect width=\\\"5\\\" height=\\\"5\\\" x=\\\"34\\\" y=\\\"5\\\" fill=\\\"#D8DDE6\\\" rx=\\\"2.5\\\"/>\\n                            <rect width=\\\"5\\\" height=\\\"5\\\" x=\\\"5\\\" y=\\\"16\\\" fill=\\\"#D8DDE6\\\" rx=\\\"2.5\\\"/>\\n                        </g>\\n                        <g fill-rule=\\\"nonzero\\\">\\n                            <use fill=\\\"#000\\\" filter=\\\"url(#currency-a)\\\" xlink:href=\\\"#currency-b\\\"/>\\n                            <use fill=\\\"#189EFF\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#currency-b\\\"/>\\n                        </g>\\n                        <path fill=\\\"#FFF\\\" d=\\\"M58.9288739,57.192 C58.4382048,57.192 57.9795427,57.1093342 57.5528739,56.944 C57.1262051,56.7786658 56.7448756,56.5360016 56.4088739,56.216 C56.0728722,55.8959984 55.7875417,55.498669 55.5528739,55.024 C55.3182061,54.549331 55.1475411,54.008003 55.0408739,53.4 L54.0328739,53.4 L54.0328739,52.504 L54.9448739,52.44 C54.9342072,52.3546662 54.9288739,52.2720004 54.9288739,52.192 L54.9288739,51.704 C54.9288739,51.629333 54.9342072,51.554667 54.9448739,51.48 L54.0328739,51.48 L54.0328739,50.584 L55.0408739,50.52 C55.1475411,49.9013302 55.3208727,49.3520024 55.5608739,48.872 C55.8008751,48.3919976 56.0968721,47.9866683 56.4488739,47.656 C56.8008757,47.3253317 57.2008717,47.0720009 57.6488739,46.896 C58.0968761,46.7199991 58.5875379,46.632 59.1208739,46.632 C59.6008763,46.632 60.0595384,46.7439989 60.4968739,46.968 C60.9342094,47.1920011 61.307539,47.4959981 61.6168739,47.88 L60.5768739,48.888 C60.3635395,48.6426654 60.1368751,48.4453341 59.8968739,48.296 C59.6568727,48.1466659 59.3822088,48.072 59.0728739,48.072 C58.496871,48.072 58.0222091,48.2853312 57.6488739,48.712 C57.2755387,49.1386688 57.0248745,49.7359962 56.8968739,50.504 L60.6408739,50.504 L60.6408739,51.48 L56.8008739,51.48 C56.7902072,51.5440003 56.7848739,51.6079997 56.7848739,51.672 L56.7848739,52.16 C56.7848739,52.2506671 56.7902072,52.3386662 56.8008739,52.424 L60.0008739,52.424 L60.0008739,53.4 L56.9128739,53.4 C57.062208,54.1466704 57.3182054,54.7253313 57.6808739,55.136 C58.0435424,55.5466687 58.4968712,55.752 59.0408739,55.752 C59.3822089,55.752 59.6862059,55.6666675 59.9528739,55.496 C60.2195419,55.3253325 60.4755393,55.0746683 60.7208739,54.744 L61.7608739,55.704 C61.3875387,56.1840024 60.9688762,56.5519987 60.5048739,56.808 C60.0408716,57.0640013 59.5155435,57.192 58.9288739,57.192 Z\\\"/>\\n                        <path stroke=\\\"#303A4F\\\" stroke-linecap=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M35,24 L61,24 C63.209139,24 65,25.790861 65,28 L65,39\\\"/>\\n                        <g transform=\\\"translate(12 17)\\\">\\n                            <g fill-rule=\\\"nonzero\\\">\\n                                <use fill=\\\"#000\\\" filter=\\\"url(#currency-c)\\\" xlink:href=\\\"#currency-d\\\"/>\\n                                <use fill=\\\"#57D9A3\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#currency-d\\\"/>\\n                            </g>\\n                            <path fill=\\\"#FFF\\\" d=\\\"M9.3766554,15.32 L9.3766554,14.12 C9.00865356,14.0799998 8.63865726,13.9820008 8.2666554,13.826 C7.89465354,13.6699992 7.57265676,13.4640013 7.3006554,13.208 L7.9246554,12.272 C8.2046568,12.4960011 8.48865396,12.6759993 8.7766554,12.812 C9.06465684,12.9480007 9.37265376,13.016 9.7006554,13.016 C10.0926574,13.016 10.3846544,12.9260009 10.5766554,12.746 C10.7686564,12.5659991 10.8646554,12.3120016 10.8646554,11.984 C10.8646554,11.7199987 10.7846562,11.5000009 10.6246554,11.324 C10.4646546,11.1479991 10.2626566,10.9880007 10.0186554,10.844 C9.77465418,10.6999993 9.5126568,10.5620007 9.2326554,10.43 C8.952654,10.2979993 8.69065662,10.1420009 8.4466554,9.962 C8.20265418,9.7819991 8.0006562,9.56600126 7.8406554,9.314 C7.6806546,9.06199874 7.6006554,8.74800188 7.6006554,8.372 C7.6006554,7.8119972 7.7606538,7.34600186 8.0806554,6.974 C8.400657,6.60199814 8.83265268,6.36800048 9.3766554,6.272 L9.3766554,5.048 L10.3366554,5.048 L10.3366554,6.248 C10.7206573,6.29600024 11.050654,6.40599914 11.3266554,6.578 C11.6026568,6.75000086 11.8526543,6.95199884 12.0766554,7.184 L11.3686554,7.988 C11.1446543,7.77999896 10.9286564,7.62200054 10.7206554,7.514 C10.5126544,7.40599946 10.2646568,7.352 9.9766554,7.352 C9.64865376,7.352 9.39265632,7.43399918 9.2086554,7.598 C9.02465448,7.76200082 8.9326554,7.99999844 8.9326554,8.312 C8.9326554,8.5520012 9.0126546,8.74999922 9.1726554,8.906 C9.3326562,9.06200078 9.53465418,9.20599934 9.7786554,9.338 C10.0226566,9.47000066 10.284654,9.60199934 10.5646554,9.734 C10.8446568,9.86600066 11.1066542,10.0239991 11.3506554,10.208 C11.5946566,10.3920009 11.7966546,10.6179987 11.9566554,10.886 C12.1166562,11.1540013 12.1966554,11.487998 12.1966554,11.888 C12.1966554,12.4640029 12.036657,12.9459981 11.7166554,13.334 C11.3966538,13.7220019 10.9366584,13.9719994 10.3366554,14.084 L10.3366554,15.32 L9.3766554,15.32 Z\\\"/>\\n                        </g>\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M52,29 L48,29 C48.5522847,29 49,28.5522847 49,28 C49,27.4477153 48.5522847,27 48,27 L52,27 C51.4477153,27 51,27.4477153 51,28 C51,28.5522847 51.4477153,29 52,29 Z\\\"/>\\n                        <path fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M44,25 L40,25 C40.5522847,25 41,24.5522847 41,24 C41,23.4477153 40.5522847,23 40,23 L44,23 C43.4477153,23 43,23.4477153 43,24 C43,24.5522847 43.4477153,25 44,25 Z\\\"/>\\n                    </g>\\n                </svg>\\n            </template>\\n        </sw-settings-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_list %}\\n    {% block sw_settings_currency_index %}\\n        <sw-page class=\\\"sw-settings-currency-list\\\">\\n\\n            {% block sw_settings_currency_list_search_bar_type %}\\n                <template slot=\\\"search-bar-type\\\">\\n                    {{ $tc('sw-settings-currency.list.textHeadline') }}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_currency_list_smart_bar_header %}\\n                <template slot=\\\"smart-bar-header\\\">\\n                    {% block sw_settings_currency_list_smart_bar_header_title %}\\n                        <h2>\\n                            {% block sw_settings_currency_list_smart_bar_header_title_text %}\\n                                {{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon> {{ $tc('sw-settings-currency.list.textHeadline') }}\\n                            {% endblock %}\\n\\n                            {% block sw_settings_currency_list_smart_bar_header_amount %}\\n                                <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                    ({{ total }})\\n                                </span>\\n                            {% endblock %}\\n                        </h2>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_currency_list_smart_bar_actions %}\\n                <template slot=\\\"smart-bar-actions\\\">\\n                    {% block sw_settings_currency_list_smart_bar_actions_add %}\\n                        <sw-button :routerLink=\\\"{ name: 'sw.settings.currency.create' }\\\" variant=\\\"primary\\\">\\n                            {{ $tc('sw-settings-currency.list.buttonAddCurrency') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_currency_list_content %}\\n                <sw-card-view slot=\\\"content\\\">\\n                    {% block sw_settings_currency_list_content_card %}\\n                        <sw-card :isLoading=\\\"isLoading\\\">\\n                            {% block sw_settings_currency_list_grid %}\\n                                <sw-grid slot=\\\"grid\\\"\\n                                         class=\\\"sw-settings-currency-list-grid\\\"\\n                                         :selectable=\\\"false\\\"\\n                                         :items=\\\"items\\\"\\n                                         @inline-edit-finish=\\\"onInlineEditSave\\\"\\n                                         table>\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                        {% block sw_product_list_grid_columns %}\\n\\n                                            {% block sw_settings_currency_list_columns_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-currency.list.columnName')\\\">\\n\\n                                                    {% block sw_settings_currency_list_columns_name_link %}\\n                                                        <router-link :title=\\\"$tc('sw-settings-currency.list.contextMenuEdit')\\\"\\n                                                                     :to=\\\"{ name: 'sw.settings.currency.detail', params: { id: item.id } }\\\">\\n                                                            {% block sw_settings_currency_list_columns_name_link %}\\n                                                                {{ item.name }}\\n                                                            {% endblock %}\\n                                                        </router-link>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_currency_list_grid_columns_name_editor %}\\n                                                        <sw-field type=\\\"text\\\" v-model=\\\"item.name\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_currency_list_columns_short_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-currency.list.columnShortName')\\\">\\n                                                    {% block sw_settings_currency_list_columns_short_name_label %}\\n                                                        {{ item.shortName }}\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_currency_list_grid_columns_shortname_editor %}\\n                                                        <sw-field type=\\\"text\\\" v-model=\\\"item.shortName\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_currency_list_columns_symbol %}\\n                                                <sw-grid-column flex=\\\"minmax(80px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-currency.list.columnSymbol')\\\">\\n                                                    {% block sw_settings_currency_list_columns_symbol_label %}\\n                                                        {{ item.symbol }}\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_currency_list_grid_columns_symbol_editor %}\\n                                                        <sw-field type=\\\"text\\\" v-model=\\\"item.symbol\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_currency_list_columns_factor %}\\n                                                <sw-grid-column flex=\\\"minmax(80px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-currency.list.columnFactor')\\\">\\n                                                    {% block sw_settings_currency_list_columns_factor_label %}\\n                                                        {{ item.factor }}\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_currency_list_grid_columns_factor_editor %}\\n                                                        <sw-field type=\\\"number\\\" v-model=\\\"item.factor\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_currency_list_columns_actions %}\\n                                                <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                label=\\\"\\\">\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_settings_currency_list_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.settings.currency.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-settings-currency.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_settings_currency_list_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDelete(item.id)\\\">\\n                                                                {{ $tc('sw-settings-currency.list.buttonDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_currency_list_delete_modal %}\\n                                                <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                          @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                          :title=\\\"$tc('sw-settings-currency.list.modalTitleDelete')\\\"\\n                                                          variant=\\\"small\\\">\\n                                                    {% block sw_settings_currency_list_delete_modal_confirm_text %}\\n                                                        <p>\\n                                                            {{ $tc('sw-settings-currency.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                        </p>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_currency_list_delete_modal_footer %}\\n                                                        <template slot=\\\"modal-footer\\\">\\n                                                            {% block sw_settings_currency_list_delete_modal_actions_cancel %}\\n                                                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-currency.list.buttonCancel') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_settings_currency_list_delete_modal_actions_delete %}\\n                                                                <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                           variant=\\\"primary\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-currency.list.buttonDelete') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-modal>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    {% block sw_settings_currency_list_grid_pagination %}\\n                                        <sw-pagination slot=\\\"pagination\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </sw-grid>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            {% endblock %}\\n        </sw-page>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_currency_detail %}\\n    <sw-page class=\\\"sw-settings-currency-detail\\\">\\n\\n        {% block sw_settings_currency_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"currency.name\\\">{{ currency.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-settings-currency.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_currency_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_settings_currency_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"currency.isLoading\\\" :routerLink=\\\"{ name: 'sw.settings.currency.index' }\\\">\\n                        {{ $tc('sw-settings-currency.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_settings_currency_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"currency.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-settings-currency.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_currency_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_settings_currency_detail_content_card %}\\n                    <sw-card :title=\\\"$tc('sw-settings-currency.detail.titleCard')\\\">\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                            {% block sw_settings_currency_detail_content_field_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-settings-currency.detail.labelName')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-currency.detail.placeholderName')\\\"\\n                                          v-model=\\\"currency.name\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_currency_detail_content_field_short_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-settings-currency.detail.labelShortName')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-currency.detail.placeholderShortName')\\\"\\n                                          v-model=\\\"currency.shortName\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_currency_detail_content_field_symbol %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-settings-currency.detail.labelSymbol')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-currency.detail.placeholderSymbol')\\\"\\n                                          v-model=\\\"currency.symbol\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_currency_detail_content_field_factor %}\\n                                <sw-field type=\\\"number\\\"\\n                                          :label=\\\"$tc('sw-settings-currency.detail.labelFactor')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-currency.detail.placeholderFactor')\\\"\\n                                          v-model=\\\"currency.factor\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    {% block sw_settings_country_item %}\\n        <sw-settings-item :label=\\\"$tc('sw-settings-country.general.mainMenuItemGeneral')\\\" :to=\\\"{ name: 'sw.settings.country.index' }\\\">\\n            <template slot=\\\"icon\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                    <defs>\\n                        <path id=\\\"countrys-b\\\" d=\\\"M12,36 C20,24.418278 24,16.418278 24,12 C24,5.372583 18.627417,0 12,0 C5.372583,0 0,5.372583 0,12 C0,16.418278 4,24.418278 12,36 Z\\\"/>\\n                        <filter id=\\\"countrys-a\\\" width=\\\"133.3%\\\" height=\\\"122.2%\\\" x=\\\"-20.8%\\\" y=\\\"-8.3%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"2\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                        </filter>\\n                        <path id=\\\"countrys-d\\\" d=\\\"M6,18 C10,12.209139 12,8.209139 12,6 C12,2.6862915 9.3137085,0 6,0 C2.6862915,0 0,2.6862915 0,6 C0,8.209139 2,12.209139 6,18 Z\\\"/>\\n                        <filter id=\\\"countrys-c\\\" width=\\\"166.7%\\\" height=\\\"144.4%\\\" x=\\\"-41.7%\\\" y=\\\"-16.7%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"2\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.2 0\\\"/>\\n                        </filter>\\n                    </defs>\\n                    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M4.40244005,44.1121929 C4.40244005,75.0306785 35.3571644,49.2652738 49.1148197,64.7245166 C62.872475,80.1837594 86.9483717,62.1479761 77.7766015,44.1121929 C68.6048313,26.0764096 62.872475,-0.977265233 44.5289346,14.4819776 C26.1853942,29.9412203 4.40244005,13.1937073 4.40244005,44.1121929 Z\\\" transform=\\\"rotate(25 42.105 40.236)\\\"/>\\n                        <g fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" transform=\\\"translate(12 12)\\\">\\n                            <circle cx=\\\"28\\\" cy=\\\"28\\\" r=\\\"27\\\" fill=\\\"#FFF\\\"/>\\n                            <ellipse cx=\\\"28\\\" cy=\\\"28\\\" rx=\\\"10\\\" ry=\\\"27\\\"/>\\n                            <path d=\\\"M5,43 C9.90666667,39.6666667 17.5733333,38 28,38 C38.4266667,38 46.0933333,39.6666667 51,43\\\"/>\\n                            <path d=\\\"M5,18 C9.90666667,14.6666667 17.5733333,13 28,13 C38.4266667,13 46.0933333,14.6666667 51,18\\\" transform=\\\"matrix(1 0 0 -1 0 31)\\\"/>\\n                            <path d=\\\"M15,52 C17.7733333,50 22.1066667,49 28,49 C33.8933333,49 38.2266667,50 41,52\\\"/>\\n                            <path d=\\\"M15,7 C17.7733333,5 22.1066667,4 28,4 C33.8933333,4 38.2266667,5 41,7\\\" transform=\\\"matrix(1 0 0 -1 0 11)\\\"/>\\n                            <path stroke-linecap=\\\"square\\\" d=\\\"M1.49090909,28 L54.5090909,28\\\"/>\\n                        </g>\\n                        <g fill-rule=\\\"nonzero\\\" transform=\\\"translate(47 34)\\\">\\n                            <g stroke-linejoin=\\\"round\\\">\\n                                <use fill=\\\"#000\\\" filter=\\\"url(#countrys-a)\\\" xlink:href=\\\"#countrys-b\\\"/>\\n                                <path fill=\\\"#189EFF\\\" fill-rule=\\\"evenodd\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" d=\\\"M11.177206,36.5683397 C3.05919629,24.8157733 -1,16.6973807 -1,12 C-1,4.82029825 4.82029825,-1 12,-1 C19.1797017,-1 25,4.82029825 25,12 C25,16.6973807 20.9408037,24.8157733 12.822794,36.5683397 L12,37.7595111 L11.177206,36.5683397 Z\\\"/>\\n                            </g>\\n                            <circle cx=\\\"12\\\" cy=\\\"12\\\" r=\\\"4.5\\\" fill=\\\"#FFF\\\"/>\\n                        </g>\\n                        <g fill-rule=\\\"nonzero\\\" transform=\\\"translate(15 13)\\\">\\n                            <g stroke-linejoin=\\\"round\\\">\\n                                <use fill=\\\"#000\\\" filter=\\\"url(#countrys-c)\\\" xlink:href=\\\"#countrys-d\\\"/>\\n                                <path fill=\\\"#57D9A3\\\" fill-rule=\\\"evenodd\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" d=\\\"M5.17720598,18.5683397 C1.05919629,12.6066343 -1,8.48824168 -1,6 C-1,2.13400675 2.13400675,-1 6,-1 C9.86599325,-1 13,2.13400675 13,6 C13,8.48824168 10.9408037,12.6066343 6.82279402,18.5683397 L6,19.7595111 L5.17720598,18.5683397 Z\\\"/>\\n                            </g>\\n                            <circle cx=\\\"6\\\" cy=\\\"6\\\" r=\\\"2.25\\\" fill=\\\"#FFF\\\"/>\\n                        </g>\\n                    </g>\\n                </svg>\\n            </template>\\n        </sw-settings-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_list %}\\n    {% block sw_settings_country_index %}\\n        <sw-page class=\\\"sw-settings-country-list\\\">\\n\\n            {% block sw_settings_country_list_search_bar_type %}\\n                <template slot=\\\"search-bar-type\\\">\\n                    {{ $tc('sw-settings-country.list.textHeadline') }}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_country_list_smart_bar_header %}\\n                <template slot=\\\"smart-bar-header\\\">\\n                    {% block sw_settings_country_list_smart_bar_header_title %}\\n                        <h2>\\n                            {% block sw_settings_country_list_smart_bar_header_title_text %}\\n                                {{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon> {{ $tc('sw-settings-country.list.textHeadline') }}\\n                            {% endblock %}\\n\\n                            {% block sw_settings_country_list_smart_bar_header_amount %}\\n                                <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                    ({{ total }})\\n                                </span>\\n                            {% endblock %}\\n                        </h2>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_country_list_smart_bar_actions %}\\n                <template slot=\\\"smart-bar-actions\\\">\\n                    {% block sw_settings_country_list_smart_bar_actions_add %}\\n                        <sw-button :routerLink=\\\"{ name: 'sw.settings.country.create' }\\\" variant=\\\"primary\\\">\\n                            {{ $tc('sw-settings-country.list.buttonAddCountry') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_country_list_content %}\\n                <sw-card-view slot=\\\"content\\\">\\n                    {% block sw_settings_country_list_content_card %}\\n                        <sw-card :isLoading=\\\"isLoading\\\">\\n                            {% block sw_settings_country_list_grid %}\\n                                <sw-grid slot=\\\"grid\\\"\\n                                         class=\\\"sw-settings-country-list-grid\\\"\\n                                         :selectable=\\\"false\\\"\\n                                         :items=\\\"items\\\"\\n                                         @inline-edit-finish=\\\"onInlineEditSave\\\"\\n                                         table>\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                        {% block sw_product_list_grid_columns %}\\n\\n                                            {% block sw_settings_country_list_columns_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 2fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-country.list.columnName')\\\">\\n                                                    {% block sw_settings_country_list_columns_name_link %}\\n                                                        <router-link :title=\\\"$tc('sw-settings-country.list.contextMenuEdit')\\\"\\n                                                                     :to=\\\"{ name: 'sw.settings.country.detail', params: { id: item.id } }\\\">\\n                                                            {% block sw_settings_country_list_columns_name_link %}\\n                                                                {{ item.name }}\\n                                                            {% endblock %}\\n                                                        </router-link>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_country_list_columns_name_editor %}\\n                                                        <sw-field type=\\\"text\\\" v-model=\\\"item.name\\\" slot=\\\"inline-edit\\\"></sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_country_list_columns_active %}\\n                                                <sw-grid-column flex=\\\"minmax(100px, 1fr)\\\"\\n                                                                editable\\n                                                                align=\\\"center\\\"\\n                                                                :label=\\\"$tc('sw-settings-country.list.columnActive')\\\">\\n                                                    {% block sw_settings_country_list_columns_active_label %}\\n                                                        <sw-icon name=\\\"small-default-checkmark-line-medium\\\" small v-if=\\\"item.active\\\" class=\\\"is--active\\\"></sw-icon>\\n                                                        <sw-icon name=\\\"small-default-x-line-medium\\\" small v-else class=\\\"is--inactive\\\"></sw-icon>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_country_list_columns_active_editor %}\\n                                                        <sw-field type=\\\"checkbox\\\"\\n                                                                  v-model=\\\"item.active\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_country_list_columns_actions %}\\n                                                <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                label=\\\"\\\">\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_settings_country_list_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.settings.country.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-settings-country.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_settings_country_list_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDelete(item.id)\\\">\\n                                                                {{ $tc('sw-settings-country.list.buttonDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_country_list_delete_modal %}\\n                                                <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                          @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                          :title=\\\"$tc('sw-settings-country.list.modalTitleDelete')\\\"\\n                                                          variant=\\\"small\\\">\\n                                                    {% block sw_settings_country_list_delete_modal_confirm_text %}\\n                                                        <p>\\n                                                            {{ $tc('sw-settings-country.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                        </p>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_country_list_delete_modal_footer %}\\n                                                        <template slot=\\\"modal-footer\\\">\\n                                                            {% block sw_settings_country_list_delete_modal_actions_cancel %}\\n                                                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-country.list.buttonCancel') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_settings_country_list_delete_modal_actions_delete %}\\n                                                                <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                           variant=\\\"primary\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-country.list.buttonDelete') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-modal>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    {% block sw_settings_country_list_grid_pagination %}\\n                                        <sw-pagination slot=\\\"pagination\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </sw-grid>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            {% endblock %}\\n        </sw-page>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_country_detail %}\\n    <sw-page class=\\\"sw-settings-country-detail\\\">\\n\\n        {% block sw_settings_country_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"country.name\\\">{{ country.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-settings-country.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_country_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_settings_country_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"country.isLoading\\\" :routerLink=\\\"{ name: 'sw.settings.country.index' }\\\">\\n                        {{ $tc('sw-settings-country.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_settings_country_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"country.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-settings-country.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_country_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_settings_country_detail_content_card %}\\n                    <sw-card :title=\\\"$tc('sw-settings-country.detail.titleCard')\\\">\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                            {% block sw_settings_country_detail_content_field_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-settings-country.detail.labelName')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-country.detail.placeholderName')\\\"\\n                                          v-model=\\\"country.name\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            <sw-field type=\\\"checkbox\\\"\\n                                      :label=\\\"$tc('sw-settings-country.detail.labelActive')\\\"\\n                                      v-model=\\\"country.active\\\">\\n                            </sw-field>\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    {% block sw_settings_tax_item %}\\n        <sw-settings-item :label=\\\"$tc('sw-settings-tax.general.mainMenuItemGeneral')\\\" :to=\\\"{ name: 'sw.settings.tax.index' }\\\">\\n            <template slot=\\\"icon\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                        <path fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M49,68 L45,68 C45.5522847,68 46,67.5522847 46,67 C46,66.4477153 45.5522847,66 45,66 L49,66 C48.4477153,66 48,66.4477153 48,67 C48,67.5522847 48.4477153,68 49,68 Z\\\"/>\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M2.29232721,42.3132852 C2.29232721,73.2317708 33.2470516,47.4663662 47.0047069,62.9256089 C60.7623621,78.3848517 84.8382589,60.3490685 75.6664887,42.3132852 C66.4947185,24.277502 60.7623621,-2.77617288 42.4188218,12.6830699 C24.0752814,28.1423127 2.29232721,11.3947997 2.29232721,42.3132852 Z\\\" transform=\\\"rotate(25 39.995 38.437)\\\"/>\\n                        <rect width=\\\"4\\\" height=\\\"54\\\" x=\\\"64\\\" y=\\\"13\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"4\\\" height=\\\"54\\\" x=\\\"12\\\" y=\\\"13\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"58\\\" height=\\\"7\\\" x=\\\"11\\\" y=\\\"60\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"50\\\" height=\\\"2\\\" x=\\\"15\\\" y=\\\"34\\\" fill=\\\"#303A4F\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"50\\\" height=\\\"2\\\" x=\\\"15\\\" y=\\\"20\\\" fill=\\\"#303A4F\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"50\\\" height=\\\"2\\\" x=\\\"15\\\" y=\\\"49\\\" fill=\\\"#303A4F\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <ellipse cx=\\\"57\\\" cy=\\\"35\\\" fill=\\\"#37D046\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"57\\\" cy=\\\"50\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"50\\\" cy=\\\"35\\\" fill=\\\"#37D046\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"57\\\" cy=\\\"21\\\" fill=\\\"#189EFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"38\\\" cy=\\\"50\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"43\\\" cy=\\\"35\\\" fill=\\\"#37D046\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"50\\\" cy=\\\"21\\\" fill=\\\"#189EFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"31\\\" cy=\\\"21\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"31\\\" cy=\\\"50\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"24\\\" cy=\\\"35\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"24\\\" cy=\\\"21\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <ellipse cx=\\\"24\\\" cy=\\\"50\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" rx=\\\"3\\\" ry=\\\"4\\\"/>\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M57,61 L53,61 C53.5522847,61 54,60.5522847 54,60 C54,59.4477153 53.5522847,59 53,59 L57,59 C56.4477153,59 56,59.4477153 56,60 C56,60.5522847 56.4477153,61 57,61 Z\\\"/>\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M70,31 L66,31 C66.5522847,31 67,30.5522847 67,30 C67,29.4477153 66.5522847,29 66,29 L70,29 C69.4477153,29 69,29.4477153 69,30 C69,30.5522847 69.4477153,31 70,31 Z\\\" transform=\\\"rotate(90 68 30)\\\"/>\\n                        <path fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M14,54 L10,54 C10.5522847,54 11,53.5522847 11,53 C11,52.4477153 10.5522847,52 10,52 L14,52 C13.4477153,52 13,52.4477153 13,53 C13,53.5522847 13.4477153,54 14,54 Z\\\" transform=\\\"rotate(90 12 53)\\\"/>\\n                    </g>\\n                </svg>\\n            </template>\\n        </sw-settings-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_list %}\\n    {% block sw_settings_tax_index %}\\n        <sw-page class=\\\"sw-settings-tax-list\\\">\\n\\n            {% block sw_settings_tax_list_search_bar_type %}\\n                <template slot=\\\"search-bar-type\\\">\\n                    {{ $tc('sw-settings-tax.list.textHeadline') }}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_tax_list_smart_bar_header %}\\n                <template slot=\\\"smart-bar-header\\\">\\n                    {% block sw_settings_tax_list_smart_bar_header_title %}\\n                        <h2>\\n                            {% block sw_settings_tax_list_smart_bar_header_title_text %}\\n                                {{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon> {{ $tc('sw-settings-tax.list.textHeadline') }}\\n                            {% endblock %}\\n\\n                            {% block sw_settings_tax_list_smart_bar_header_amount %}\\n                                <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                    ({{ total }})\\n                                </span>\\n                            {% endblock %}\\n                        </h2>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_tax_list_smart_bar_actions %}\\n                <template slot=\\\"smart-bar-actions\\\">\\n                    {% block sw_settings_tax_list_smart_bar_actions_add %}\\n                        <sw-button :routerLink=\\\"{ name: 'sw.settings.tax.create' }\\\" variant=\\\"primary\\\">\\n                            {{ $tc('sw-settings-tax.list.buttonAddTax') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_tax_list_content %}\\n                <sw-card-view slot=\\\"content\\\">\\n                    {% block sw_settings_tax_list_content_card %}\\n                        <sw-card :isLoading=\\\"isLoading\\\">\\n                            {% block sw_settings_tax_list_grid %}\\n                                <sw-grid slot=\\\"grid\\\"\\n                                         class=\\\"sw-settings-tax-list-grid\\\"\\n                                         :selectable=\\\"false\\\"\\n                                         :items=\\\"items\\\"\\n                                         @inline-edit-finish=\\\"onInlineEditSave\\\"\\n                                         table>\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                        {% block sw_product_list_grid_columns %}\\n\\n                                            {% block sw_settings_tax_list_columns_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-tax.list.columnName')\\\">\\n\\n                                                    {% block sw_settings_tax_list_columns_name_link %}\\n                                                        <router-link :title=\\\"$tc('sw-settings-tax.list.contextMenuEdit')\\\"\\n                                                                     :to=\\\"{ name: 'sw.settings.tax.detail', params: { id: item.id } }\\\">\\n                                                            {% block sw_settings_tax_list_columns_name_link %}\\n                                                                {{ item.name }}\\n                                                            {% endblock %}\\n                                                        </router-link>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_tax_list_columns_name_editor %}\\n                                                        <sw-field type=\\\"text\\\"\\n                                                                  v-model=\\\"item.name\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_tax_list_columns_tax_rate %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-tax.list.columnTaxRate')\\\">\\n                                                    {% block sw_settings_tax_list_columns_short_tax_rate_label %}\\n                                                        {{ item.taxRate }} <span v-html=\\\"$tc('sw-settings-tax.general.taxRateSymbol')\\\"></span>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_tax_list_columns_taxrate_editor %}\\n                                                        <sw-field type=\\\"number\\\"\\n                                                                  suffix=\\\"%\\\"\\n                                                                  v-model=\\\"item.taxRate\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_tax_list_columns_actions %}\\n                                                <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                label=\\\"\\\">\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_settings_tax_list_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.settings.tax.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-settings-tax.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_settings_tax_list_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDelete(item.id)\\\">\\n                                                                {{ $tc('sw-settings-tax.list.buttonDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_tax_list_delete_modal %}\\n                                                <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                          @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                          :title=\\\"$tc('sw-settings-tax.list.modalTitleDelete')\\\"\\n                                                          variant=\\\"small\\\">\\n                                                    {% block sw_settings_tax_list_delete_modal_confirm_text %}\\n                                                        <p>\\n                                                            {{ $tc('sw-settings-tax.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                        </p>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_tax_list_delete_modal_footer %}\\n                                                        <template slot=\\\"modal-footer\\\">\\n                                                            {% block sw_settings_tax_list_delete_modal_actions_cancel %}\\n                                                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-tax.list.buttonCancel') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_settings_tax_list_delete_modal_actions_delete %}\\n                                                                <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                           variant=\\\"primary\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-tax.list.buttonDelete') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-modal>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    {% block sw_settings_tax_list_grid_pagination %}\\n                                        <sw-pagination slot=\\\"pagination\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </sw-grid>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            {% endblock %}\\n        </sw-page>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_tax_detail %}\\n    <sw-page class=\\\"sw-settings-tax-detail\\\">\\n\\n        {% block sw_settings_tax_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"tax.name\\\">{{ tax.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-settings-tax.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_tax_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_settings_tax_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"tax.isLoading\\\" :routerLink=\\\"{ name: 'sw.settings.tax.index' }\\\">\\n                        {{ $tc('sw-settings-tax.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_settings_tax_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"tax.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-settings-tax.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_tax_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_settings_tax_detail_content_card %}\\n                    <sw-card :title=\\\"$tc('sw-settings-tax.detail.titleCard')\\\">\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                            {% block sw_settings_tax_detail_content_field_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-settings-tax.detail.labelName')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-tax.detail.placeholderName')\\\"\\n                                          v-model=\\\"tax.name\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_tax_detail_content_field_tax_rate %}\\n                                <sw-field type=\\\"number\\\"\\n                                          :label=\\\"$tc('sw-settings-tax.detail.labelTaxRate')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-tax.detail.placeholderTaxRate')\\\"\\n                                          v-model=\\\"tax.taxRate\\\">\\n                                    <span slot=\\\"suffix\\\">\\n                                        <span v-html=\\\"$tc('sw-settings-tax.general.taxRateSymbol')\\\"></span>\\n                                    </span>\\n                                </sw-field>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    {% block sw_settings_language_item %}\\n        <sw-settings-item :label=\\\"$tc('sw-settings-language.general.mainMenuItemGeneral')\\\" :to=\\\"{ name: 'sw.settings.language.index' }\\\">\\n            <template slot=\\\"icon\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                    <defs>\\n                        <circle id=\\\"language-a\\\" cx=\\\"28\\\" cy=\\\"28\\\" r=\\\"28\\\"/>\\n                        <path id=\\\"language-d\\\" d=\\\"M42.1359281,36.7775717 C39.5621722,34.572869 38,31.6746409 38,28.5 C38,21.5964406 45.3873016,16 54.5,16 C63.6126984,16 71,21.5964406 71,28.5 C71,35.4035594 63.6126984,41 54.5,41 C51.8445644,41 49.3356386,40.5247857 47.1133195,39.6804914 C45.0808761,40.4798888 42.6270189,41 39.8333333,41 C39.8333333,41 41.5825681,39.4325853 42.1359281,36.7775717 Z\\\"/>\\n                        <filter id=\\\"language-c\\\" width=\\\"124.2%\\\" height=\\\"132%\\\" x=\\\"-15.2%\\\" y=\\\"-12%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"2\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                        </filter>\\n                    </defs>\\n                    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M3.79349889,40.9889761 C3.79349889,70.597807 33.4370335,45.9237813 46.6119378,60.7281967 C59.7868421,75.5326121 82.8429245,58.2607941 74.059655,40.9889761 C65.2763855,23.7171582 59.7868421,-2.19056882 42.220303,12.6138466 C24.653764,27.418262 3.79349889,11.3801453 3.79349889,40.9889761 Z\\\" transform=\\\"rotate(25 39.9 37.276)\\\"/>\\n                        <g transform=\\\"translate(12 12)\\\">\\n                            <mask id=\\\"language-b\\\" fill=\\\"#fff\\\">\\n                                <use xlink:href=\\\"#language-a\\\"/>\\n                            </mask>\\n                            <use fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#language-a\\\"/>\\n                            <path stroke=\\\"#303A4F\\\" stroke-linejoin=\\\"round\\\" stroke-width=\\\"2\\\" d=\\\"M5.54347548,45.5079245 L6.4480588,40.1263802 C10.0663921,42.5181777 12.4786143,43.1161271 13.6847254,41.9202283 C14.8908365,40.7243296 15.1923642,39.2294561 14.5893087,37.435608 C16.3984753,36.8376586 17.3030587,36.2397093 17.3030587,35.6417599 C17.3030587,35.0438105 16.7000031,34.4458612 15.493892,33.8479118 C17.3030587,33.8479118 18.207642,33.5489371 18.207642,32.9509877 C18.207642,32.3530384 17.9061142,31.4561143 17.3030587,30.2602156 C19.7152808,29.6622662 20.9213919,29.0643168 20.9213919,28.4663674 C20.9213919,27.5694434 16.3984753,23.0848231 17.3030587,20.3940509 C18.207642,17.7032787 18.207642,6.94019004 8.25722544,3.3524938 C-1.69319109,-0.23520243 -10.7390243,4.24941786 -12.5481909,6.04326598 C-14.3573576,7.8371141 -23.4031908,17.7032787 -8.92985766,34.7448358 C-8.92985766,37.7345827 -9.23138543,41.3222789 -9.83444098,45.5079245 L5.54347548,45.5079245 Z\\\" mask=\\\"url(#language-b)\\\"/>\\n                        </g>\\n                        <g fill-rule=\\\"nonzero\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\">\\n                            <use fill=\\\"#000\\\" filter=\\\"url(#language-c)\\\" xlink:href=\\\"#language-d\\\"/>\\n                            <path fill=\\\"#189EFF\\\" fill-rule=\\\"evenodd\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" d=\\\"M41.0195742,37.1213937 C38.4491871,34.7315404 37,31.7106306 37,28.5 C37,20.9741989 44.8859425,15 54.5,15 C64.1140575,15 72,20.9741989 72,28.5 C72,36.0258011 64.1140575,42 54.5,42 C51.9159481,42 49.409786,41.5689653 47.1190804,40.7484741 C44.9216925,41.560365 42.4585789,42 39.8333333,42 L37.2188488,42 L39.1659925,40.2552476 C39.2143851,40.211885 39.3211925,40.1049931 39.467124,39.9385675 C39.7206061,39.6494871 39.9762053,39.308022 40.2152326,38.9185999 C40.5562635,38.362994 40.8312115,37.7624731 41.0195742,37.1213937 Z\\\"/>\\n                        </g>\\n                        <circle cx=\\\"46.5\\\" cy=\\\"28.5\\\" r=\\\"2.5\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\"/>\\n                        <circle cx=\\\"54.5\\\" cy=\\\"28.5\\\" r=\\\"2.5\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\"/>\\n                        <circle cx=\\\"62.5\\\" cy=\\\"28.5\\\" r=\\\"2.5\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\"/>\\n                    </g>\\n                </svg>\\n            </template>\\n        </sw-settings-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_list %}\\n    {% block sw_settings_language_index %}\\n        <sw-page class=\\\"sw-settings-language-list\\\">\\n\\n            {% block sw_settings_language_list_search_bar_type %}\\n                <template slot=\\\"search-bar-type\\\">\\n                    {{ $tc('sw-settings-language.list.textHeadline') }}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_language_list_smart_bar_header %}\\n                <template slot=\\\"smart-bar-header\\\">\\n                    {% block sw_settings_language_list_smart_bar_header_title %}\\n                        <h2>\\n                            {% block sw_settings_language_list_smart_bar_header_title_text %}\\n                                {{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon> {{ $tc('sw-settings-language.list.textHeadline') }}\\n                            {% endblock %}\\n\\n                            {% block sw_settings_language_list_smart_bar_header_amount %}\\n                                <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                    ({{ total }})\\n                                </span>\\n                            {% endblock %}\\n                        </h2>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_language_list_smart_bar_actions %}\\n                <template slot=\\\"smart-bar-actions\\\">\\n                    {% block sw_settings_language_list_smart_bar_actions_add %}\\n                        <sw-button :routerLink=\\\"{ name: 'sw.settings.language.create' }\\\" variant=\\\"primary\\\">\\n                            {{ $tc('sw-settings-language.list.buttonAddLanguage') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_language_list_content %}\\n                <sw-card-view slot=\\\"content\\\">\\n                    {% block sw_settings_language_list_content_card %}\\n                        <sw-card :isLoading=\\\"isLoading\\\">\\n                            {% block sw_settings_language_list_grid %}\\n                                <sw-grid slot=\\\"grid\\\"\\n                                         class=\\\"sw-settings-language-list-grid\\\"\\n                                         :items=\\\"items\\\"\\n                                         :selectable=\\\"false\\\"\\n                                         @inline-edit-finish=\\\"onInlineEditSave\\\"\\n                                         table>\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                        {% block sw_product_list_grid_columns %}\\n\\n                                            {% block sw_settings_language_list_columns_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-language.list.columnName')\\\">\\n\\n                                                    {% block sw_settings_language_list_columns_name_link %}\\n                                                        <router-link :title=\\\"$tc('sw-settings-language.list.contextMenuEdit')\\\"\\n                                                                     :to=\\\"{ name: 'sw.settings.language.detail', params: { id: item.id } }\\\">\\n                                                            {% block sw_settings_language_list_columns_name_link %}\\n                                                                {{ item.name }}\\n                                                            {% endblock %}\\n                                                        </router-link>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_language_list_columns_name_editor %}\\n                                                        <sw-field type=\\\"text\\\"\\n                                                                  v-model=\\\"item.name\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_language_list_columns_locale_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                :label=\\\"$tc('sw-settings-language.list.columnLocaleName')\\\">\\n                                                    {% block sw_settings_language_list_columns_short_name_label %}\\n                                                        {{ item.locale.name }} / {{ item.locale.territory }}\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_language_list_columns_actions %}\\n                                                <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                label=\\\"\\\">\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_settings_language_list_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.settings.language.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-settings-language.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_settings_language_list_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDelete(item.id)\\\">\\n                                                                {{ $tc('sw-settings-language.list.buttonDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_language_list_delete_modal %}\\n                                                <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                          @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                          :title=\\\"$tc('sw-settings-language.list.modalTitleDelete')\\\"\\n                                                          variant=\\\"small\\\">\\n                                                    {% block sw_settings_language_list_delete_modal_confirm_text %}\\n                                                        <p>\\n                                                            {{ $tc('sw-settings-language.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                        </p>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_language_list_delete_modal_footer %}\\n                                                        <template slot=\\\"modal-footer\\\">\\n                                                            {% block sw_settings_language_list_delete_modal_actions_cancel %}\\n                                                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-language.list.buttonCancel') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_settings_language_list_delete_modal_actions_delete %}\\n                                                                <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                           variant=\\\"primary\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-language.list.buttonDelete') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-modal>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    {% block sw_settings_language_list_grid_pagination %}\\n                                        <sw-pagination slot=\\\"pagination\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </sw-grid>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            {% endblock %}\\n        </sw-page>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_language_detail %}\\n<sw-page class=\\\"sw-settings-language-detail\\\">\\n\\n    {% block sw_settings_language_detail_header %}\\n    <template slot=\\\"smart-bar-header\\\">\\n    <h2 v-if=\\\"language.name\\\">{{ language.name }}</h2>\\n    <h2 v-else>{{ $tc('sw-settings-language.detail.textHeadline') }}</h2>\\n    </template>\\n    {% endblock %}\\n\\n    {% block sw_settings_language_detail_actions %}\\n<template slot=\\\"smart-bar-actions\\\">\\n    {% block sw_settings_language_detail_actions_abort %}\\n    <sw-button :disabled=\\\"language.isLoading\\\" :routerLink=\\\"{ name: 'sw.settings.language.index' }\\\">\\n        {{ $tc('sw-settings-language.detail.buttonCancel') }}\\n    </sw-button>\\n    {% endblock %}\\n\\n    {% block sw_settings_language_detail_actions_save %}\\n    <sw-button variant=\\\"primary\\\" :disabled=\\\"language.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n        {{ $tc('sw-settings-language.detail.buttonSave') }}\\n    </sw-button>\\n    {% endblock %}\\n</template>\\n    {% endblock %}\\n\\n    {% block sw_settings_language_detail_content %}\\n    <sw-card-view slot=\\\"content\\\">\\n\\n        {% block sw_settings_language_detail_content_card %}\\n        <sw-card :title=\\\"$tc('sw-settings-language.detail.titleCard')\\\">\\n            <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                {% block sw_settings_language_detail_content_field_name %}\\n                <sw-field type=\\\"text\\\"\\n                          :label=\\\"$tc('sw-settings-language.detail.labelName')\\\"\\n                          :placeholder=\\\"$tc('sw-settings-language.detail.placeholderName')\\\"\\n                          validation=\\\"required\\\"\\n                          v-model=\\\"language.name\\\">\\n                </sw-field>\\n                {% endblock %}\\n\\n                {% block sw_settings_language_detail_content_field_localeId %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-settings-language.detail.labelLocale')\\\"\\n                          validation=\\\"required\\\"\\n                          :value=\\\"language.localeId\\\"\\n                          v-model=\\\"language.localeId\\\">\\n\\n                    {% block sw_settings_language_detail_content_field_localeId_options %}\\n                    <option slot=\\\"options\\\"\\n                            v-for=\\\"locale in locales\\\"\\n                            :key=\\\"locale.id\\\"\\n                            :value=\\\"locale.id\\\">\\n                        {{ locale.name }}, {{ locale.territory }} ({{ locale.code }})\\n                    </option>\\n                    {% endblock %}\\n                </sw-field>\\n                {% endblock %}\\n            </sw-container>\\n\\n            {% block sw_settings_language_detail_content_field_parentId %}\\n                <sw-field type=\\\"select\\\"\\n                          :label=\\\"$tc('sw-settings-language.detail.labelParent')\\\"\\n                          :placeholder=\\\"$tc('sw-settings-language.detail.placeholderPleaseSelect')\\\"\\n                          :value=\\\"language.parentId\\\"\\n                          v-model=\\\"language.parentId\\\">\\n\\n                    {% block sw_settings_language_detail_content_field_parentId_options %}\\n                        <option slot=\\\"options\\\"\\n                                v-for=\\\"lang in languages\\\"\\n                                :key=\\\"lang.id\\\"\\n                                :disabled=\\\"lang.id === language.id\\\"\\n                                :value=\\\"lang.id\\\">\\n                            {{ lang.name }}\\n                        </option>\\n                    {% endblock %}\\n                </sw-field>\\n            {% endblock %}\\n        </sw-card>\\n        {% endblock %}\\n    </sw-card-view>\\n    {% endblock %}\\n</sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    {% block sw_settings_payment_item %}\\n        <sw-settings-item :label=\\\"$tc('sw-settings-payment.general.mainMenuItemGeneral')\\\"\\n                          :to=\\\"{ name: 'sw.settings.payment.index' }\\\"\\n                          disabled>\\n            <template slot=\\\"icon\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                    <defs>\\n                        <path id=\\\"payment-b\\\" d=\\\"M4,-5.32907052e-15 L36,-5.32907052e-15 C38.209139,-9.65910194e-15 40,1.790861 40,4 L40,25 C40,27.209139 38.209139,29 36,29 L4,29 C1.790861,29 -3.28217218e-15,27.209139 -3.55271368e-15,25 L-3.55271368e-15,4 C-3.82325518e-15,1.790861 1.790861,-4.92325827e-15 4,-5.32907052e-15 Z\\\"/>\\n                        <filter id=\\\"payment-a\\\" width=\\\"110%\\\" height=\\\"113.8%\\\" x=\\\"-7.5%\\\" y=\\\"-3.4%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"SourceAlpha\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                        </filter>\\n                    </defs>\\n                    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M7,37.938241 C7,61.3721574 34.5043038,41.8438938 46.7284389,53.5608519 C58.9525739,65.2778101 80.3448102,51.6080256 72.1953869,37.938241 C64.0459635,24.2684565 58.9525739,3.76377974 42.6537272,15.4807379 C26.3548805,27.1976961 7,14.5043247 7,37.938241 Z\\\"/>\\n                        <g fill-rule=\\\"nonzero\\\" transform=\\\"translate(28 16)\\\">\\n                            <path fill=\\\"#FFF\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" d=\\\"M4,1 C2.34314575,1 1,2.34314575 1,4 L1,25 C1,26.6568542 2.34314575,28 4,28 L36,28 C37.6568542,28 39,26.6568542 39,25 L39,4 C39,2.34314575 37.6568542,1 36,1 L4,1 Z\\\"/>\\n                            <circle cx=\\\"9\\\" cy=\\\"10\\\" r=\\\"4\\\" fill=\\\"#D8DDE6\\\"/>\\n                        </g>\\n                        <g fill-rule=\\\"nonzero\\\" transform=\\\"translate(12 35)\\\">\\n                            <use fill=\\\"#000\\\" filter=\\\"url(#payment-a)\\\" xlink:href=\\\"#payment-b\\\"/>\\n                            <path fill=\\\"#189EFF\\\" fill-rule=\\\"evenodd\\\" stroke=\\\"#303A4F\\\" stroke-linejoin=\\\"square\\\" stroke-width=\\\"2\\\" d=\\\"M4,1 C2.34314575,1 1,2.34314575 1,4 L1,25 C1,26.6568542 2.34314575,28 4,28 L36,28 C37.6568542,28 39,26.6568542 39,25 L39,4 C39,2.34314575 37.6568542,1 36,1 L4,1 Z\\\"/>\\n                        </g>\\n                        <rect width=\\\"36\\\" height=\\\"6\\\" x=\\\"14\\\" y=\\\"43\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\"/>\\n                        <rect width=\\\"16\\\" height=\\\"2\\\" x=\\\"17\\\" y=\\\"54\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\"/>\\n                        <rect width=\\\"16\\\" height=\\\"2\\\" x=\\\"44\\\" y=\\\"23\\\" fill=\\\"#D8DDE6\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"10\\\" height=\\\"2\\\" x=\\\"44\\\" y=\\\"27\\\" fill=\\\"#D8DDE6\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <path fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M63,18 L59,18 C59.5522847,18 60,17.5522847 60,17 C60,16.4477153 59.5522847,16 59,16 L63,16 C62.4477153,16 62,16.4477153 62,17 C62,17.5522847 62.4477153,18 63,18 Z\\\"/>\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M56 18L52 18C52.5522847 18 53 17.5522847 53 17 53 16.4477153 52.5522847 16 52 16L56 16C55.4477153 16 55 16.4477153 55 17 55 17.5522847 55.4477153 18 56 18zM25 37L21 37C21.5522847 37 22 36.5522847 22 36 22 35.4477153 21.5522847 35 21 35L25 35C24.4477153 35 24 35.4477153 24 36 24 36.5522847 24.4477153 37 25 37z\\\"/>\\n                    </g>\\n                </svg>\\n\\n            </template>\\n        </sw-settings-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_list %}\\n    {% block sw_settings_payment_index %}\\n        <sw-page class=\\\"sw-settings-payment-list\\\">\\n\\n            {% block sw_settings_payment_list_search_bar_type %}\\n                <template slot=\\\"search-bar-type\\\">\\n                    {{ $tc('sw-settings-payment.list.textHeadline') }}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_payment_list_smart_bar_header %}\\n                <template slot=\\\"smart-bar-header\\\">\\n                    {% block sw_settings_payment_list_smart_bar_header_title %}\\n                        <h2>\\n                            {% block sw_settings_payment_list_smart_bar_header_title_text %}\\n                                {{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon> {{ $tc('sw-settings-payment.list.textHeadline') }}\\n                            {% endblock %}\\n\\n                            {% block sw_settings_payment_list_smart_bar_header_amount %}\\n                                <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                    ({{ total }})\\n                                </span>\\n                            {% endblock %}\\n                        </h2>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_payment_list_smart_bar_actions %}\\n                <template slot=\\\"smart-bar-actions\\\">\\n                    {% block sw_settings_payment_list_smart_bar_actions_add %}\\n                        <sw-button :routerLink=\\\"{ name: 'sw.settings.payment.create' }\\\" variant=\\\"primary\\\">\\n                            {{ $tc('sw-settings-payment.list.buttonAddPaymentMethod') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_payment_list_content %}\\n                <sw-card-view slot=\\\"content\\\">\\n                    {% block sw_settings_payment_list_content_card %}\\n                        <sw-card :isLoading=\\\"isLoading\\\">\\n                            {% block sw_settings_payment_list_grid %}\\n                                <sw-grid slot=\\\"grid\\\"\\n                                         class=\\\"sw-settings-payment-list-grid\\\"\\n                                         :selectable=\\\"false\\\"\\n                                         :items=\\\"items\\\"\\n                                         @inline-edit-finish=\\\"onInlineEditSave\\\"\\n                                         table>\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                        {% block sw_product_list_grid_columns %}\\n\\n                                            {% block sw_settings_payment_list_columns_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-payment.list.columnName')\\\">\\n\\n                                                    {% block sw_settings_payment_list_columns_name_link %}\\n                                                        <router-link :title=\\\"$tc('sw-settings-payment.list.contextMenuEdit')\\\"\\n                                                                     :to=\\\"{ name: 'sw.settings.payment.detail', params: { id: item.id } }\\\">\\n                                                            {% block sw_settings_payment_list_columns_name_link %}\\n                                                                {{ item.name }}\\n                                                            {% endblock %}\\n                                                        </router-link>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_payment_list_columns_name_editor %}\\n                                                        <sw-field type=\\\"text\\\"\\n                                                                  v-model=\\\"item.name\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_payment_list_columns_active %}\\n                                                <sw-grid-column flex=\\\"minmax(100px, 100px)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-payment.list.columnActive')\\\">\\n                                                    {% block sw_settings_payment_list_columns_active_label %}\\n                                                        <sw-icon name=\\\"small-default-checkmark-line-medium\\\" small v-if=\\\"item.active\\\" class=\\\"is--active\\\"></sw-icon>\\n                                                        <sw-icon name=\\\"small-default-x-line-medium\\\" small v-else class=\\\"is--inactive\\\"></sw-icon>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_payment_list_columns_active_editor %}\\n                                                        <sw-field type=\\\"checkbox\\\"\\n                                                                  v-model=\\\"item.active\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_payment_list_columns_additional_description %}\\n                                                <sw-grid-column flex=\\\"minmax(120px, 1fr)\\\"\\n                                                                :label=\\\"$tc('sw-settings-payment.list.columnDescription')\\\">\\n                                                    {% block sw_settings_payment_list_columns_short_tax_rate_label %}\\n                                                        {{ item.additionalDescription | striphtml | truncate(25) }}\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_payment_list_columns_actions %}\\n                                                <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                label=\\\"\\\">\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_settings_payment_list_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.settings.payment.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-settings-payment.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_settings_payment_list_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDelete(item.id)\\\">\\n                                                                {{ $tc('sw-settings-payment.list.buttonDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_payment_list_delete_modal %}\\n                                                <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                          @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                          :title=\\\"$tc('sw-settings-payment.list.modalTitleDelete')\\\"\\n                                                          variant=\\\"small\\\">\\n                                                    {% block sw_settings_payment_list_delete_modal_confirm_text %}\\n                                                        <p>\\n                                                            {{ $tc('sw-settings-payment.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                        </p>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_payment_list_delete_modal_footer %}\\n                                                        <template slot=\\\"modal-footer\\\">\\n                                                            {% block sw_settings_payment_list_delete_modal_actions_cancel %}\\n                                                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-payment.list.buttonCancel') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_settings_payment_list_delete_modal_actions_delete %}\\n                                                                <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                           variant=\\\"primary\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-payment.list.buttonDelete') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-modal>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    {% block sw_settings_payment_list_grid_pagination %}\\n                                        <sw-pagination slot=\\\"pagination\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </sw-grid>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            {% endblock %}\\n        </sw-page>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_payment_detail %}\\n    <sw-page class=\\\"sw-settings-payment-detail\\\">\\n\\n        {% block sw_settings_payment_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"paymentMethod.name\\\">{{ paymentMethod.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-settings-payment.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_payment_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_settings_payment_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"paymentMethod.isLoading\\\" :routerLink=\\\"{ name: 'sw.settings.payment.index' }\\\">\\n                        {{ $tc('sw-settings-payment.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_settings_payment_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"paymentMethod.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-settings-payment.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_payment_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_settings_payment_detail_content_card %}\\n                    <sw-card :title=\\\"$tc('sw-settings-payment.detail.titleCard')\\\">\\n\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                            {% block sw_settings_payment_detail_content_field_active %}\\n                                <sw-field type=\\\"checkbox\\\"\\n                                          :label=\\\"$tc('sw-settings-payment.detail.labelActive')\\\"\\n                                          v-model=\\\"paymentMethod.active\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_payment_detail_content_field_mobile_inactive %}\\n                                <sw-field type=\\\"checkbox\\\"\\n                                          :label=\\\"$tc('sw-settings-payment.detail.labelMobileInactive')\\\"\\n                                          v-model=\\\"paymentMethod.mobileInactive\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_payment_detail_content_field_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          validation=\\\"required\\\"\\n                                          :label=\\\"$tc('sw-settings-payment.detail.labelName')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-payment.detail.placeholderName')\\\"\\n                                          v-model=\\\"paymentMethod.name\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_payment_detail_content_field_technial_name %}\\n                                <sw-field type=\\\"text\\\"\\n                                          validation=\\\"required\\\"\\n                                          :label=\\\"$tc('sw-settings-payment.detail.labelTechnicalName')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-payment.detail.placeholderTechnicalName')\\\"\\n                                          v-model=\\\"paymentMethod.technicalName\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_payment_detail_content_field_class %}\\n                                <sw-field type=\\\"text\\\"\\n                                          :label=\\\"$tc('sw-settings-payment.detail.labelHandler')\\\"\\n                                          :placeholder=\\\"$tc('sw-settings-payment.detail.placeholderHandler')\\\"\\n                                          v-model=\\\"paymentMethod.class\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n                        </sw-container>\\n\\n                        {% block sw_settings_payment_detail_content_field_additional_description %}\\n                            <sw-text-editor\\n                                    validation=\\\"required\\\"\\n                                    :label=\\\"$tc('sw-settings-payment.detail.labelAdditionalDescription')\\\"\\n                                    :placeholder=\\\"$tc('sw-settings-payment.detail.placeholderAdditionalDescription')\\\"\\n                                    v-model=\\\"paymentMethod.additionalDescription\\\">\\n                            </sw-text-editor>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_settings_content_card_slot_default %}\\n    {% parent %}\\n\\n    {% block sw_settings_shipping_item %}\\n        <sw-settings-item :label=\\\"$tc('sw-settings-shipping.general.mainMenuItemGeneral')\\\"\\n                          :to=\\\"{ name: 'sw.settings.shipping.index' }\\\"\\n                          disabled>\\n            <template slot=\\\"icon\\\">\\n                <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"80\\\" height=\\\"80\\\" viewBox=\\\"0 0 80 80\\\">\\n                    <defs>\\n                        <circle id=\\\"shippingcost-b\\\" cx=\\\"58\\\" cy=\\\"52\\\" r=\\\"11\\\"/>\\n                        <filter id=\\\"shippingcost-a\\\" width=\\\"127.3%\\\" height=\\\"127.3%\\\" x=\\\"-18.2%\\\" y=\\\"-9.1%\\\" filterUnits=\\\"objectBoundingBox\\\">\\n                            <feMorphology in=\\\"SourceAlpha\\\" operator=\\\"dilate\\\" radius=\\\"1\\\" result=\\\"shadowSpreadOuter1\\\"/>\\n                            <feOffset dx=\\\"-2\\\" dy=\\\"2\\\" in=\\\"shadowSpreadOuter1\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feComposite in=\\\"shadowOffsetOuter1\\\" in2=\\\"SourceAlpha\\\" operator=\\\"out\\\" result=\\\"shadowOffsetOuter1\\\"/>\\n                            <feColorMatrix in=\\\"shadowOffsetOuter1\\\" values=\\\"0 0 0 0 0.0823529412   0 0 0 0 0.266666667   0 0 0 0 0.466666667  0 0 0 0.1 0\\\"/>\\n                        </filter>\\n                    </defs>\\n                    <g fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M3,50.938241 C3,74.3721574 30.5043038,54.8438938 42.7284389,66.5608519 C54.9525739,78.2778101 76.3448102,64.6080256 68.1953869,50.938241 C60.0459635,37.2684565 54.9525739,16.7637797 38.6537272,28.4807379 C22.3548805,40.1976961 3,27.5043247 3,50.938241 Z\\\"/>\\n                        <g fill-rule=\\\"nonzero\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" transform=\\\"translate(23 14)\\\">\\n                            <path fill=\\\"#FFF\\\" d=\\\"M30.5,43 L1,43 C0.44771525,43 6.76353751e-17,42.5522847 0,42 L0,12 L4.4408921e-16,11.8284271 C3.79129905e-16,11.2979941 0.210713681,10.7892863 0.585786438,10.4142136 L10.4142136,0.585786438 C10.7892863,0.210713681 11.2979941,-2.37208161e-15 11.8284271,-1.99840144e-15 L12,-1.70574233e-15 L42,0 C42.5522847,-1.01453063e-16 43,0.44771525 43,1 L43,31 L43,31.1715729 C43,31.7020059 42.7892863,32.2107137 42.4142136,32.5857864 L32.5857864,42.4142136 C32.2107137,42.7892863 31.7020059,43 31.1715729,43 L30.5,43 Z\\\"/>\\n                            <path d=\\\"M31,12 L42,1\\\"/>\\n                            <rect width=\\\"32\\\" height=\\\"32\\\" y=\\\"11\\\" rx=\\\"1\\\"/>\\n                            <polygon fill=\\\"#57D9A3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" points=\\\"11 12 21 12 20 14 21 16 20 18 21 20 11 20\\\" transform=\\\"rotate(90 16 16)\\\"/>\\n                            <polygon fill=\\\"#57D9A3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" points=\\\"26.5 6.5 15.5 -3.5 15.5 4.5 26.5 14.5\\\" transform=\\\"rotate(90 21 5.5)\\\"/>\\n                            <polygon fill=\\\"#57D9A3\\\" stroke-linecap=\\\"round\\\" stroke-linejoin=\\\"round\\\" points=\\\"11 34 21 34 20 36 21 38 20 40 21 42 11 42\\\" transform=\\\"matrix(0 -1 -1 0 54 54)\\\"/>\\n                        </g>\\n                        <rect width=\\\"13\\\" height=\\\"2\\\" x=\\\"12\\\" y=\\\"16\\\" fill=\\\"#D8DDE6\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"10\\\" height=\\\"2\\\" x=\\\"9\\\" y=\\\"24\\\" fill=\\\"#D8DDE6\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"12\\\" height=\\\"2\\\" x=\\\"7\\\" y=\\\"32\\\" fill=\\\"#D8DDE6\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"11\\\" height=\\\"2\\\" x=\\\"8\\\" y=\\\"40\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <rect width=\\\"7\\\" height=\\\"2\\\" x=\\\"12\\\" y=\\\"48\\\" fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" rx=\\\"1\\\"/>\\n                        <g fill-rule=\\\"nonzero\\\">\\n                            <use fill=\\\"#000\\\" filter=\\\"url(#shippingcost-a)\\\" xlink:href=\\\"#shippingcost-b\\\"/>\\n                            <use fill=\\\"#189EFF\\\" stroke=\\\"#303A4F\\\" stroke-width=\\\"2\\\" xlink:href=\\\"#shippingcost-b\\\"/>\\n                        </g>\\n                        <path fill=\\\"#FFF\\\" d=\\\"M58.9288739,57.192 C58.4382048,57.192 57.9795427,57.1093342 57.5528739,56.944 C57.1262051,56.7786658 56.7448756,56.5360016 56.4088739,56.216 C56.0728722,55.8959984 55.7875417,55.498669 55.5528739,55.024 C55.3182061,54.549331 55.1475411,54.008003 55.0408739,53.4 L54.0328739,53.4 L54.0328739,52.504 L54.9448739,52.44 C54.9342072,52.3546662 54.9288739,52.2720004 54.9288739,52.192 L54.9288739,51.704 C54.9288739,51.629333 54.9342072,51.554667 54.9448739,51.48 L54.0328739,51.48 L54.0328739,50.584 L55.0408739,50.52 C55.1475411,49.9013302 55.3208727,49.3520024 55.5608739,48.872 C55.8008751,48.3919976 56.0968721,47.9866683 56.4488739,47.656 C56.8008757,47.3253317 57.2008717,47.0720009 57.6488739,46.896 C58.0968761,46.7199991 58.5875379,46.632 59.1208739,46.632 C59.6008763,46.632 60.0595384,46.7439989 60.4968739,46.968 C60.9342094,47.1920011 61.307539,47.4959981 61.6168739,47.88 L60.5768739,48.888 C60.3635395,48.6426654 60.1368751,48.4453341 59.8968739,48.296 C59.6568727,48.1466659 59.3822088,48.072 59.0728739,48.072 C58.496871,48.072 58.0222091,48.2853312 57.6488739,48.712 C57.2755387,49.1386688 57.0248745,49.7359962 56.8968739,50.504 L60.6408739,50.504 L60.6408739,51.48 L56.8008739,51.48 C56.7902072,51.5440003 56.7848739,51.6079997 56.7848739,51.672 L56.7848739,52.16 C56.7848739,52.2506671 56.7902072,52.3386662 56.8008739,52.424 L60.0008739,52.424 L60.0008739,53.4 L56.9128739,53.4 C57.062208,54.1466704 57.3182054,54.7253313 57.6808739,55.136 C58.0435424,55.5466687 58.4968712,55.752 59.0408739,55.752 C59.3822089,55.752 59.6862059,55.6666675 59.9528739,55.496 C60.2195419,55.3253325 60.4755393,55.0746683 60.7208739,54.744 L61.7608739,55.704 C61.3875387,56.1840024 60.9688762,56.5519987 60.5048739,56.808 C60.0408716,57.0640013 59.5155435,57.192 58.9288739,57.192 Z\\\"/>\\n                        <path fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M60,15 L56,15 C56.5522847,15 57,14.5522847 57,14 C57,13.4477153 56.5522847,13 56,13 L60,13 C59.4477153,13 59,13.4477153 59,14 C59,14.5522847 59.4477153,15 60,15 Z\\\"/>\\n                        <path fill=\\\"#E8F6FF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M30,58 L26,58 C26.5522847,58 27,57.5522847 27,57 C27,56.4477153 26.5522847,56 26,56 L30,56 C29.4477153,56 29,56.4477153 29,57 C29,57.5522847 29.4477153,58 30,58 Z\\\"/>\\n                        <path fill=\\\"#FFF\\\" fill-rule=\\\"nonzero\\\" d=\\\"M18 26L14 26C14.5522847 26 15 25.5522847 15 25 15 24.4477153 14.5522847 24 14 24L18 24C17.4477153 24 17 24.4477153 17 25 17 25.5522847 17.4477153 26 18 26zM18 18L14 18C14.5522847 18 15 17.5522847 15 17 15 16.4477153 14.5522847 16 14 16L18 16C17.4477153 16 17 16.4477153 17 17 17 17.5522847 17.4477153 18 18 18z\\\"/>\\n                    </g>\\n                </svg>\\n            </template>\\n        </sw-settings-item>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_list %}\\n    {% block sw_settings_shipping_index %}\\n        <sw-page class=\\\"sw-settings-shipping-list\\\">\\n\\n            {% block sw_settings_shipping_list_search_bar_type %}\\n                <template slot=\\\"search-bar-type\\\">\\n                    {{ $tc('sw-settings-shipping.list.textHeadline') }}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_shipping_list_smart_bar_header %}\\n                <template slot=\\\"smart-bar-header\\\">\\n                    {% block sw_settings_shipping_list_smart_bar_header_title %}\\n                        <h2>\\n                            {% block sw_settings_shipping_list_smart_bar_header_title_text %}\\n                                {{ $tc('sw-settings.index.title') }} <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon> {{ $tc('sw-settings-shipping.list.textHeadline') }}\\n                            {% endblock %}\\n\\n                            {% block sw_settings_shipping_list_smart_bar_header_amount %}\\n                                <span v-if=\\\"!isLoading\\\" class=\\\"sw-page__smart-bar-amount\\\">\\n                                    ({{ total }})\\n                                </span>\\n                            {% endblock %}\\n                        </h2>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_shipping_list_smart_bar_actions %}\\n                <template slot=\\\"smart-bar-actions\\\">\\n                    {% block sw_settings_shipping_list_smart_bar_actions_add %}\\n                        <sw-button :routerLink=\\\"{ name: 'sw.settings.shipping.create' }\\\" variant=\\\"primary\\\">\\n                            {{ $tc('sw-settings-shipping.list.buttonAddShippingMethod') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </template>\\n            {% endblock %}\\n\\n            {% block sw_settings_shipping_list_content %}\\n                <sw-card-view slot=\\\"content\\\">\\n                    {% block sw_settings_shipping_list_content_card %}\\n                        <sw-card :isLoading=\\\"isLoading\\\">\\n                            {% block sw_settings_shipping_list_grid %}\\n                                <sw-grid slot=\\\"grid\\\"\\n                                         class=\\\"sw-settings-shipping-list-grid\\\"\\n                                         :selectable=\\\"false\\\"\\n                                         :items=\\\"items\\\"\\n                                         @inline-edit-finish=\\\"onInlineEditSave\\\"\\n                                         table>\\n                                    <template slot=\\\"columns\\\" slot-scope=\\\"{ item }\\\">\\n                                        {% block sw_product_list_grid_columns %}\\n\\n                                            {% block sw_settings_shipping_list_columns_name %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 2fr)\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-shipping.list.columnName')\\\">\\n\\n                                                    {% block sw_settings_shipping_list_columns_name_link %}\\n                                                        <router-link :title=\\\"$tc('sw-settings-shipping.list.contextMenuEdit')\\\"\\n                                                                     :to=\\\"{ name: 'sw.settings.shipping.detail', params: { id: item.id } }\\\">\\n                                                            {% block sw_settings_shipping_list_columns_name_link %}\\n                                                                {{ item.name }}\\n                                                            {% endblock %}\\n                                                        </router-link>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_shipping_list_columns_name_editor %}\\n                                                        <sw-field type=\\\"text\\\"\\n                                                                  v-model=\\\"item.name\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_shipping_list_columns_active %}\\n                                                <sw-grid-column flex=\\\"minmax(100px, 1fr)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-shipping.list.columnActive')\\\">\\n                                                    {% block sw_settings_shipping_list_columns_active_label %}\\n                                                        <sw-icon name=\\\"small-default-checkmark-line-medium\\\" small v-if=\\\"item.active\\\" class=\\\"is--active\\\"></sw-icon>\\n                                                        <sw-icon name=\\\"small-default-x-line-medium\\\" small v-else class=\\\"is--inactive\\\"></sw-icon>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_shipping_list_columns_active_editor %}\\n                                                        <sw-field type=\\\"checkbox\\\"\\n                                                                  v-model=\\\"item.active\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_shipping_list_columns_shipping_free %}\\n                                                <sw-grid-column flex=\\\"minmax(180px, 1fr)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                editable\\n                                                                :label=\\\"$tc('sw-settings-shipping.list.columnShippingfree')\\\">\\n                                                    {% block sw_settings_shipping_list_columns_shipping_free_label %}\\n                                                        <sw-icon name=\\\"small-default-checkmark-line-medium\\\" small v-if=\\\"item.bindShippingfree\\\" class=\\\"is--active\\\"></sw-icon>\\n                                                        <sw-icon name=\\\"small-default-x-line-medium\\\" small v-else class=\\\"is--inactive\\\"></sw-icon>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_shipping_list_columns_shipping_free_editor %}\\n                                                        <sw-field type=\\\"checkbox\\\"\\n                                                                  v-model=\\\"item.bindShippingfree\\\"\\n                                                                  slot=\\\"inline-edit\\\">\\n                                                        </sw-field>\\n                                                    {% endblock %}\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_shipping_list_columns_actions %}\\n                                                <sw-grid-column flex=\\\"minmax(70px, 70px)\\\"\\n                                                                align=\\\"center\\\"\\n                                                                label=\\\"\\\">\\n                                                    <sw-context-button>\\n\\n                                                        {% block sw_settings_shipping_list_columns_actions_edit %}\\n                                                            <sw-context-menu-item :routerLink=\\\"{ name: 'sw.settings.shipping.detail', params: { id: item.id } }\\\">\\n                                                                {{ $tc('sw-settings-shipping.list.contextMenuEdit') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n\\n                                                        {% block sw_settings_shipping_list_columns_actions_delete %}\\n                                                            <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"onDelete(item.id)\\\">\\n                                                                {{ $tc('sw-settings-shipping.list.buttonDelete') }}\\n                                                            </sw-context-menu-item>\\n                                                        {% endblock %}\\n                                                    </sw-context-button>\\n                                                </sw-grid-column>\\n                                            {% endblock %}\\n\\n                                            {% block sw_settings_shipping_list_delete_modal %}\\n                                                <sw-modal v-if=\\\"showDeleteModal === item.id\\\"\\n                                                          @closeModal=\\\"onCloseDeleteModal\\\"\\n                                                          :title=\\\"$tc('sw-settings-shipping.list.modalTitleDelete')\\\"\\n                                                          variant=\\\"small\\\">\\n                                                    {% block sw_settings_shipping_list_delete_modal_confirm_text %}\\n                                                        <p>\\n                                                            {{ $tc('sw-settings-shipping.list.textDeleteConfirm', 0, { name: item.name }) }}\\n                                                        </p>\\n                                                    {% endblock %}\\n\\n                                                    {% block sw_settings_shipping_list_delete_modal_footer %}\\n                                                        <template slot=\\\"modal-footer\\\">\\n                                                            {% block sw_settings_shipping_list_delete_modal_actions_cancel %}\\n                                                                <sw-button @click=\\\"onCloseDeleteModal\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-shipping.list.buttonCancel') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n\\n                                                            {% block sw_settings_shipping_list_delete_modal_actions_delete %}\\n                                                                <sw-button @click=\\\"onConfirmDelete(item.id)\\\"\\n                                                                           variant=\\\"primary\\\"\\n                                                                           size=\\\"small\\\">\\n                                                                    {{ $tc('sw-settings-shipping.list.buttonDelete') }}\\n                                                                </sw-button>\\n                                                            {% endblock %}\\n                                                        </template>\\n                                                    {% endblock %}\\n                                                </sw-modal>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    {% block sw_settings_shipping_list_grid_pagination %}\\n                                        <sw-pagination slot=\\\"pagination\\\"\\n                                                       :page=\\\"page\\\"\\n                                                       :limit=\\\"limit\\\"\\n                                                       :total=\\\"total\\\"\\n                                                       :total-visible=\\\"7\\\"\\n                                                       @page-change=\\\"onPageChange\\\">\\n                                        </sw-pagination>\\n                                    {% endblock %}\\n                                </sw-grid>\\n                            {% endblock %}\\n                        </sw-card>\\n                    {% endblock %}\\n                </sw-card-view>\\n            {% endblock %}\\n        </sw-page>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_settings_shipping_detail %}\\n    <sw-page class=\\\"sw-settings-shipping-detail\\\">\\n\\n        {% block sw_settings_shipping_detail_header %}\\n            <template slot=\\\"smart-bar-header\\\">\\n                <h2 v-if=\\\"shippingMethod.name\\\">{{ shippingMethod.name }}</h2>\\n                <h2 v-else>{{ $tc('sw-settings-shipping.detail.textHeadline') }}</h2>\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_shipping_detail_actions %}\\n            <template slot=\\\"smart-bar-actions\\\">\\n                {% block sw_settings_shipping_detail_actions_abort %}\\n                    <sw-button :disabled=\\\"shippingMethod.isLoading\\\" :routerLink=\\\"{ name: 'sw.settings.shipping.index' }\\\">\\n                        {{ $tc('sw-settings-shipping.detail.buttonCancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_settings_shipping_detail_actions_save %}\\n                    <sw-button variant=\\\"primary\\\" :disabled=\\\"shippingMethod.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                        {{ $tc('sw-settings-shipping.detail.buttonSave') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n\\n        {% block sw_settings_shipping_detail_content %}\\n            <sw-card-view slot=\\\"content\\\">\\n\\n                {% block sw_settings_shipping_detail_content_card %}\\n                    <sw-card :title=\\\"$tc('sw-settings-shipping.detail.titleCard')\\\">\\n                        {% block sw_settings_shipping_detail_content_field_name %}\\n                            <sw-field type=\\\"text\\\"\\n                                      :label=\\\"$tc('sw-settings-shipping.detail.labelName')\\\"\\n                                      :placeholder=\\\"$tc('sw-settings-shipping.detail.placeholderName')\\\"\\n                                      v-model=\\\"shippingMethod.name\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0px 30px\\\">\\n                            {% block sw_settings_shipping_detail_content_field_active %}\\n                                <sw-field type=\\\"checkbox\\\"\\n                                          :label=\\\"$tc('sw-settings-shipping.detail.labelActive')\\\"\\n                                          v-model=\\\"shippingMethod.active\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_settings_shipping_detail_content_field_bind_shipping_free %}\\n                                <sw-field type=\\\"checkbox\\\"\\n                                          :label=\\\"$tc('sw-settings-shipping.detail.labelBindShippingfree')\\\"\\n                                          v-model=\\\"shippingMethod.bindShippingfree\\\">\\n                                </sw-field>\\n                            {% endblock %}\\n                        </sw-container>\\n                    </sw-card>\\n                {% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";","module.exports = \"{% block sw_admin_menu_user_actions_items_change_language %}\\n    {% parent %}\\n\\n    <li class=\\\"sw-admin-menu__navigation-list-item\\\">\\n        <router-link class=\\\"sw-admin-menu__navigation-link\\\"\\n                     :to=\\\"{ name: 'sw.profile.index', params: { user } }\\\">\\n            <sw-icon class=\\\"sw-admin-menu__navigation-link-icon\\\" name=\\\"default-avatar-single\\\" small></sw-icon>\\n            {{ $tc('sw-profile.general.headlineProfile') }}\\n        </router-link>\\n    </li>\\n{% endblock %}\";","module.exports = \"{% block sw_profile_index %}\\n    <sw-page class=\\\"sw-profile-index\\\">\\n\\n        <template slot=\\\"smart-bar-header\\\">\\n            {% block sw_profile_index_headline %}\\n                <h2>{{ $tc('sw-profile.general.headlineProfile') }}</h2>\\n            {% endblock %}\\n        </template>\\n\\n        <template slot=\\\"smart-bar-actions\\\">\\n            {% block sw_profile_index_actions %}\\n                <sw-button variant=\\\"primary\\\" :disabled=\\\"user.isLoading\\\" @click.prevent=\\\"onSave\\\">\\n                    {{ $tc('sw-profile.index.buttonSaveLabel') }}\\n                </sw-button>\\n            {% endblock %}\\n        </template>\\n\\n        <sw-card-view slot=\\\"content\\\">\\n            {% block sw_profile_index_content %}\\n                {% block sw_profile_index_info_card %}\\n                    <sw-card class=\\\"sw-profile__card\\\" :title=\\\"$tc('sw-profile.index.titleInfoCard')\\\" :isLoading=\\\"user.isLoading\\\">\\n                        <sw-container grid=\\\"1fr 1fr\\\" gap=\\\"0 30px\\\">\\n                            {% block sw_profile_index_info_card_name_field %}\\n                                <sw-field type=\\\"text\\\" :label=\\\"$tc('sw-profile.index.labelNameField')\\\" v-model=\\\"user.name\\\"></sw-field>\\n                            {% endblock %}\\n\\n                            {% block sw_profile_index_info_card_username_field %}\\n                                <sw-field type=\\\"text\\\" :label=\\\"$tc('sw-profile.index.labelUsernameField')\\\" v-model=\\\"user.username\\\" disabled></sw-field>\\n                            {% endblock %}\\n                        </sw-container>\\n\\n                        {% block sw_profile_index_info_card_email_field %}\\n                            <sw-field type=\\\"email\\\" :label=\\\"$tc('sw-profile.index.labelEmailField')\\\" v-model=\\\"user.email\\\"></sw-field>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n\\n                {% block sw_profile_index_image_card %}\\n                    <sw-card class=\\\"sw-profile__card\\\" :title=\\\"$tc('sw-profile.index.titleImageCard')\\\" :isLoading=\\\"user.isLoading\\\">\\n                        <div class=\\\"sw-profile-index__user-image\\\">\\n                            {% block sw_profile_index_image_card_gravatar_image %}\\n                                <img :src=\\\"gravatarImage\\\" class=\\\"sw-profile-index__user-image-gravatar\\\">\\n                            {% endblock %}\\n\\n                            {% block sw_profile_index_image_card_info %}\\n                                <div class=\\\"sw-profile-index__user-image-info\\\" v-html=\\\"$tc('sw-profile.index.textImageInfo')\\\"></div>\\n                            {% endblock %}\\n                        </div>\\n                    </sw-card>\\n                {% endblock %}\\n\\n                {% block sw_profile_index_password_card %}\\n                    <sw-card class=\\\"sw-profile__card\\\" :title=\\\"$tc('sw-profile.index.titlePasswordCard')\\\" :isLoading=\\\"user.isLoading\\\">\\n                        {% block sw_profile_index_password_card_password_field %}\\n                            <sw-field type=\\\"password\\\"\\n                                      :label=\\\"$tc('sw-profile.index.labelPasswordField')\\\"\\n                                      v-model=\\\"newPassword\\\"\\n                                      autocomplete=\\\"off\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_profile_index_password_card_confirm_password_field %}\\n                            <sw-field type=\\\"password\\\"\\n                                      :label=\\\"$tc('sw-profile.index.labelPasswordConfirmField')\\\"\\n                                      v-model=\\\"newPasswordConfirm\\\"\\n                                      autocomplete=\\\"off\\\"\\n                                      :validation=\\\"newPassword === newPasswordConfirm\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n                    </sw-card>\\n                {% endblock %}\\n            {% endblock %}\\n        </sw-card-view>\\n    </sw-page>\\n{% endblock %}\";","/**\n * A factory which provides you with an interface to create filter and search queries. Queries can be nested and exclude\n * certain fields. The resulting queries can be used in conjunction with our API services.\n *\n * @module core/factory/criteria\n * @example\n * CriteriaFactory.nested(\n *     'AND',\n *     CriteriaFactory.term('product.name', 'example'),\n *     CriteriaFactory.terms('product.name', ['shopware', 'shopware AG']),\n *     CriteriaFactory.range('product.age', {\n *         '>': 10,\n *         '>=': 9,\n *         '<': 20,\n *         '<=': 19\n *     ),\n *     CriteriaFactory.not(\n *         'OR'\n *         CriteriaFactory.term('product.name', 'another example'),\n *         CriteriaFactory.terms('product.name', ['example manufacturer', 'another manufacturer'])\n *     ),\n *     CriteriaFactory.nested(\n *         'AND',\n *         CriteriaFactory.nested(\n *             'AND',\n *             CriteriaFactory.range('product.age', {\n *                 '>': 10\n *             }),\n *             CriteriaFactory.term('product.manufacturer', 'yet another manufacturer')\n *         ),\n *         CriteriaFactory.nested(\n *             'AND',\n *             CriteriaFactory.range('product.age', {\n *                 '<': 50\n *             }),\n *             CriteriaFactory.term('product.manufacturer', 'example manufacturer')\n *         )\n *     )\n * )\n *\n */\nimport types from 'src/core/service/utils/types.utils';\n\nexport default {\n    term: createTerm,\n    nested: createNested,\n    match: createMatch,\n    range: createRange,\n    not: createNot,\n    terms: createTerms\n};\n\n/**\n * Aliases for nested and not operator.\n * @type {Object<Array>}\n */\nconst operatorAliases = {\n    AND: ['and', '&&'],\n    OR: ['or', '||']\n};\n\n/**\n * Aliases for the range operators\n * @type {Object<Array>}\n */\nconst rangeOperatorAliases = {\n    lt: ['lt', '<'],\n    lte: ['lte', '<='],\n    gt: ['gt', '>'],\n    gte: ['gte', '>=']\n};\n\n/**\n * Creates a new term query. If an array of values is provided as the second argument we automatically creating a\n * terms query instead of a term query.\n *\n * @example\n * CriteriaFactory.term('product.name', 'example');\n *\n * @param {String} field\n * @param {String|Array} value\n * @returns {{getQueryString, getQuery}}\n */\nfunction createTerm(field, value) {\n    if (types.isArray(value)) {\n        return createTerms(field, value);\n    }\n\n    const query = {\n        type: 'term',\n        field,\n        value\n    };\n    return createOutputInterface(query);\n}\n\n/**\n * Creates a nested query. A nested query can either be used with an `AND` operator or `OR` operator.\n *\n * @example\n * CriteriaFactory.nested(\n *    'AND',\n *    CriteriaFactory.term('product.name', 'Example'),\n *    CriteriaFactory.term('product.manufacturer', 'shopware')\n * );\n *\n * @param {String} operator\n * @param {...Object} queries\n * @returns {{getQueryString, getQuery}}\n */\nfunction createNested(operator, ...queries) {\n    const query = {\n        type: 'nested',\n        operator: getOperator(operator),\n        queries: mapQueries(queries)\n    };\n    return createOutputInterface(query);\n}\n\n/**\n * Creates a match query.\n *\n * @example\n * CriteriaFactory.match('product.name', 'example');\n *\n * @param {String} field\n * @param {String} value\n * @returns {{getQueryString, getQuery}}\n */\nfunction createMatch(field, value) {\n    const query = {\n        type: 'match',\n        field,\n        value\n    };\n    return createOutputInterface(query);\n}\n\n/**\n * Creates a not query which is useful for excluding queries.\n *\n * @example\n * CriteriaFactory.not(\n *    'AND',\n *    CriteriaFactory.term('product.name', 'Example'),\n *    CriteriaFactory.term('product.manufacturer', 'shopware')\n * );\n *\n * @param {String} operator\n * @param {...Object} queries\n * @returns {{getQueryString, getQuery}}\n */\nfunction createNot(operator, ...queries) {\n    const query = {\n        type: 'not',\n        operator: getOperator(operator),\n        queries: mapQueries(queries)\n    };\n    return createOutputInterface(query);\n}\n\n/**\n * Creates a range query. Useful for price filtering for example\n *\n * @example\n * CriteriaFactory.range('product.age', {\n *    '>': 10,\n *    '>=': 9,\n *    '<': 20,\n *    '<=': 19\n * });\n *\n * @param {String} field\n * @param {Object} parameters\n * @returns {{getQueryString, getQuery}}\n */\nfunction createRange(field, parameters) {\n    const query = {\n        type: 'range',\n        parameters: reduceRangeParameters(parameters),\n        field\n    };\n    return createOutputInterface(query);\n}\n\n/**\n * Creates a terms query. It's quite similar to a term query with the difference that it accepts multiple values for\n * one field.\n *\n * @example\n * CriteriaFactory.terms('product.name', ['example', 'product']);\n *\n * @param {String} field\n * @param {Array} values\n * @returns {{getQueryString, getQuery}}\n */\nfunction createTerms(field, values) {\n    const query = {\n        type: 'terms',\n        field,\n        value: values.join('|')\n    };\n    return createOutputInterface(query);\n}\n\n/**\n * Helper method which is used internally to map nested queries.\n *\n * @param {Array<{getQueryString, getQuery}>} queries\n * @returns {Array<Object>}\n */\nfunction mapQueries(queries) {\n    return queries.map((query) => query.getQuery());\n}\n\n/**\n * Helper method which is used internally for the range query. It maps the range operator to one of the aliases.\n *\n * @param {Object} parameters\n * @returns {Object}\n */\nfunction reduceRangeParameters(parameters) {\n    return Object.keys(parameters).reduce((remappedParameters, key) => {\n        const operatorKey = getOperator(key, 'lt', rangeOperatorAliases);\n        remappedParameters[operatorKey] = parameters[key];\n        return remappedParameters;\n    }, {});\n}\n\n/**\n * Helper method which resolves an operator based on the provided operator pool.\n *\n * @param {String} alias\n * @param {String} [defaultOperator='AND']\n * @param {Object} [operatorPool=operatorAliases]\n * @returns {String}\n */\nfunction getOperator(alias, defaultOperator = 'AND', operatorPool = operatorAliases) {\n    let operator = defaultOperator;\n\n    Object.keys(operatorPool).every((key) => {\n        const lowerQueryOperator = alias.toLowerCase();\n        if (operatorPool[key].indexOf(lowerQueryOperator) !== -1) {\n            operator = key;\n            return false;\n        }\n        return true;\n    });\n\n    return operator;\n}\n\n/**\n * Helper method which creates will be used by every exposed function of the factory. It provided you with the ability\n * to get either a JSON stringified version of the query or a plain object.\n *\n * @param {Object} query\n * @returns {{getQueryString: String, getQuery: function(): Object}}\n */\nfunction createOutputInterface(query) {\n    return {\n        getQueryString: () => getQueryString(query),\n        getQuery: () => query\n    };\n}\n\n/**\n * Returns a JSON stringified version of the provided query.\n *\n * @param {Object} query\n * @returns {String}\n */\nfunction getQueryString(query) {\n    return JSON.stringify(query);\n}\n","/**\n * @module core/service/utils/dom\n */\n\nimport { warn } from './debug.utils';\n\n/**\n * Returns the scrollbar height of an HTML element.\n *\n * @param {Object} element\n * @returns {number} Scrollbar height\n */\nfunction getScrollbarHeight(element) {\n    if (!(element instanceof HTMLElement)) {\n        warn('DOM Utilities', 'The provided element needs to be an instance of \"HTMLElement\".', element);\n        return 0;\n    }\n    return (element.offsetHeight - element.scrollHeight);\n}\n\n/**\n * Returns the scrollbar width of an HTML element.\n *\n * @param {Object} element\n * @returns {number} Scrollbar width\n */\nfunction getScrollbarWidth(element) {\n    if (!(element instanceof HTMLElement)) {\n        warn('DOM Utilities', 'The provided element needs to be an instance of \"HTMLElement\".', element);\n        return 0;\n    }\n    return (element.offsetWidth - element.scrollWidth);\n}\n\n/**\n * uses the browser's copy function to copy a string\n *\n * @param {string} stringToCopy\n */\nfunction copyToClipboard(stringToCopy) {\n    const tempTextArea = document.createElement('textarea');\n    tempTextArea.value = stringToCopy;\n    document.body.appendChild(tempTextArea);\n    tempTextArea.select();\n    document.execCommand('copy');\n    document.body.removeChild(tempTextArea);\n}\n\nexport default {\n    getScrollbarHeight,\n    getScrollbarWidth,\n    copyToClipboard\n};\n","import crypto from 'crypto';\n\n/**\n * @module core/service/utils/format\n */\nexport default {\n    currency,\n    date,\n    md5\n};\n\n/**\n * Converts a Number to a formatted currency. Especially helpful for template filters.\n *\n * @param {Number} val - Number which should be formatted as a currency.\n * @param {String} sign - Currency sign which should be displayed\n * @returns {string} Formatted string\n */\nexport function currency(val, sign) {\n    const opts = {\n        style: 'currency',\n        currency: sign || 'EUR'\n    };\n    let language = 'de-DE';\n    if (opts.currency === 'USD') {\n        language = 'en-US';\n    }\n    return val.toLocaleString(language, opts);\n}\n\n/**\n * Formats a Date object to a localized string\n *\n * @param {Date} val\n * @param {String} [locale='de-DE']\n * @returns {string}\n */\nexport function date(val, locale = 'de-DE') {\n    const dateObj = new Date(val);\n    return dateObj.toLocaleString(locale);\n}\n\n/**\n * Generates a md5 hash of the given value.\n *\n * @param {String} value\n * @return {String}\n */\nexport function md5(value) {\n    return crypto.createHash('md5').update(value).digest('hex');\n}\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-login.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"31598c05\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-product-file-upload.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"58341e4a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-product-detail-context-prices.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"9f5616a0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-product-list.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"669171e4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-catalog-list.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f66a4de8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-catalog-detail.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1868d6da\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-customer-list.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"973d4140\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-customer-detail-base.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"285b83eb\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-customer-detail-addresses.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7be61012\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-customer-default.addresses.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"60b1f108\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-manufacturer-detail.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1bbe52b3\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-order-list.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4a0a2cc0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-order-detail.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d3db4fb2\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-order-detail-base.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"136bd607\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-order-line-items-grid.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0e8e3644\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-order-delivery-line-items-grid.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"dc145c5e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-order-delivery.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"672015f0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4c8034d0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-upload.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d654bc3a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-catalog.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"65e6eade\", content, true, {});","/**\n * @module core/service/utils/string\n */\nimport capitalizeString from 'lodash/capitalize';\nimport camelCase from 'lodash/camelCase';\n\nexport default {\n    capitalizeString,\n    camelCase\n};\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-modal-replace.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6daecaac\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-sidebar.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"202c9a7c\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-collapse.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"15125512\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-quickinfo.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e58445be\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-grid-catalog-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"97884e74\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-integration-list.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"004df090\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-sales-channel-modal.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"532f3b36\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-sales-channel-detail-base.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"62211b07\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-settings-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4b2f5e6d\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-settings-index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b04e7108\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-settings-country-detail.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"eb9d659a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-settings-shipping-detail.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"b5794c62\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-profile-index.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"44c49c58\", content, true, {});","export default {\n    warn\n};\n\n/**\n * General logging function which provides a unified style of log messages for developers. Please keep in mind the log\n * messages will be displayed in the developer console when they're running the application in development mode.\n *\n * @param {String} [name='Core']\n * @param {...String|Array|Date|Number|Object} message\n */\nexport function warn(name = 'Core', ...message) {\n    if (process.env.NODE_ENV !== 'production' && typeof console !== 'undefined') {\n        message.unshift(`[${name}]`);\n        console.warn.apply(this, message);\n    }\n}\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-login.html.twig';\nimport './sw-login.less';\n\nComponent.register('sw-login', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            isLoginSuccess: false,\n            isLoginError: false\n        };\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    computed: {\n        authStore() {\n            return State.getStore('auth');\n        }\n    },\n\n    methods: {\n        mountedComponent() {\n            const usernameField = this.$refs.swLoginUsernameField.$el.querySelector('input');\n\n            usernameField.focus();\n        },\n\n        loginUserWithPassword() {\n            this.isLoading = true;\n\n            return this.authStore.loginUserWithPassword().then((success) => {\n                this.isLoading = false;\n\n                if (success === true) {\n                    this.handleLoginSuccess();\n                } else {\n                    this.handleLoginError();\n                }\n            });\n        },\n\n        handleLoginSuccess() {\n            this.isLoginSuccess = true;\n\n            setTimeout(() => {\n                this.isLoginSuccess = false;\n                this.forwardLogin();\n            }, 300);\n        },\n\n        handleLoginError() {\n            this.isLoginError = true;\n\n            setTimeout(() => {\n                this.isLoginError = false;\n            }, 500);\n\n            this.createNotificationError({\n                title: this.$tc(this.authStore.errorTitle),\n                message: this.$tc(this.authStore.errorMessage, 0, { url: this.authStore.lastUrl })\n            });\n        },\n\n        forwardLogin() {\n            const previousRoute = JSON.parse(sessionStorage.getItem('sw-admin-previous-route'));\n            sessionStorage.removeItem('sw-admin-previous-route');\n\n            if (previousRoute && previousRoute.name && previousRoute.fullPath) {\n                this.$router.push(previousRoute.fullPath);\n                return;\n            }\n\n            this.$router.push({ name: 'core' });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './page/index';\n\nModule.register('sw-login', {\n    type: 'core',\n    name: 'moduleNames.login',\n    description: 'Enter description here...',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#F19D12',\n\n    routes: {\n        index: {\n            component: 'sw-login',\n            path: '/login',\n            alias: '/signin',\n            coreRoute: true\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-dashboard-index.html.twig';\n\nComponent.register('sw-dashboard-index', {\n    template\n});\n","import { Module } from 'src/core/shopware';\nimport './page/sw-dashboard-index';\n\nModule.register('sw-dashboard', {\n    type: 'core',\n    name: 'Dashboard',\n    description: 'sw-dashboard.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#6AD6F0',\n    icon: 'default-device-dashboard',\n\n    routes: {\n        index: {\n            components: {\n                default: 'sw-dashboard-index'\n            },\n            path: 'index'\n        }\n    },\n\n    navigation: [{\n        id: 'sw-dashboard',\n        label: 'sw-dashboard.general.mainMenuItemGeneral',\n        color: '#6AD6F0',\n        icon: 'default-device-dashboard',\n        path: 'sw.dashboard.index',\n        position: 10\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-product-basic-form.html.twig';\n\nComponent.register('sw-product-basic-form', {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        manufacturers: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport CriteriaFactory from 'src/core/factory/criteria.factory';\nimport template from './sw-product-category-form.html.twig';\n\nComponent.register('sw-product-category-form', {\n    template,\n\n    inject: ['categoryService'],\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        }\n    },\n\n    data() {\n        return {\n            catalogs: []\n        };\n    },\n\n    computed: {\n        categoryService() {\n            return this.categoryService;\n        },\n\n        catalogStore() {\n            return State.getStore('catalog');\n        },\n\n        categoriesStore() {\n            return this.product.getAssociation('categories');\n        },\n\n        criteria() {\n            if (!this.product.catalogId) {\n                return null;\n            }\n\n            return CriteriaFactory.term('catalogId', this.product.catalogId);\n        },\n\n        hasCriteria() {\n            return this.criteria !== null;\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.catalogStore.getList({\n                page: 1,\n                limit: 25\n            }).then(response => {\n                this.catalogs = response.items;\n            });\n        },\n\n        onChangeCatalog() {\n            this.product.categories.forEach((category) => {\n                this.$refs.multiSelectCategories.dismissSelection(category.id);\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-product-price-form.html.twig';\n\nComponent.register('sw-product-price-form', {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        taxRates: {\n            type: Array,\n            required: true,\n            default: []\n        },\n        currencies: {\n            type: Array,\n            required: true,\n            default: []\n        }\n    },\n\n    computed: {\n        productTaxRate() {\n            return this.taxRates.find((taxRate) => {\n                return taxRate.id === this.product.taxId;\n            });\n        },\n\n        defaultCurrency() {\n            return this.currencies.find((currency) => {\n                return currency.isDefault;\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-product-settings-form.html.twig';\n\nComponent.register('sw-product-settings-form', {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport { fileReader } from 'src/core/service/util.service';\nimport find from 'lodash/find';\nimport template from './sw-product-file-upload.html.twig';\nimport './sw-product-file-upload.less';\n\nComponent.register('sw-product-file-upload', {\n    template,\n\n    inject: ['mediaService'],\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        }\n    },\n\n    data() {\n        return {\n            mediaItems: this.product.media,\n            uploads: [],\n            previews: []\n        };\n    },\n\n    computed: {\n        productMediaStore() {\n            return this.product.getAssociation('media');\n        },\n\n        mediaStore() {\n            return State.getStore('media');\n        },\n\n        uploadStore() {\n            return State.getStore('upload');\n        }\n    },\n\n    methods: {\n        handleFileUploads() {\n            const uploadedFiles = Array.from(this.$refs.fileInput.files);\n\n            this.uploads = uploadedFiles.map((file) => {\n                const productMedia = this.createEntities(file);\n\n                const uploadTask = this.uploadStore.addUpload(this.product.id, () => {\n                    return fileReader.readAsArrayBuffer(file).then((arrayBuffer) => {\n                        return this.mediaService.uploadMediaById(\n                            productMedia.media.id,\n                            file.type,\n                            arrayBuffer,\n                            file.name.split('.').pop()\n                        );\n                    }).catch(() => {\n                        // Delete the corresponding media entities when the upload fails\n                        this.product.getAssociation('media').getByIdAsync(productMedia.id).then((productMediaEntity) => {\n                            if (!productMediaEntity) {\n                                return;\n                            }\n\n                            if (productMediaEntity.media && productMediaEntity.media.id) {\n                                State.getStore('media').getByIdAsync(productMediaEntity.media.id).then((mediaEntity) => {\n                                    mediaEntity.delete(true);\n                                });\n                            }\n\n                            productMediaEntity.delete(true);\n                        });\n                    });\n                });\n\n                return { mediaId: productMedia.mediaId, uploadId: uploadTask.id };\n            });\n        },\n\n        createEntities(file) {\n            const productMedia = this.productMediaStore.create();\n            productMedia.isLoading = true;\n            productMedia.catalogId = this.product.catalogId;\n\n            if (this.mediaItems.length <= 0) {\n                productMedia.position = 0;\n                this.product.coverId = productMedia.id;\n            } else {\n                productMedia.position = this.mediaItems[this.mediaItems.length - 1].position + 1;\n            }\n\n            const mediaEntity = this.mediaStore.create();\n\n            delete mediaEntity.catalog;\n            delete mediaEntity.user;\n            mediaEntity.catalogId = this.product.catalogId;\n            mediaEntity.name = file.name;\n\n            fileReader.readAsDataURL(file).then((dataURL) => {\n                this.previews[mediaEntity.id] = dataURL;\n                productMedia.isLoading = false;\n\n                this.$forceUpdate();\n            });\n\n            productMedia.media = mediaEntity;\n            productMedia.mediaId = mediaEntity.id;\n            this.product.media.push(productMedia);\n\n            return productMedia;\n        },\n\n        getPreviewForMedia(mediaEntity) {\n            if (mediaEntity.isLocal) {\n                return mediaEntity.id in this.previews ? this.previews[mediaEntity.id] : '';\n            }\n            return mediaEntity.url;\n        },\n\n        addFiles() {\n            this.$refs.fileInput.click();\n        },\n\n        removeFile(key) {\n            const item = find(this.mediaItems, (e) => e.mediaId === key);\n            const upload = find(this.uploads, (e) => e.mediaId === key);\n\n            if (upload) {\n                this.uploadStore.removeUpload(upload.uploadId);\n            }\n\n            this.mediaItems = this.mediaItems.filter((e) => e.mediaId !== key);\n\n            if (this.isCover(item)) {\n                if (this.mediaItems.length === 0) {\n                    this.product.coverId = null;\n                } else {\n                    this.product.coverId = this.mediaItems[0].id;\n                }\n            }\n\n            item.delete();\n        },\n\n        isCover(productMedia) {\n            return this.product.coverId === productMedia.id;\n        },\n\n        markMediaAsCover(productMedia) {\n            this.product.coverId = productMedia.id;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-product-detail-base.html.twig';\n\nComponent.register('sw-product-detail-base', {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        manufacturers: {\n            type: Array,\n            required: true,\n            default: []\n        },\n        taxes: {\n            type: Array,\n            required: true,\n            default: []\n        },\n        currencies: {\n            type: Array,\n            required: true,\n            default: []\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport template from './sw-product-detail-context-prices.html.twig';\nimport './sw-product-detail-context-prices.less';\n\nComponent.register('sw-product-detail-context-prices', {\n    template,\n\n    props: {\n        product: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        taxes: {\n            type: Array,\n            required: true,\n            default: []\n        },\n        currencies: {\n            type: Array,\n            required: true,\n            default: []\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            rules: [],\n            totalRules: 0,\n            isLoadingRules: false\n        };\n    },\n\n    computed: {\n        priceRuleStore() {\n            return this.product.getAssociation('priceRules');\n        },\n\n        priceRuleGroups() {\n            const priceRuleGroups = {};\n\n            this.product.priceRules.forEach((rule) => {\n                if (this.priceRuleStore.getById(rule.id).isDeleted === true) {\n                    return;\n                }\n\n                if (!priceRuleGroups[rule.ruleId]) {\n                    priceRuleGroups[rule.ruleId] = {\n                        ruleId: rule.ruleId,\n                        rule: this.findRuleById(rule.ruleId),\n                        currencies: {}\n                    };\n                }\n\n                if (!priceRuleGroups[rule.ruleId].currencies[rule.currencyId]) {\n                    priceRuleGroups[rule.ruleId].currencies[rule.currencyId] = {\n                        currencyId: rule.currencyId,\n                        currency: this.findCurrencyById(rule.currencyId),\n                        prices: []\n                    };\n                }\n\n                priceRuleGroups[rule.ruleId].currencies[rule.currencyId].prices.push(rule);\n            });\n\n            return priceRuleGroups;\n        },\n\n        isLoaded() {\n            return !this.isLoading &&\n                   !this.isLoadingRules &&\n                   this.currencies.length &&\n                   this.taxes.length &&\n                   this.product;\n        },\n\n        productTaxRate() {\n            return this.taxes.find((taxRate) => {\n                return taxRate.id === this.product.taxId;\n            });\n        },\n\n        defaultCurrency() {\n            return this.currencies.find((currency) => {\n                return currency.isDefault;\n            });\n        }\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.ruleStore = State.getStore('rule');\n\n            this.product.getAssociation('priceRules').getList({\n                page: 1,\n                limit: 500,\n                sortBy: 'quantityStart'\n            });\n\n            this.isLoadingRules = true;\n\n            this.ruleStore.getList(0, 500).then((response) => {\n                this.rules = response.items;\n                this.totalRules = response.total;\n\n                this.isLoadingRules = false;\n            });\n        },\n\n        onRuleChange(value, ruleId) {\n            this.product.priceRules.forEach((priceRule) => {\n                if (priceRule.ruleId === ruleId) {\n                    priceRule.ruleId = value;\n                }\n            });\n        },\n\n        onAddNewPriceGroup() {\n            if (typeof this.priceRuleGroups.null !== 'undefined') {\n                return;\n            }\n\n            const newPriceRule = this.priceRuleStore.create();\n\n            newPriceRule.ruleId = null;\n            newPriceRule.productId = this.product.id;\n            newPriceRule.quantityStart = 1;\n            newPriceRule.quantityEnd = null;\n            newPriceRule.currencyId = this.defaultCurrency.id;\n\n            this.product.priceRules.push(newPriceRule);\n        },\n\n        onAddCurrency(ruleId, currency) {\n            const defaultCurrencyPrices = this.priceRuleGroups[ruleId].currencies[this.defaultCurrency.id].prices;\n\n            defaultCurrencyPrices.forEach((price) => {\n                const newPriceRule = this.priceRuleStore.duplicate(price.id);\n\n                newPriceRule.currencyId = currency.id;\n\n                this.product.priceRules.push(newPriceRule);\n            });\n        },\n\n        onPriceGroupDelete(ruleId) {\n            this.priceRuleStore.forEach((item) => {\n                if (item.ruleId === ruleId) {\n                    item.delete();\n                }\n            });\n\n            this.product.priceRules = this.product.priceRules.filter((priceRule) => {\n                return priceRule.ruleId !== ruleId;\n            });\n        },\n\n        onPriceGroupDuplicate(priceGroup) {\n            if (typeof this.priceRuleGroups.null !== 'undefined') {\n                return;\n            }\n\n            Object.keys(priceGroup.currencies).forEach((currencyId) => {\n                priceGroup.currencies[currencyId].prices.forEach((price) => {\n                    const newPriceRule = this.priceRuleStore.duplicate(price.id);\n                    newPriceRule.ruleId = null;\n\n                    this.product.priceRules.push(newPriceRule);\n                });\n            });\n        },\n\n        onPriceRuleDuplicate(priceRule) {\n            const newPriceRule = this.priceRuleStore.duplicate(priceRule.id);\n            this.product.priceRules.push(newPriceRule);\n        },\n\n        onPriceRuleDelete(priceRule) {\n            // Do not delete the last price of the default currency\n            if (priceRule.currencyId === this.defaultCurrency.id) {\n                const priceRuleGroup = this.priceRuleGroups[priceRule.ruleId];\n                const defaultCurrencyPrices = priceRuleGroup.currencies[this.defaultCurrency.id].prices;\n\n                if (defaultCurrencyPrices.length <= 1 && Object.keys(priceRuleGroup.currencies).length > 1) {\n                    return;\n                }\n            }\n\n            this.product.priceRules = this.product.priceRules.filter((price) => {\n                return price.id !== priceRule.id;\n            });\n\n            this.priceRuleStore.getById(priceRule.id).delete();\n        },\n\n        onQuantityEndChange(value, price, priceGroup) {\n            const currencyPrices = priceGroup.currencies[price.currencyId].prices;\n\n            if (!currencyPrices.length) {\n                return;\n            }\n\n            if (currencyPrices[currencyPrices.length - 1].id === price.id && value !== null) {\n                const newPriceRule = this.priceRuleStore.create();\n\n                newPriceRule.productId = this.product.id;\n                newPriceRule.ruleId = priceGroup.ruleId;\n                newPriceRule.quantityStart = price.quantityEnd + 1;\n                newPriceRule.quantityEnd = null;\n                newPriceRule.currencyId = price.currencyId;\n\n                this.product.priceRules.push(newPriceRule);\n            }\n        },\n\n        findRuleById(ruleId) {\n            return this.rules.find((rule) => {\n                return rule.id === ruleId;\n            });\n        },\n\n        findCurrencyById(currencyId) {\n            return this.currencies.find((currency) => {\n                return currency.id === currencyId;\n            });\n        }\n    }\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-product-list.twig';\nimport './sw-product-list.less';\n\nComponent.register('sw-product-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            products: [],\n            showDeleteModal: false,\n            isLoading: false\n        };\n    },\n\n    computed: {\n        productStore() {\n            return State.getStore('product');\n        },\n\n        filters() {\n            return [{\n                active: false,\n                label: 'Preis über 50€',\n                criteria: { type: 'range', field: 'product.price', options: { '>': 50 } }\n            }, {\n                active: false,\n                label: 'Lagerbestand unter 10',\n                criteria: { type: 'range', field: 'product.stock', options: { '<': 10 } }\n            }];\n        }\n    },\n\n    created() {\n        this.$root.$on('search', this.onSearch);\n    },\n\n    destroyed() {\n        this.$root.$off('search', this.onSearch);\n    },\n\n    filters: {\n        stockColorVariant(value) {\n            if (value > 25) {\n                return 'success';\n            }\n            if (value < 25 && value > 0) {\n                return 'warning';\n            }\n\n            return 'error';\n        }\n    },\n\n    methods: {\n        onEdit(product) {\n            if (product && product.id) {\n                this.$router.push({\n                    name: 'sw.product.detail',\n                    params: {\n                        id: product.id\n                    }\n                });\n            }\n        },\n\n        onInlineEditSave(product) {\n            this.isLoading = true;\n\n            product.save().then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n\n            this.products = [];\n\n            return this.productStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.products = response.items;\n                this.isLoading = false;\n\n                return this.products;\n            });\n        },\n\n        onDeleteProduct(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.productStore.getById(id).delete(true).then(() => {\n                this.getList();\n            }).catch(this.onCloseDeleteModal());\n        }\n    }\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport template from './sw-product-detail.html.twig';\n\nComponent.register('sw-product-detail', {\n    template,\n\n    inject: ['mediaService'],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            product: {},\n            manufacturers: [],\n            currencies: [],\n            taxes: []\n        };\n    },\n\n    computed: {\n        productStore() {\n            return State.getStore('product');\n        },\n\n        manufacturerStore() {\n            return State.getStore('product_manufacturer');\n        },\n\n        currencyStore() {\n            return State.getStore('currency');\n        },\n\n        taxStore() {\n            return State.getStore('tax');\n        },\n\n        uploadStore() {\n            return State.getStore('upload');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.productId = this.$route.params.id;\n                this.product = this.productStore.getById(this.productId);\n\n                this.product.getAssociation('media').getList({\n                    page: 1,\n                    limit: 50,\n                    sortBy: 'position',\n                    sortDirection: 'ASC'\n                });\n\n                this.product.getAssociation('categories').getList({\n                    page: 1,\n                    limit: 50\n                });\n\n                this.manufacturerStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.manufacturers = response.items;\n                });\n\n                this.currencyStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.currencies = response.items;\n                });\n\n                this.taxStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.taxes = response.items;\n                });\n            }\n        },\n\n        onRemoveImageToUpload(item) {\n            this.mediaItems = this.mediaItems.filter((e) => { return e.mediaEntity.id !== item.id; });\n        },\n\n        onSave() {\n            const productName = this.product.name;\n            const titleSaveSuccess = this.$tc('sw-product.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-product.detail.messageSaveSuccess', 0, { name: productName });\n            const titleSaveError = this.$tc('global.notification.notificationSaveErrorTitle');\n            const messageSaveError = this.$tc(\n                'global.notification.notificationSaveErrorMessage', 0, { entityName: productName }\n            );\n\n            return this.product.save().then(() => {\n                const productId = this.product.id;\n                const totalTasks = this.uploadStore.getPendingTaskCount(productId);\n\n                return this.uploadStore.runUploads(productId, (runningTasks) => {\n                    const count = totalTasks - runningTasks;\n                    this.createNotification({\n                        title: titleSaveSuccess,\n                        message: this.$tc('sw-product.detail.messageUploadSuccess', 0, { count, total: totalTasks })\n                    });\n                });\n            }).then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            }).catch((exception) => {\n                this.createNotificationError({\n                    title: titleSaveError,\n                    message: messageSaveError\n                });\n                warn(this._name, exception.message, exception.response);\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-product-create.html.twig';\n\nComponent.extend('sw-product-create', 'sw-product-detail', {\n    template,\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.product.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.productStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n\n            this.product.price.linked = true;\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.product.detail', params: { id: this.product.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './component/sw-product-basic-form';\nimport './component/sw-product-category-form';\nimport './component/sw-product-price-form';\nimport './component/sw-product-settings-form';\nimport './component/sw-product-file-upload';\nimport './view/sw-product-detail-base';\nimport './view/sw-product-detail-context-prices';\nimport './page/sw-product-list';\nimport './page/sw-product-detail';\nimport './page/sw-product-create';\n\nModule.register('sw-product', {\n    type: 'core',\n    name: 'Products',\n    description: 'sw-product.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#57D9A3',\n    icon: 'default-symbol-products',\n\n    routes: {\n        index: {\n            components: {\n                default: 'sw-product-list',\n                sidebar: 'sw-product-sidebar'\n            },\n            path: 'index'\n        },\n\n        create: {\n            component: 'sw-product-create',\n            path: 'create',\n            redirect: {\n                name: 'sw.product.create.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-product-detail-base',\n                    path: 'base',\n                    meta: {\n                        parentPath: 'sw.product.index'\n                    }\n                }\n            }\n        },\n\n        detail: {\n            component: 'sw-product-detail',\n            path: 'detail/:id',\n            redirect: {\n                name: 'sw.product.detail.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-product-detail-base',\n                    path: 'base',\n                    meta: {\n                        parentPath: 'sw.product.index'\n                    }\n                },\n                prices: {\n                    component: 'sw-product-detail-context-prices',\n                    path: 'prices',\n                    meta: {\n                        parentPath: 'sw.product.index'\n                    }\n                }\n            }\n        }\n    },\n\n    navigation: [{\n        id: 'sw-product',\n        label: 'sw-product.general.mainMenuItemGeneral',\n        color: '#57D9A3',\n        path: 'sw.product.index',\n        icon: 'default-symbol-products',\n        position: 20\n    }, {\n        path: 'sw.product.index',\n        label: 'sw-product.general.mainMenuItemList',\n        parent: 'sw-product'\n    }, {\n        path: 'sw.product.create',\n        label: 'sw-product.general.mainMenuItemAdd',\n        parent: 'sw-product',\n        color: '#57D9A3'\n    }]\n});\n","import { Component, State } from 'src/core/shopware';\nimport template from './sw-catalog-list.html.twig';\nimport './sw-catalog-list.less';\n\nComponent.register('sw-catalog-list', {\n    template,\n\n    data() {\n        return {\n            catalogs: [],\n            isLoading: false\n        };\n    },\n\n    computed: {\n        catalogStore() {\n            return State.getStore('catalog');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n\n            this.catalogStore.getList({ page: 1, limit: 100 }).then((response) => {\n                this.catalogs = response.items;\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport CriteriaFactory from 'src/core/factory/criteria.factory';\nimport template from './sw-catalog-detail.html.twig';\nimport './sw-catalog-detail.less';\n\nComponent.register('sw-catalog-detail', {\n    template,\n\n    inject: ['catalogService'],\n\n    data() {\n        return {\n            catalogId: null,\n            catalog: {},\n            categories: [],\n            aggregations: {},\n            addCategoryName: '',\n            currentEditCategory: null,\n            isLoading: false\n        };\n    },\n\n    computed: {\n        catalogStore() {\n            return State.getStore('catalog');\n        },\n\n        categoryStore() {\n            return State.getStore('category');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.catalogId = this.$route.params.id;\n                this.catalog = this.catalogStore.getById(this.catalogId);\n\n                this.getAggregations();\n                this.getCategories();\n            }\n        },\n\n        getCategories(parentId = null, searchTerm = null) {\n            const criteria = [];\n            const params = {\n                page: 1,\n                limit: 500\n            };\n\n            criteria.push(CriteriaFactory.term('catalogId', this.catalogId));\n\n            if (parentId !== false) {\n                criteria.push(CriteriaFactory.term('parentId', parentId));\n            }\n\n            params.criteria = CriteriaFactory.nested('AND', ...criteria);\n\n            if (searchTerm !== null) {\n                params.term = searchTerm;\n            }\n\n            this.isLoading = searchTerm !== null || parentId === null;\n\n            return this.categoryStore.getList(params).then((response) => {\n                response.items.forEach((category) => {\n                    if (typeof this.categories.find(c => c.id === category.id) !== 'undefined') {\n                        return;\n                    }\n\n                    this.categories.push(category);\n                });\n\n                this.isLoading = false;\n                return response.items;\n            });\n        },\n\n        getAggregations() {\n            const aggregateParams = {\n                page: 1,\n                limit: 1,\n                aggregations: {\n                    productCount: {\n                        count: { field: 'catalog.products.id' }\n                    },\n                    categoryCount: {\n                        count: { field: 'catalog.categories.id' }\n                    },\n                    mediaCount: {\n                        count: { field: 'catalog.media.id' }\n                    }\n                },\n                criteria: CriteriaFactory.term('id', this.catalogId)\n            };\n\n            return this.catalogService.getList(aggregateParams).then((response) => {\n                this.aggregations = response.aggregations;\n            });\n        },\n\n        onAddCategory() {\n            if (!this.addCategoryName.length || this.addCategoryName.length <= 0) {\n                return;\n            }\n\n            const newCategory = this.categoryStore.create();\n\n            newCategory.name = this.addCategoryName;\n            newCategory.catalogId = this.catalogId;\n            newCategory.parentId = null;\n            newCategory.position = 0;\n\n            this.categories.forEach((category) => {\n                if (category.parentId === null) {\n                    category.position += 1;\n                }\n            });\n\n            this.categories.push(newCategory);\n            this.addCategoryName = '';\n        },\n\n        onAddChildCategory(item) {\n            if (!item || !item.data || !item.data.id || this.currentEditCategory !== null) {\n                return;\n            }\n\n            this.getCategories(item.data.id).then(() => {\n                const parentCategory = item.data;\n                const newCategory = this.categoryStore.create();\n\n                newCategory.name = '';\n                newCategory.catalogId = this.catalogId;\n                newCategory.parentId = parentCategory.id;\n                newCategory.position = 0;\n\n                this.categories.forEach((category) => {\n                    if (category.parentId === parentCategory.id) {\n                        category.position += 1;\n                    }\n                });\n\n                parentCategory.childCount += 1;\n\n                this.categories.push(newCategory);\n                this.currentEditCategory = newCategory.id;\n            });\n        },\n\n        onEditCategory(item) {\n            this.currentEditCategory = item.id;\n\n            this.$nextTick(() => {\n                const categoryNameField = this.$el.querySelector('.sw-catalog-detail__edit-category-field input');\n                categoryNameField.focus();\n            });\n        },\n\n        onEditCategoryFinish() {\n            this.currentEditCategory = null;\n        },\n\n        onDeleteCategory(item) {\n            item.data.delete();\n        },\n\n        searchCategories(searchTerm) {\n            let parentId = false;\n\n            if (searchTerm === null || !searchTerm.length) {\n                parentId = null;\n            }\n\n            this.categories = [];\n            return this.getCategories(parentId, searchTerm);\n        },\n\n        onSave() {\n            this.isLoading = true;\n            const associatedCategoryStore = this.catalog.getAssociation('categories');\n            const titleSaveError = this.$tc('global.notification.notificationSaveErrorTitle');\n            const messageSaveError = this.$tc(\n                'global.notification.notificationSaveErrorMessage', 0, { entityName: this.catalog.name }\n            );\n\n            Object.keys(this.categoryStore.store).forEach((id) => {\n                const category = this.categoryStore.store[id];\n\n                if (!category.catalogId === this.catalogId) {\n                    return;\n                }\n\n                associatedCategoryStore.add(category);\n            });\n\n            return this.catalog.save().then((response) => {\n                this.isLoading = false;\n                return response;\n            }).catch((exception) => {\n                this.createNotificationError({\n                    title: titleSaveError,\n                    message: messageSaveError\n                });\n                warn(this._name, exception.message, exception.response);\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-catalog-create.html.twig';\n\nComponent.extend('sw-catalog-create', 'sw-catalog-detail', {\n    template,\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.catalog.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.catalogStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then((catalog) => {\n                this.$router.push({ name: 'sw.catalog.detail', params: { id: catalog.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './page/sw-catalog-list';\nimport './page/sw-catalog-detail';\nimport './page/sw-catalog-create';\n\nModule.register('sw-catalog', {\n    type: 'core',\n    name: 'Catalogues',\n    description: 'The module for managing catalogues.',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#FF85C2',\n    icon: 'default-package-closed',\n\n    routes: {\n        index: {\n            component: 'sw-catalog-list',\n            path: 'index'\n        },\n\n        detail: {\n            component: 'sw-catalog-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.catalog.index'\n            }\n        },\n\n        create: {\n            component: 'sw-catalog-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.catalog.index'\n            }\n        }\n    },\n\n    navigation: [{\n        id: 'sw-catalog',\n        path: 'sw.catalog.index',\n        label: 'sw-catalog.general.mainMenuItemIndex',\n        color: '#FF85C2',\n        icon: 'default-package-closed',\n        position: 30\n    }, {\n        path: 'sw.catalog.index',\n        parent: 'sw-catalog',\n        label: 'sw-catalog.general.mainMenuItemList'\n    }, {\n        path: 'sw.catalog.create',\n        parent: 'sw-catalog',\n        label: 'sw-catalog.general.mainMenuItemCreate',\n        color: '#FF85C2'\n    }]\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-customer-list.html.twig';\nimport './sw-customer-list.less';\n\nComponent.register('sw-customer-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            customers: [],\n            isLoading: false\n        };\n    },\n\n    created() {\n        this.$root.$on('search', this.onSearch);\n    },\n\n    destroyed() {\n        this.$root.$off('search', this.onSearch);\n    },\n\n    computed: {\n        customerStore() {\n            return Shopware.State.getStore('customer');\n        }\n    },\n\n    methods: {\n        onInlineEditSave(customer) {\n            this.isLoading = true;\n\n            customer.save().then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n\n            this.customers = [];\n\n            // Use the customer number as the default sorting\n            if (!params.sortBy && !params.sortDirection) {\n                params.sortBy = 'customerNumber';\n                params.sortDirection = 'DESC';\n            }\n\n            return this.customerStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.customers = response.items;\n                this.isLoading = false;\n\n                return this.customers;\n            });\n        }\n    }\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-customer-detail.html.twig';\n\nComponent.register('sw-customer-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    beforeRouteLeave(to, from, next) {\n        this.customerEditMode = false;\n        next();\n    },\n\n    data() {\n        return {\n            customer: {},\n            customerId: null,\n            customerEditMode: false,\n            customerGroups: [],\n            salesChannels: [],\n            countries: [],\n            addresses: [],\n            paymentMethods: []\n        };\n    },\n\n    computed: {\n        customerStore() {\n            return State.getStore('customer');\n        },\n\n        customerGroupStore() {\n            return State.getStore('customer_group');\n        },\n\n        countryStore() {\n            return State.getStore('country');\n        },\n\n        salesChannelStore() {\n            return State.getStore('sales_channel');\n        },\n\n        customerAddressStore() {\n            return this.customer.getAssociation('addresses');\n        },\n\n        paymentMethodStore() {\n            return State.getStore('payment_method');\n        },\n\n        customerName() {\n            const customer = this.customer;\n\n            if (!customer.salutation && !customer.firstName && !customer.lastName) {\n                return '';\n            }\n\n            const salutation = customer.salutation ? customer.salutation : '';\n            const firstName = customer.firstName ? customer.firstName : '';\n            const lastName = customer.lastName ? customer.lastName : '';\n\n            return `${salutation} ${firstName} ${lastName}`;\n        },\n\n        isCreateCustomer() {\n            return this.$route.name.includes('sw.customer.create');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.customerId = this.$route.params.id;\n                this.customer = this.customerStore.getById(this.customerId);\n\n                this.customerAddressStore.getList({\n                    limit: 10,\n                    page: 1\n                });\n\n                this.salesChannelStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.salesChannels = response.items;\n                });\n\n                this.customerGroupStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.customerGroups = response.items;\n                });\n\n                this.countryStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.countries = response.items;\n                });\n\n                this.paymentMethodStore.getList({ page: 1, limit: 100 }).then((response) => {\n                    this.paymentMethods = response.items;\n                });\n            }\n\n            if (this.$route.params.edit === 'edit') {\n                this.customerEditMode = true;\n            }\n        },\n\n        onSave() {\n            const customerName = this.customerName;\n            const titleSaveSuccess = this.$tc('sw-customer.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-customer.detail.messageSaveSuccess', 0, { name: customerName });\n\n            return this.customer.save().then(() => {\n                this.customerEditMode = false;\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        },\n\n        onDisableCustomerEditMode() {\n            this.customerEditMode = false;\n        },\n\n        onActivateCustomerEditMode() {\n            this.customerEditMode = true;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-customer-create.html.twig';\n\nComponent.extend('sw-customer-create', 'sw-customer-detail', {\n    template,\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.customer.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            this.customer = this.customerStore.create(this.$route.params.id);\n            const customerAddressesStore = this.customer.getAssociation('addresses');\n\n            const defaultAddress = customerAddressesStore.create();\n            defaultAddress.customerId = this.customer.id;\n\n            this.customer.defaultBillingAddressId = defaultAddress.id;\n            this.customer.defaultShippingAddressId = defaultAddress.id;\n\n            // ToDo: Change to actual password strategy\n            this.customer.password = 'shopware';\n\n            this.$super.createdComponent();\n\n            this.customerEditMode = true;\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.customer.detail', params: { id: this.customer.id } });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-customer-detail-base.html.twig';\nimport './sw-customer-detail-base.less';\n\nComponent.register('sw-customer-detail-base', {\n    template,\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        customerEditMode: {\n            type: Boolean,\n            required: true,\n            default: false\n        },\n        customerName: {\n            type: String,\n            required: true,\n            default: ''\n        },\n        salesChannels: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        customerGroups: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        paymentMethods: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        countries: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        }\n    },\n\n    computed: {\n        editMode() {\n            return this.customerEditMode;\n        }\n    },\n\n    methods: {\n        onActivateCustomerEditMode() {\n            this.$emit('activateCustomerEditMode');\n        }\n    }\n});\n","import { Component, Entity } from 'src/core/shopware';\nimport { object } from 'src/core/service/util.service';\nimport { required } from 'src/core/service/validation.service';\nimport template from './sw-customer-detail-addresses.html.twig';\nimport './sw-customer-detail-addresses.less';\n\nComponent.register('sw-customer-detail-addresses', {\n    template,\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        countries: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        }\n    },\n\n    data() {\n        return {\n            showAddAddressModal: false,\n            showEditAddressModal: false,\n            showDeleteAddressModal: false,\n            currentAddress: null\n        };\n    },\n\n    computed: {\n        customerAddressStore() {\n            return this.customer.getAssociation('addresses');\n        }\n    },\n\n    methods: {\n        onCreateNewAddress() {\n            this.showAddAddressModal = true;\n            this.createNewCustomerAddress();\n        },\n\n        createNewCustomerAddress() {\n            const newAddress = this.createEmptyAddress();\n\n            newAddress.customerId = this.customer.id;\n\n            this.currentAddress = newAddress;\n        },\n\n        onSaveAddress() {\n            if (this.currentAddress === null) {\n                return;\n            }\n\n            if (!this.isValidAddress(this.currentAddress)) {\n                return;\n            }\n\n            const address = this.customer.addresses.find(a => a.id === this.currentAddress.id);\n\n            if (typeof address === 'undefined') {\n                this.customer.addresses.push(this.currentAddress);\n            } else {\n                Object.assign(address, this.currentAddress);\n            }\n\n            this.currentAddress = null;\n        },\n\n        isValidAddress(address) {\n            const requiredAddressFields = Entity.getRequiredProperties('customer_address');\n            let isValid = true;\n\n            isValid = requiredAddressFields.every((field) => {\n                return required(address[field]);\n            });\n\n            return isValid;\n        },\n\n        onCloseAddressModal() {\n            this.currentAddress = null;\n        },\n\n        createEmptyAddress() {\n            return this.customerAddressStore.create();\n        },\n\n        onEditAddress(id) {\n            this.currentAddress = object.deepCopyObject(this.customer.addresses.find(a => a.id === id));\n            this.showEditAddressModal = id;\n        },\n\n        onDeleteAddress(id) {\n            if (this.isDefaultAddress(id)) {\n                return;\n            }\n            this.showDeleteAddressModal = id;\n        },\n\n        onConfirmDeleteAddress(id) {\n            this.customerAddressStore.getById(id).delete();\n            this.customer.addresses = this.customer.addresses.filter(a => a.id !== id);\n        },\n\n        onCloseDeleteAddressModal() {\n            this.showDeleteAddressModal = false;\n        },\n\n        isDefaultAddress(addressId) {\n            return this.customer.defaultBillingAddressId === addressId ||\n                this.customer.defaultShippingAddressId === addressId;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-customer-create-base.html.twig';\n\nComponent.extend('sw-customer-create-base', 'sw-customer-detail-base', {\n    template,\n\n    computed: {\n        defaultAddress() {\n            return this.customer.getAssociation('addresses').getById(this.customer.defaultBillingAddressId);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-customer-base-form.html.twig';\n\nComponent.register('sw-customer-base-form', {\n    template,\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        salesChannels: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        customerGroups: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        paymentMethods: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-customer-base-info.html.twig';\n\nComponent.register('sw-customer-base-info', {\n    template,\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n            default: {}\n        }\n    },\n\n    methods: {\n        onEditCustomer() {\n            this.$emit('activateCustomerEditMode');\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-customer-address-form.html.twig';\n\nComponent.register('sw-customer-address-form', {\n    template,\n\n    props: {\n        address: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        countries: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-customer-default-addresses.html.twig';\nimport './sw-customer-default.addresses.less';\n\nComponent.register('sw-customer-default-addresses', {\n    template,\n\n    props: {\n        customer: {\n            type: Object,\n            required: true,\n            default: {}\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './page/sw-customer-list';\nimport './page/sw-customer-detail';\nimport './page/sw-customer-create';\nimport './view/sw-customer-detail-base';\nimport './view/sw-customer-detail-addresses';\nimport './view/sw-customer-create-base';\nimport './component/sw-customer-base-form';\nimport './component/sw-customer-base-info';\nimport './component/sw-customer-address-form';\nimport './component/sw-customer-default-addresses';\n\nModule.register('sw-customer', {\n    type: 'core',\n    name: 'Customers',\n    description: 'sw-customer.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#F88962',\n    icon: 'default-avatar-multiple',\n\n    routes: {\n        index: {\n            components: {\n                default: 'sw-customer-list'\n            },\n            path: 'index'\n        },\n\n        create: {\n            component: 'sw-customer-create',\n            path: 'create',\n            redirect: {\n                name: 'sw.customer.create.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-customer-create-base',\n                    path: 'base',\n                    meta: {\n                        parentPath: 'sw.customer.index'\n                    }\n                }\n            }\n        },\n\n        detail: {\n            component: 'sw-customer-detail',\n            path: 'detail/:id',\n            redirect: {\n                name: 'sw.customer.detail.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-customer-detail-base',\n                    path: 'base/:edit?',\n                    meta: {\n                        parentPath: 'sw.customer.index'\n                    }\n                },\n                addresses: {\n                    component: 'sw-customer-detail-addresses',\n                    path: 'addresses',\n                    meta: {\n                        parentPath: 'sw.customer.index'\n                    }\n                }\n            }\n        }\n    },\n\n    navigation: [{\n        id: 'sw-customer',\n        label: 'sw-customer.general.mainMenuItemGeneral',\n        color: '#F88962',\n        path: 'sw.customer.index',\n        icon: 'default-avatar-multiple',\n        position: 50\n    }, {\n        path: 'sw.customer.index',\n        label: 'sw-customer.general.mainMenuItemList',\n        color: '#F88962',\n        icon: 'default-avatar-multiple',\n        parent: 'sw-customer'\n    }, {\n        path: 'sw.customer.create',\n        label: 'sw-customer.general.mainMenuItemAdd',\n        parent: 'sw-customer',\n        color: '#F88962'\n    }]\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-manufacturer-list.html.twig';\n\nComponent.register('sw-manufacturer-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            manufacturers: [],\n            showDeleteModal: false,\n            isLoading: false\n        };\n    },\n\n    computed: {\n        manufacturerStore() {\n            return State.getStore('product_manufacturer');\n        }\n    },\n\n    methods: {\n        onInlineEditSave(manufacturer) {\n            this.isLoading = true;\n\n            return manufacturer.save().then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        onDeleteManufacturer(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            this.showDeleteModal = false;\n\n            return this.manufacturerStore.store[id].delete(true).then(() => {\n                this.getList();\n            }).catch(this.onCloseDeleteModal());\n        },\n\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n\n            this.manufacturers = [];\n\n            return this.manufacturerStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.manufacturers = response.items;\n                this.isLoading = false;\n\n                return this.manufacturers;\n            });\n        }\n    }\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport { warn } from 'src/core/service/utils/debug.utils';\nimport template from './sw-manufacturer-detail.html.twig';\nimport './sw-manufacturer-detail.less';\n\nComponent.register('sw-manufacturer-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            manufacturerId: null,\n            manufacturer: {}\n        };\n    },\n\n    computed: {\n        manufacturerStore() {\n            return State.getStore('product_manufacturer');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.manufacturerId = this.$route.params.id;\n                this.manufacturer = this.manufacturerStore.getById(this.manufacturerId);\n            }\n        },\n\n        onSave() {\n            const manufacturerName = this.manufacturer.name;\n            const titleSaveSuccess = this.$tc('sw-manufacturer.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-manufacturer.detail.messageSaveSuccess', 0, { name: manufacturerName });\n            const titleSaveError = this.$tc('global.notification.notificationSaveErrorTitle');\n            const messageSaveError = this.$tc(\n                'global.notification.notificationSaveErrorMessage', 0, { entityName: manufacturerName }\n            );\n\n            this.manufacturer.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            }).catch((exception) => {\n                this.createNotificationError({\n                    title: titleSaveError,\n                    message: messageSaveError\n                });\n                warn(this._name, exception.message, exception.response);\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-manufacturer-create', 'sw-manufacturer-detail', {\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.manufacturer.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.manufacturerStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            const manufacturerName = this.manufacturer.name;\n            const titleSaveSuccess = this.$tc('sw-manufacturer.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-manufacturer.detail.messageSaveSuccess', 0, { name: manufacturerName });\n\n            this.manufacturer.save().then((manufacturer) => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n\n                this.$router.push({ name: 'sw.manufacturer.detail', params: { id: manufacturer.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './page/sw-manufacturer-list';\nimport './page/sw-manufacturer-detail';\nimport './page/sw-manufacturer-create';\n\nModule.register('sw-manufacturer', {\n    type: 'core',\n    name: 'Manufacturer',\n    description: 'Manages the manufacturer of the application',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#57D9A3',\n    icon: 'default-symbol-products',\n\n    routes: {\n        index: {\n            components: {\n                default: 'sw-manufacturer-list'\n            },\n            path: 'index'\n        },\n        create: {\n            component: 'sw-manufacturer-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.manufacturer.index'\n            }\n        },\n        detail: {\n            component: 'sw-manufacturer-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.manufacturer.index'\n            }\n        }\n    },\n\n    navigation: [{\n        path: 'sw.manufacturer.index',\n        label: 'sw-manufacturer.general.mainMenuItemList',\n        parent: 'sw-product',\n        color: '#57D9A3'\n    }]\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-order-list.html.twig';\nimport './sw-order-list.less';\n\nComponent.register('sw-order-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            orders: [],\n            isLoading: false\n        };\n    },\n\n    computed: {\n        orderStore() {\n            return State.getStore('order');\n        }\n    },\n\n    created() {\n        this.$root.$on('search', this.onSearch);\n    },\n\n    destroyed() {\n        this.$root.$off('search', this.onSearch);\n    },\n\n    methods: {\n        onEdit(order) {\n            if (order && order.id) {\n                this.$router.push({\n                    name: 'sw.order.detail',\n                    params: {\n                        id: order.id\n                    }\n                });\n            }\n        },\n\n        onInlineEditSave(order) {\n            this.isLoading = true;\n\n            order.save().then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        },\n\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n\n            this.orders = [];\n\n            // Use the order date as the default sorting\n            if (!params.sortBy && !params.sortDirection) {\n                params.sortBy = 'date';\n                params.sortDirection = 'DESC';\n            }\n\n            return this.orderStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.orders = response.items;\n                this.isLoading = false;\n\n                return this.orders;\n            });\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport template from './sw-order-detail.html.twig';\nimport './sw-order-detail.less';\n\nComponent.register('sw-order-detail', {\n    template,\n\n    data() {\n        return {\n            order: {},\n            orderId: null\n        };\n    },\n\n    computed: {\n        orderStore() {\n            return State.getStore('order');\n        },\n        lineItemsStore() {\n            return this.order.getAssociation('lineItems');\n        },\n\n        deliveriesStore() {\n            return this.order.getAssociation('deliveries');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            this.orderId = this.$route.params.id;\n            this.order = this.orderStore.getById(this.orderId);\n\n            this.lineItemsStore.getList({\n                page: 1,\n                limit: 25\n            });\n\n            this.deliveriesStore.getList({\n                page: 1,\n                limit: 50\n            });\n        },\n\n        onSave() {\n            // TODO: Implement save order\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-order-detail-base.html.twig';\nimport './sw-order-detail-base.less';\n\nComponent.register('sw-order-detail-base', {\n    template,\n\n    props: {\n        order: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-order-detail-deliveries.html.twig';\n\nComponent.register('sw-order-detail-deliveries', {\n    template,\n\n    props: {\n        order: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-order-line-items-grid.html.twig';\nimport './sw-order-line-items-grid.less';\n\nComponent.register('sw-order-line-items-grid', {\n    template,\n\n    props: {\n        orderLineItems: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        order: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-order-delivery-line-items-grid.html.twig';\nimport './sw-order-delivery-line-items-grid.less';\n\nComponent.register('sw-order-delivery-line-items-grid', {\n    template,\n\n    props: {\n        deliveryLineItems: {\n            type: Array,\n            required: true,\n            default() {\n                return [];\n            }\n        },\n        order: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-order-delivery.html.twig';\nimport './sw-order-delivery.less';\n\nComponent.register('sw-order-delivery', {\n    template,\n\n    props: {\n        delivery: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        },\n        title: {\n            type: String,\n            required: false\n        },\n        order: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        }\n    },\n\n    data() {\n        return {\n            isLoading: false\n        };\n    },\n\n    computed: {\n        positionsStore() {\n            return this.delivery.getAssociation('positions');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.isLoading = true;\n            this.positionsStore.getList({\n                page: 1,\n                limit: 50\n            }).then(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './page/sw-order-list';\nimport './page/sw-order-detail';\nimport './view/sw-order-detail-base';\nimport './view/sw-order-detail-deliveries';\nimport './component/sw-order-line-items-grid';\nimport './component/sw-order-delivery-line-items-grid';\nimport './component/sw-order-delivery';\n\nModule.register('sw-order', {\n    type: 'core',\n    name: 'Orders',\n    description: 'sw-order.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#A092F0',\n    icon: 'default-shopping-paper-bag',\n\n    routes: {\n        index: {\n            components: {\n                default: 'sw-order-list',\n                sidebar: 'sw-order-sidebar'\n            },\n            path: 'index'\n        },\n\n        detail: {\n            component: 'sw-order-detail',\n            path: 'detail/:id',\n            redirect: {\n                name: 'sw.order.detail.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-order-detail-base',\n                    path: 'base',\n                    meta: {\n                        parentPath: 'sw.order.index'\n                    }\n                },\n                deliveries: {\n                    component: 'sw-order-detail-deliveries',\n                    path: 'deliveries',\n                    meta: {\n                        parentPath: 'sw.order.index'\n                    }\n                }\n            }\n        }\n    },\n\n    navigation: [{\n        id: 'sw-order',\n        label: 'sw-order.general.mainMenuItemGeneral',\n        color: '#A092F0',\n        path: 'sw.order.index',\n        icon: 'default-shopping-paper-bag',\n        position: 60\n    }, {\n        path: 'sw.order.index',\n        label: 'sw-order.general.mainMenuItemList',\n        parent: 'sw-order'\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-modal-delete.html.twig';\n\nComponent.register('sw-media-modal-delete', {\n    template,\n    props: {\n        itemsToDelete: {\n            required: false,\n            type: Array,\n            validator(value) {\n                return (value.length !== 0);\n            }\n        }\n    },\n\n    computed: {\n        showModal() {\n            return this.itemsToDelete !== null;\n        }\n    },\n\n    methods: {\n        closeDeleteModal(originalDomEvent) {\n            this.$emit('sw-media-modal-delete-close', { originalDomEvent });\n        },\n\n        deleteSelection(originalDomEvent) {\n            this.$emit('sw-media-modal-delete-delete', { originalDomEvent, itemsToDelete: this.itemsToDelete });\n        }\n    }\n});\n","import { warn } from 'src/core/service/utils/debug.utils';\n\nconst mediaMediaGridListener = {\n    computed: {\n        mediaMediaGridListener() {\n            return {\n                'sw-media-grid-selection-clear': this.handleMediaGridSelectionRemoved,\n                'sw-media-grid-item-selection-add': this.handleMediaGridItemSelected,\n                'sw-media-grid-item-selection-remove': this.handleMediaGridItemUnselected,\n                'sw-media-grid-media-item-show-details': this.handleMediaGridItemShowDetails,\n                'sw-media-grid-media-item-delete': this.handleMediaGridItemDelete,\n                'sw-media-grid-media-item-replace': this.handleMediaGridItemReplace\n            };\n        }\n    },\n\n    methods: {\n        handleMediaGridSelectionRemoved() {\n            warn('handleMediaGridSelectionRemoved', 'Handler must be overriden in component');\n        },\n\n        handleMediaGridItemSelected() {\n            warn('handleMediaGridItemSelected', 'Handler must be overriden in component');\n        },\n\n        handleMediaGridItemUnselected() {\n            warn('handleMediaGridItemSelected', 'Handler must be overriden in component');\n        },\n\n        handleMediaGridItemShowDetails() {\n            warn('handleMediaGridItemShowDetails', 'Handler must be overriden in component');\n        },\n\n        handleMediaGridItemDelete() {\n            warn('handleMediaGridItemDelete', 'Handler must be overriden in component');\n        },\n\n        handleMediaGridItemReplace() {\n            warn('handleMediaGridItemReplace', 'Handler must be overriden in component');\n        }\n    }\n};\n\nexport default mediaMediaGridListener;\n","import { warn } from 'src/core/service/utils/debug.utils';\n\nconst mediaSidebarListener = {\n    computed: {\n        mediaSidebarListener() {\n            return {\n                'sw-media-sidebar-move-batch': this.handleSidebarMoveBatchRequest,\n                'sw-media-sidebar-remove-batch': this.handleSidebarRemoveBatchRequest,\n                'sw-media-sidebar-quickaction-replace-item': this.handleSidebarReplaceItem,\n                'sw-media-sidebar-quickaction-move-item': this.handleSidebarMoveItem,\n                'sw-media-sidebar-quickaction-remove-item': this.handleSidebarRemoveItem\n            };\n        }\n    },\n\n    methods: {\n        handleSidebarMoveBatchRequest() {\n            warn('handleSidebarMoveBatchRequest', 'Handler must be overriden in component');\n        },\n\n        handleSidebarRemoveBatchRequest() {\n            warn('handleSidebarRemoveBatchRequest', 'Handler must be overriden in component');\n        },\n\n        handleSidebarReplaceItem() {\n            warn('handleSidebarReplaceItem', 'Handler must be overriden in component');\n        },\n\n        handleSidebarMoveItem() {\n            warn('handleSidebarMoveItem', 'Handler must be overriden in component');\n        },\n\n        handleSidebarRemoveItem() {\n            warn('handleSidebarRemoveItem', 'Handler must be overriden in component');\n        }\n    }\n};\n\nexport default mediaSidebarListener;\n","import { Component, State } from 'src/core/shopware';\nimport CriteriaFactory from 'src/core/factory/criteria.factory';\nimport '../../component/sw-media-modal-delete';\nimport mediaMediaGridListener from '../../mixin/mediagrid.listener.mixin';\nimport mediaSidebarListener from '../../mixin/sibebar.listener.mixin';\nimport template from './sw-media-index.html.twig';\nimport './sw-media-index.less';\n\nComponent.register('sw-media-index', {\n    template,\n\n    mixins: [\n        mediaMediaGridListener,\n        mediaSidebarListener\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            catalogs: [],\n            mediaItems: [],\n            lastSelectedItem: null,\n            selectionToDelete: null,\n            mediaItemToReplace: null,\n            searchId: this.$route.query.mediaId\n        };\n    },\n\n    computed: {\n        catalogStore() {\n            return State.getStore('catalog');\n        },\n\n        mediaItemStore() {\n            return State.getStore('media');\n        },\n\n        isSearch() {\n            return this.searchId !== null && this.searchId !== undefined;\n        }\n    },\n\n    created() {\n        this.createComponent();\n    },\n\n    beforeRouteUpdate(to, from, next) {\n        if (to.query.mediaId) {\n            this.searchId = to.query.mediaId;\n        } else {\n            this.searchId = null;\n        }\n        this.loadMedia();\n        next();\n    },\n\n    methods: {\n        createComponent() {\n            this.isLoading = true;\n\n            this.catalogStore.getList({ page: 1, limit: 10 }).then((response) => {\n                this.catalogs = response.items;\n            });\n            this.loadMedia();\n        },\n\n        getLastSelectedItem() {\n            const selection = this.$refs.mediaGrid.selection;\n\n            if (selection.length === 0) {\n                this.lastSelectedItem = null;\n                return;\n            }\n\n            this.lastSelectedItem = selection[selection.length - 1];\n        },\n\n        handleMediaGridSelectionRemoved() {\n            this.getLastSelectedItem();\n        },\n\n        handleMediaGridItemSelected() {\n            this.getLastSelectedItem();\n        },\n\n        handleMediaGridItemUnselected() {\n            this.getLastSelectedItem();\n        },\n\n        handleMediaGridItemReplace({ item }) {\n            this.mediaItemToReplace = item;\n        },\n\n        handleMediaGridItemShowDetails({ item }) {\n            this.lastSelectedItem = item;\n            this.$refs.mediaSidebar.showQuickInfo();\n        },\n\n        handleSidebarRemoveItem({ item }) {\n            this.selectionToDelete = [item];\n        },\n\n        handleSidebarRemoveBatchRequest() {\n            this.selectionToDelete = this.$refs.mediaGrid.selection;\n        },\n\n        handleMediaGridItemDelete({ item }) {\n            this.selectionToDelete = [item];\n        },\n\n        closeDeleteModal() {\n            this.selectionToDelete = null;\n        },\n\n        deleteSelection() {\n            const mediaItemsDeletion = [];\n            this.isLoading = true;\n\n            this.selectionToDelete.forEach((element) => {\n                mediaItemsDeletion.push(this.mediaItemStore.getById(element.id).delete(true));\n            });\n\n            Promise.all(mediaItemsDeletion).then(() => {\n                this.selectionToDelete = null;\n                this.loadMedia();\n            });\n        },\n\n        handleSidebarReplaceItem({ item }) {\n            this.mediaItemToReplace = item;\n        },\n\n        closeReplaceModal() {\n            this.mediaItemToReplace = null;\n        },\n\n        handleItemReplaced(replacementPromise) {\n            this.closeReplaceModal();\n\n            replacementPromise.then(() => {\n                this.loadMedia();\n            });\n        },\n\n        loadMedia() {\n            if (this.isSearch) {\n                this.loadSearchedMedia();\n                this.isLoading = false;\n                return;\n            }\n\n            this.loadLastAddedMedia();\n            this.isLoading = false;\n        },\n\n        loadLastAddedMedia() {\n            this.mediaItemStore.getList({\n                page: 1,\n                limit: 10,\n                sortBy: 'createdAt',\n                sortDirection: 'desc'\n            }).then((response) => {\n                this.mediaItems = response.items;\n            });\n        },\n\n        loadSearchedMedia() {\n            const params = {\n                limit: 1,\n                page: 1,\n                criteria: CriteriaFactory.term('id', this.searchId),\n                sortBy: 'createdAt',\n                sortDirection: 'desc'\n            };\n\n            this.mediaItemStore.getList(params).then((response) => {\n                this.mediaItems = response.items;\n                this.lastSelectedItem = this.mediaItems[0];\n                this.handleMediaGridItemShowDetails({ item: this.mediaItems[0] });\n            });\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport util, { fileReader } from 'src/core/service/util.service';\nimport template from './sw-media-upload.html.twig';\nimport './sw-media-upload.less';\n\nComponent.register('sw-media-upload', {\n    template,\n\n    inject: ['mediaService'],\n\n    props: {\n        catalogId: {\n            required: true,\n            type: String\n        }\n    },\n\n    computed: {\n        mediaItemStore() {\n            return State.getStore('media');\n        }\n    },\n\n    methods: {\n        onClickUpload() {\n            this.$refs.fileInput.click();\n        },\n\n        onFileInputChange() {\n            const newMediaFiles = Array.from(this.$refs.fileInput.files);\n            const uploads = newMediaFiles.map(this.addMediaEntityFromFile);\n\n            Promise.all(uploads).then(() => {\n                this.$emit('new-media-entity');\n            });\n        },\n\n        addMediaEntityFromFile(file) {\n            return fileReader.readAsDataURL(file).then((url) => {\n                const mediaEntity = this.mediaItemStore.create(util.createId(),\n                    {\n                        catalogId: this.catalogId,\n                        extensions: { links: { url } }\n                    });\n\n                mediaEntity.name = file.name;\n\n                return mediaEntity.save().then(() => {\n                    return fileReader.readAsArrayBuffer(file).then((buffer) => {\n                        return this.mediaService.uploadMediaById(\n                            mediaEntity.id,\n                            file.type,\n                            buffer,\n                            file.name.split('.').pop()\n                        );\n                    });\n                }).catch(() => {\n                    mediaEntity.delete(true);\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport { debug, fileReader } from 'src/core/service/util.service';\nimport template from './sw-media-modal-replace.html.twig';\nimport './sw-media-modal-replace.less';\n\nComponent.register('sw-media-modal-replace', {\n    template,\n\n    inject: ['mediaService'],\n\n    props: {\n        itemToReplace: {\n            type: Object,\n            required: false\n        }\n    },\n\n    data() {\n        return {\n            uploadData: null,\n            previewMediaEntity: null\n        };\n    },\n\n    computed: {\n        showReplaceModal() {\n            return this.itemToReplace !== null;\n        }\n    },\n\n    methods: {\n        emitCloseReplaceModal() {\n            this.$emit('sw-media-modal-replace-close');\n        },\n\n        onClickUpload() {\n            this.$refs.fileInput.click();\n        },\n\n        onFileInputChange() {\n            const file = Array.from(this.$refs.fileInput.files).pop();\n\n            this.previewMediaEntity = null;\n            this.uploadData = {\n                type: 'file',\n                data: file\n            };\n\n            fileReader.readAsDataURL(file).then((result) => {\n                this.previewMediaEntity = {\n                    name: this.uploadData.data.name,\n                    mimeType: 'in-memory-file',\n                    dataUrl: result\n                };\n            });\n        },\n\n        replaceMediaItem() {\n            if (this.uploadData === null) {\n                return;\n            }\n\n            if (this.uploadData.type === 'URL') {\n                this.replaceMediaFromUrl();\n            }\n\n            if (this.uploadData.type === 'file') {\n                this.replaceMediaFromFile();\n            }\n\n            this.uploadData = null;\n        },\n\n        replaceMediaFromUrl() {\n            debug.warn('Uploading from Url is not supported right now');\n        },\n\n        replaceMediaFromFile() {\n            const mediaId = this.itemToReplace.id;\n            const mimeType = this.uploadData.data.type;\n            const fileExtension = this.uploadData.data.name.split('.').pop();\n\n            const replaceFromFile = fileReader.readAsArrayBuffer(this.uploadData.data).then((fileAsArray) => {\n                return this.mediaService.uploadMediaById(\n                    mediaId,\n                    mimeType,\n                    fileAsArray,\n                    fileExtension\n                );\n            });\n\n            this.emitReplaceStarted(replaceFromFile);\n        },\n\n        emitReplaceStarted(itemUpload) {\n            this.$emit('sw-media-modal-replace-confirmed', itemUpload);\n        },\n\n        removeSelectedFile() {\n            this.uploadData = null;\n            this.previewMediaEntity = null;\n        }\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport CriteriaFactory from 'src/core/factory/criteria.factory';\nimport mediaMediaGridListener from '../../mixin/mediagrid.listener.mixin';\nimport mediaSidebarListener from '../../mixin/sibebar.listener.mixin';\nimport '../../component/sw-media-upload';\nimport template from './sw-media-catalog.html.twig';\nimport './sw-media-catalog.less';\nimport '../../component/sw-media-modal-delete';\nimport '../../component/sw-media-modal-replace';\n\nComponent.register('sw-media-catalog', {\n    template,\n\n    mixins: [\n        Mixin.getByName('listing'),\n        mediaMediaGridListener,\n        mediaSidebarListener\n    ],\n\n    data() {\n        return {\n            isLoading: false,\n            previewType: 'media-grid-preview-as-grid',\n            mediaItems: [],\n            lastSelectedItem: null,\n            selectionToDelete: null,\n            mediaItemToReplace: null\n        };\n    },\n\n    computed: {\n        mediaItemStore() {\n            return State.getStore('media');\n        },\n\n        catalogStore() {\n            return State.getStore('catalog');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    destroyed() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.$root.$on('search', this.onSearch);\n        },\n\n        destroyedComponent() {\n            this.$root.$off('search', this.onSearch);\n        },\n\n        onNewMedia() {\n            this.getList();\n        },\n\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n            const catalogId = this.$route.params.id;\n\n            params.criteria = CriteriaFactory.term('catalogId', catalogId);\n            params.sortBy = 'createdAt';\n            params.sortDirection = 'dsc';\n\n            return this.mediaItemStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.mediaItems = response.items;\n                this.isLoading = false;\n\n                return this.mediaItems;\n            });\n        },\n\n        getCatalogId() {\n            return this.$route.params.id;\n        },\n\n        getLastSelectedItem() {\n            const selection = this.$refs.mediaGrid.selection;\n\n            if (selection.length === 0) {\n                this.lastSelectedItem = null;\n\n                return;\n            }\n            this.lastSelectedItem = selection[selection.length - 1];\n        },\n\n        handleMediaGridSelectionRemoved() {\n            this.getLastSelectedItem();\n        },\n\n        handleMediaGridItemSelected() {\n            this.getLastSelectedItem();\n        },\n\n        handleMediaGridItemUnselected() {\n            this.getLastSelectedItem();\n        },\n\n        handleMediaGridItemReplace({ item }) {\n            this.mediaItemToReplace = item;\n        },\n\n        handleMediaGridItemShowDetails({ item }) {\n            this.lastSelectedItem = item;\n            this.$refs.mediaSidebar.showQuickInfo();\n        },\n\n        handleSidebarRemoveItem({ item }) {\n            this.selectionToDelete = [item];\n        },\n\n        handleSidebarRemoveBatchRequest() {\n            this.selectionToDelete = this.$refs.mediaGrid.selection;\n        },\n\n        handleMediaGridItemDelete({ item }) {\n            this.selectionToDelete = [item];\n        },\n\n        closeDeleteModal() {\n            this.selectionToDelete = null;\n        },\n\n        deleteSelection() {\n            const mediaItemsDeletion = [];\n\n            this.isLoading = true;\n\n            this.selectionToDelete.forEach((element) => {\n                mediaItemsDeletion.push(this.mediaItemStore.getById(element.id).delete(true));\n            });\n\n            Promise.all(mediaItemsDeletion).then(() => {\n                this.selectionToDelete = null;\n                this.getList();\n            });\n        },\n\n        handleSidebarReplaceItem({ item }) {\n            this.mediaItemToReplace = item;\n        },\n\n        closeReplaceModal() {\n            this.mediaItemToReplace = null;\n        },\n\n        handleItemReplaced(replacementPromise) {\n            this.closeReplaceModal();\n\n            replacementPromise.then(() => {\n                this.getList();\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport 'src/app/component/base/sw-collapse';\nimport template from './sw-media-collapse.html.twig';\nimport './sw-media-collapse.less';\n\nComponent.extend('sw-media-collapse', 'sw-collapse', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            required: true\n        }\n    },\n\n    computed: {\n        expandButtonClass() {\n            return {\n                'is--hidden': this.expanded\n            };\n        },\n        collapseButtonClass() {\n            return {\n                'is--hidden': !this.expanded\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport { format } from 'src/core/service/util.service';\nimport domUtils from 'src/core/service/utils/dom.utils';\nimport '../../sw-media-collapse';\nimport template from './sw-media-quickinfo.html.twig';\nimport './sw-media-quickinfo.less';\n\nComponent.register('sw-media-quickinfo', {\n    template,\n\n    props: {\n        item: {\n            required: false,\n            type: Object,\n            validator(value) {\n                return value.type === 'media';\n            }\n        }\n    },\n\n    computed: {\n        itemIsAvailable() {\n            return this.item !== undefined && this.item !== null;\n        },\n\n        getMetadata() {\n            if (!this.itemIsAvailable) {\n                return {};\n            }\n\n            return {\n                fileName: this.item.name,\n                mimeType: this.item.mimeType,\n                fileSize: this.item.fileSize,\n                createdAt: format.date(this.item.createdAt),\n                url: this.item.url\n            };\n        }\n    },\n\n    methods: {\n        emitQuickAction(originalDomEvent, action) {\n            this.$emit(`sw-media-sidebar-quickaction-${action}`, {\n                originalDomEvent,\n                item: this.item\n            });\n        },\n\n        copyLinkToClipboard() {\n            if (this.itemIsAvailable) {\n                domUtils.copyToClipboard(this.item.url);\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-sidebar.html.twig';\nimport './sw-media-sidebar.less';\nimport '../sw-media-quickinfo';\n\nComponent.register('sw-media-sidebar', {\n    template,\n\n    props: {\n        item: {\n            required: false,\n            type: [Object],\n            validator(value) {\n                return value.type === 'media';\n            }\n        }\n    },\n\n    methods: {\n        emitRequestMoveSelection(originalDomEvent) {\n            this.$emit('sw-media-sidebar-move-batch', { originalDomEvent });\n        },\n\n        emitRequestRemoveSelection(originalDomEvent) {\n            this.$emit('sw-media-sidebar-remove-batch', { originalDomEvent });\n        },\n\n        showQuickInfo() {\n            this.$refs.quickInfoButton.toggleContentPanel(true);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport 'src/app/component/media/sw-media-grid-item';\nimport template from './sw-media-grid-catalog-item.html.twig';\nimport './sw-media-grid-catalog-item.less';\n\nComponent.extend('sw-media-grid-catalog-item', 'sw-media-grid-item', {\n    template,\n\n    props: {\n        item: {\n            required: true,\n            type: Object,\n            validator(value) {\n                return value.type !== undefined && value.type === 'catalog';\n            }\n        }\n    },\n\n    computed: {\n        gridItemListeners() {\n            return {\n                click: this.viewCatalogContent\n            };\n        }\n    },\n\n    methods: {\n        viewCatalogContent() {\n            this.$router.push({\n                name: 'sw.media.catalog-content',\n                params: { id: this.item.id }\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './page/sw-media-index';\nimport './page/sw-media-catalog';\nimport './component/sidebar/sw-media-sidebar';\nimport './component/sw-media-grid-catalog-item';\n\nModule.register('sw-media', {\n    type: 'core',\n    name: 'Media',\n    description: 'sw-media.general.descriptionTextModule',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#FFD700',\n    icon: 'default-object-image',\n\n    routes: {\n        index: {\n            components: {\n                default: 'sw-media-index'\n            },\n            path: 'index'\n        },\n        'catalog-content': {\n            components: {\n                default: 'sw-media-catalog'\n            },\n            path: 'catalog/:id'\n        }\n    },\n\n    navigation: [{\n        id: 'sw-media',\n        label: 'sw-media.general.mainMenuItemGeneral',\n        color: '#FFD700',\n        icon: 'default-object-image',\n        path: 'sw.media.index',\n        position: 40\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-integration-list.html.twig';\nimport './sw-integration-list.less';\n\nComponent.register('sw-integration-list', {\n    inject: ['integrationService'],\n\n    template,\n\n    mixins: [\n        Mixin.getByName('notification'),\n        Mixin.getByName('listing')\n    ],\n\n    data() {\n        return {\n            integrations: [],\n            isLoading: false,\n            isModalLoading: false,\n            showDeleteModal: null,\n            currentIntegration: null,\n            showSecretAccessKey: false\n        };\n    },\n\n    computed: {\n        integrationStore() {\n            return State.getStore('integration');\n        },\n        secretAccessKeyFieldType() {\n            return this.showSecretAccessKey ? 'text' : 'password';\n        }\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n\n            this.integrations = [];\n\n            // Use the integration label as the default sorting\n            if (!params.sortBy && !params.sortDirection) {\n                params.sortBy = 'label';\n                params.sortDirection = 'ASC';\n            }\n\n            return this.integrationStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.integrations = response.items;\n                this.isLoading = false;\n\n                return this.integrations;\n            });\n        },\n\n        onSaveIntegration() {\n            if (!this.currentIntegration) {\n                return;\n            }\n            const integration = this.integrations.find(a => a.id === this.currentIntegration.id);\n\n            if (typeof integration === 'undefined') {\n                this.createIntegration();\n            } else {\n                this.updateIntegration(integration);\n            }\n        },\n\n        updateIntegration(integration) {\n            this.isModalLoading = true;\n            Object.assign(integration, this.currentIntegration);\n            integration.save().then(() => {\n                this.createSavedSuccessNotification();\n            }).catch(() => {\n                this.createSavedErrorNotification();\n            }).finally(() => {\n                this.onCloseDetailModal();\n            });\n        },\n\n        createIntegration() {\n            if (!this.currentIntegration.label || this.currentIntegration.label.length < 0) {\n                this.createSavedErrorNotification();\n                return;\n            }\n\n            this.isModalLoading = true;\n\n            this.currentIntegration.save().then(() => {\n                this.createSavedSuccessNotification();\n                this.getList();\n            }).catch(() => {\n                this.createSavedErrorNotification();\n            }).finally(() => {\n                this.currentIntegration.isNew = false;\n                this.onCloseDetailModal();\n            });\n        },\n\n        createSavedSuccessNotification() {\n            this.createNotificationSuccess({\n                title: this.$tc('sw-integration.detail.titleSaveSuccess'),\n                message: this.$tc('sw-integration.detail.messageSaveSuccess')\n            });\n        },\n\n        createSavedErrorNotification() {\n            this.createNotificationError({\n                title: this.$tc('sw-integration.detail.titleSaveError'),\n                message: this.$tc('sw-integration.detail.messageSaveError')\n            });\n        },\n\n        onGenerateKeys() {\n            if (!this.currentIntegration) {\n                return;\n            }\n            this.isModalLoading = true;\n\n            this.integrationService.generateKey().then((response) => {\n                this.currentIntegration.accessKey = response.accessKey;\n                this.currentIntegration.secretAccessKey = response.secretAccessKey;\n                this.showSecretAccessKey = true;\n                this.isModalLoading = false;\n            }).catch(() => {\n                this.createNotificationError({\n                    title: this.$tc('sw-integration.detail.titleCreateNewError'),\n                    message: this.$tc('sw-integration.detail.messageCreateNewError')\n                });\n            });\n        },\n\n        onShowDetailModal(id) {\n            if (!id) {\n                this.currentIntegration = this.integrationStore.create();\n                this.onGenerateKeys();\n                return;\n            }\n\n            const entry = this.integrations.find(a => a.id === id);\n            this.currentIntegration = {};\n            Object.assign(this.currentIntegration, entry);\n        },\n\n        onCloseDetailModal() {\n            this.currentIntegration = null;\n            this.showSecretAccessKey = false;\n            this.isModalLoading = false;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = null;\n        },\n\n        onConfirmDelete(id) {\n            if (!id) {\n                return false;\n            }\n\n            return this.integrationStore.store[id].delete(true).then(() => {\n                this.getList();\n                this.onCloseDeleteModal();\n            }).catch(this.onCloseDeleteModal());\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-integration-list';\n\nModule.register('sw-integration', {\n    type: 'core',\n    name: 'integrations',\n    description: 'The module for managing integrations.',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-integration-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        }\n    },\n\n    navigation: [{\n        path: 'sw.integration.index',\n        label: 'sw-integration.general.mainMenuItemIndex',\n        parent: 'sw-settings'\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-admin-menu-extension.html.twig';\n\nComponent.override('sw-admin-menu', {\n    template\n});\n","import { Component, State } from 'src/core/shopware';\nimport FlatTree from 'src/core/helper/flattree.helper';\nimport template from './sw-sales-channel-menu.html.twig';\n\nComponent.register('sw-sales-channel-menu', {\n    template,\n\n    data() {\n        return {\n            salesChannels: [],\n            menuItems: [],\n            showModal: false\n        };\n    },\n\n    computed: {\n        salesChannelStore() {\n            return State.getStore('sales_channel');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n        this.$root.$on('changedSalesChannels', this.createdComponent);\n    },\n\n    methods: {\n        createdComponent() {\n            const params = {\n                limit: 500,\n                page: 1\n            };\n\n            this.salesChannelStore.getList(params).then((response) => {\n                this.salesChannels = response.items;\n                this.createMenuTree();\n            });\n        },\n\n        createMenuTree() {\n            const flatTree = new FlatTree();\n\n            this.salesChannels.forEach((salesChannel) => {\n                flatTree.add({\n                    id: salesChannel.id,\n                    path: 'sw.sales.channel.detail',\n                    params: { id: salesChannel.id },\n                    color: '#D8DDE6',\n                    label: { label: salesChannel.name, translated: true },\n                    icon: salesChannel.type.iconName,\n                    children: []\n                });\n            });\n\n            this.menuItems = flatTree.convertToTree();\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport template from './sw-sales-channel-modal.html.twig';\nimport './sw-sales-channel-modal.less';\n\nComponent.register('sw-sales-channel-modal', {\n    template,\n\n    inject: ['salesChannelService'],\n\n    data() {\n        return {\n            salesChannelTypes: [],\n            isLoading: false,\n            detailType: false\n        };\n    },\n\n    computed: {\n        salesChannelStore() {\n            return State.getStore('sales_channel');\n        },\n\n        salesChannelTypeStore() {\n            return State.getStore('sales_channel_type');\n        },\n\n        modalTitle() {\n            if (this.detailType) {\n                return `${this.$tc('sw-sales-channel.modal.titleDetailPrefix')} ${this.detailType.name}`;\n            }\n\n            return this.$tc('sw-sales-channel.modal.title');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            const params = {\n                limit: 500,\n                page: 1\n            };\n\n            this.isLoading = true;\n\n            this.salesChannelTypeStore.getList(params).then((response) => {\n                this.total = response.total;\n                this.salesChannelTypes = response.items;\n                this.isLoading = false;\n            });\n        },\n\n        onCloseModal() {\n            this.$emit('closeModal');\n        },\n\n        onOpenDetail(id) {\n            this.detailType = this.salesChannelTypes.find(a => a.id === id);\n        },\n\n        onAddChannel(id) {\n            this.onCloseModal();\n            if (id) {\n                this.$router.push({ name: 'sw.sales.channel.create', params: { typeId: id } });\n                return;\n            }\n\n            this.$router.push({ name: 'sw.sales.channel.create', params: { typeId: this.detailType.id } });\n        }\n    }\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-sales-channel-detail.html.twig';\n\nComponent.register('sw-sales-channel-detail', {\n\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            salesChannel: {},\n            isLoading: false\n        };\n    },\n    computed: {\n        salesChannelStore() {\n            return State.getStore('sales_channel');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.$route.params.id) {\n                return;\n            }\n\n            this.salesChannel = this.salesChannelStore.getById(this.$route.params.id);\n\n            this.salesChannel.getAssociation('catalogs').getList({\n                page: 1,\n                limit: 50\n            });\n\n            this.salesChannel.getAssociation('languages').getList({\n                page: 1,\n                limit: 50\n            });\n\n            this.salesChannel.getAssociation('currencies').getList({\n                page: 1,\n                limit: 50\n            });\n\n            this.salesChannel.getAssociation('countries').getList({\n                page: 1,\n                limit: 50\n            });\n\n            this.salesChannel.getAssociation('shippingMethods').getList({\n                page: 1,\n                limit: 50\n            });\n\n            this.salesChannel.getAssociation('paymentMethods').getList({\n                page: 1,\n                limit: 50\n            });\n        },\n\n        onSave() {\n            const titleSaveSuccess = this.$tc('sw-sales-channel.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc(\n                'sw-sales-channel.detail.messageSaveSuccess',\n                0,\n                { name: this.salesChannel.name }\n            );\n\n            return this.salesChannel.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-sales-channel-create.html.twig';\n\nComponent.extend('sw-sales-channel-create', 'sw-sales-channel-detail', {\n    template,\n\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.sales.channel.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (!this.$route.params.typeId) {\n                return;\n            }\n\n            this.salesChannel = this.salesChannelStore.create(this.$route.params.id);\n            this.salesChannel.typeId = this.$route.params.typeId;\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$root.$emit('changedSalesChannels');\n                this.$router.push({ name: 'sw.sales.channel.detail', params: { id: this.salesChannel.id } });\n            });\n        }\n    }\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-sales-channel-detail-base.html.twig';\nimport './sw-sales-channel-detail-base.less';\n\nComponent.register('sw-sales-channel-detail-base', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    inject: [\n        'salesChannelService',\n        'currencyService',\n        'languageService',\n        'catalogService',\n        'countryService',\n        'shippingMethodService',\n        'paymentMethodService'\n    ],\n\n    props: {\n        salesChannel: {\n            type: Object,\n            required: true,\n            default: {}\n        }\n    },\n\n    data() {\n        return {\n            showDeleteModal: false\n        };\n    },\n\n    computed: {\n        secretAccessKeyFieldType() {\n            return this.showSecretAccessKey ? 'text' : 'password';\n        },\n\n        catalogStore() {\n            return this.salesChannel.getAssociation('catalogs');\n        },\n\n        countryStore() {\n            return this.salesChannel.getAssociation('countries');\n        },\n\n        currencyStore() {\n            return this.salesChannel.getAssociation('currencies');\n        },\n\n        languageStore() {\n            return this.salesChannel.getAssociation('languages');\n        },\n\n        paymentMethodStore() {\n            return this.salesChannel.getAssociation('paymentMethods');\n        },\n\n        shippingMethodStore() {\n            return this.salesChannel.getAssociation('shippingMethods');\n        }\n    },\n\n    methods: {\n        onGenerateKeys() {\n            this.salesChannelService.generateKey().then((response) => {\n                this.salesChannel.accessKey = response.accessKey;\n            }).catch(() => {\n                this.createNotificationError({\n                    title: this.$tc('sw-sales-channel.detail.titleAPIError'),\n                    message: this.$tc('sw-sales-channel.detail.messageAPIError')\n                });\n            });\n        },\n\n        changeDefaultCurrency(id) {\n            this.salesChannel.currencyId = id;\n        },\n\n        changeDefaultLanguage(id) {\n            this.salesChannel.languageId = id;\n        },\n\n        changeDefaultCountry(id) {\n            this.salesChannel.countryId = id;\n        },\n\n        changeDefaultPaymentMethod(id) {\n            this.salesChannel.paymentMethodId = id;\n        },\n\n        changeDefaultShippingMethod(id) {\n            this.salesChannel.shippingMethodId = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete() {\n            this.showDeleteModal = false;\n            this.$nextTick(() => {\n                this.salesChannel.delete(true).then(() => {\n                    this.$root.$emit('changedSalesChannels');\n                }).catch(this.onCloseDeleteModal());\n\n                this.$router.push({ name: 'sw.dashboard.index' });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-sales-channel-create-base.html.twig';\n\nComponent.extend('sw-sales-channel-create-base', 'sw-sales-channel-detail-base', {\n    template,\n\n    created() {\n        this.onGenerateKeys();\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './component/structure/sw-admin-menu-extension';\nimport './component/structure/sw-sales-channel-menu';\nimport './component/sw-sales-channel-modal';\nimport './page/sw-sales-channel-detail';\nimport './page/sw-sales-channel-create';\nimport './view/sw-sales-channel-detail-base';\nimport './view/sw-sales-channel-create-base';\n\nModule.register('sw-sales-channel', {\n    type: 'core',\n    name: 'sales-channels',\n    description: 'The module for managing sales channels.',\n    version: '1.0.0',\n    targetVersion: '1.0.0',\n    color: '#14D7A5',\n    icon: 'default-device-server',\n\n    routes: {\n        detail: {\n            component: 'sw-sales-channel-detail',\n            path: 'detail/:id',\n            redirect: {\n                name: 'sw.sales.channel.detail.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-sales-channel-detail-base',\n                    path: 'base'\n                }\n            }\n        },\n\n        create: {\n            component: 'sw-sales-channel-create',\n            path: 'create/:typeId',\n            redirect: {\n                name: 'sw.sales.channel.create.base'\n            },\n            children: {\n                base: {\n                    component: 'sw-sales-channel-create-base',\n                    path: 'base'\n                }\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-item.html.twig';\n\nimport './sw-settings-item.less';\n\nComponent.register('sw-settings-item', {\n    template,\n\n    props: {\n        label: {\n            required: true,\n            type: String\n        },\n        to: {\n            required: true,\n            type: Object,\n            default() {\n                return {};\n            }\n        },\n        disabled: {\n            required: false,\n            type: Boolean,\n            default: false\n        }\n    },\n\n    computed: {\n        classes() {\n            return {\n                'is--disabled': this.disabled\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\nimport './sw-settings-index.less';\n\nComponent.register('sw-settings-index', {\n    template\n});\n","import { State, Mixin } from 'src/core/shopware';\nimport { debug } from 'src/core/service/util.service';\n\nMixin.register('sw-settings-list', {\n\n    mixins: [\n        Mixin.getByName('listing'),\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            entityName: '',\n            items: [],\n            isLoading: false,\n            showDeleteModal: false\n        };\n    },\n\n    computed: {\n        store() {\n            return State.getStore(this.entityName);\n        }\n    },\n\n    created() {\n        this.$root.$on('search', this.onSearch);\n\n        if (this.entityName === '') {\n            debug.warn('sw-settings-list mixin', 'You need to define the data property \"entityName\".');\n        }\n    },\n\n    destroyed() {\n        this.$root.$off('search', this.onSearch);\n    },\n\n    methods: {\n        getList() {\n            this.isLoading = true;\n            const params = this.getListingParams();\n\n            this.items = [];\n\n            return this.store.getList(params).then((response) => {\n                this.total = response.total;\n                this.items = response.items;\n                this.isLoading = false;\n\n                return this.items;\n            });\n        },\n\n        onDelete(id) {\n            this.showDeleteModal = id;\n        },\n\n        onCloseDeleteModal() {\n            this.showDeleteModal = false;\n        },\n\n        onConfirmDelete(id) {\n            const currency = this.store.store[id];\n            const currencyName = currency.name;\n            const titleSaveSuccess = this.$tc(`sw-settings-${this.entityName}.list.titleDeleteSuccess`);\n            const messageSaveSuccess = this.$tc(\n                `sw-settings-${this.entityName}.list.messageDeleteSuccess`,\n                0,\n                { name: currencyName }\n            );\n\n            this.store.store[id].delete(true).then(() => {\n                this.showDeleteModal = false;\n\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n\n                this.getList();\n            }).catch(this.onCloseDeleteModal());\n        },\n\n        onInlineEditSave(item) {\n            this.isLoading = true;\n\n            item.save().then(() => {\n                this.isLoading = false;\n            }).catch(() => {\n                this.isLoading = false;\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './component/sw-settings-item';\nimport './page/sw-settings-index';\nimport './mixin/sw-settings-list.mixin';\n\nModule.register('sw-settings', {\n    type: 'core',\n    name: 'Settings',\n    description: 'Settings Module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-index',\n            path: 'index',\n            icon: 'default-action-settings'\n        }\n    },\n\n    navigation: [{\n        id: 'sw-settings',\n        label: 'sw-settings.general.mainMenuItemGeneral',\n        color: '#9AA8B5',\n        icon: 'default-action-settings',\n        path: 'sw.settings.index',\n        position: 70\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-currency-list.html.twig';\n\nComponent.register('sw-settings-currency-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('sw-settings-list')\n    ],\n\n    data() {\n        return {\n            entityName: 'currency'\n        };\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-currency-detail.html.twig';\n\nComponent.register('sw-settings-currency-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            currency: {}\n        };\n    },\n\n    computed: {\n        currencyStore() {\n            return State.getStore('currency');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.currencyId = this.$route.params.id;\n                this.currency = this.currencyStore.getById(this.currencyId);\n            }\n        },\n\n        onSave() {\n            const currencyName = this.currency.name;\n            const titleSaveSuccess = this.$tc('sw-settings-currency.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-settings-currency.detail.messageSaveSuccess', 0, { name: currencyName });\n            return this.currency.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-settings-currency-create', 'sw-settings-currency-detail', {\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.currency.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.currencyStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.settings.currency.detail', params: { id: this.currency.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-settings-currency-list';\nimport './page/sw-settings-currency-detail';\nimport './page/sw-settings-currency-create';\n\nModule.register('sw-settings-currency', {\n    type: 'core',\n    name: 'Currency settings',\n    description: 'Currency section in the settings module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-currency-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        },\n        detail: {\n            component: 'sw-settings-currency-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.currency.index'\n            }\n        },\n        create: {\n            component: 'sw-settings-currency-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.currency.index'\n            }\n        }\n    },\n\n    navigation: [{\n        label: 'sw-settings-currency.general.mainMenuItemGeneral',\n        color: '#9AA8B5',\n        icon: 'default-action-settings',\n        path: 'sw.settings.currency.index',\n        parent: 'sw-settings'\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-country-list.html.twig';\n\nComponent.register('sw-settings-country-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('sw-settings-list')\n    ],\n\n    data() {\n        return {\n            entityName: 'country'\n        };\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-country-detail.html.twig';\nimport './sw-settings-country-detail.less';\n\nComponent.register('sw-settings-country-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            country: {}\n        };\n    },\n\n    computed: {\n        countryStore() {\n            return State.getStore('country');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.countryId = this.$route.params.id;\n                this.country = this.countryStore.getById(this.countryId);\n            }\n        },\n\n        onSave() {\n            const countryName = this.country.name;\n            const titleSaveSuccess = this.$tc('sw-settings-country.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-settings-country.detail.messageSaveSuccess', 0, {\n                name: countryName\n            });\n\n            return this.country.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-settings-country-create', 'sw-settings-country-detail', {\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.country.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.countryStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.settings.country.detail', params: { id: this.country.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-settings-country-list';\nimport './page/sw-settings-country-detail';\nimport './page/sw-settings-country-create';\n\nModule.register('sw-settings-country', {\n    type: 'core',\n    name: 'Country settings',\n    description: 'Country section in the settings module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-country-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        },\n        detail: {\n            component: 'sw-settings-country-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.country.index'\n            }\n        },\n        create: {\n            component: 'sw-settings-country-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.country.index'\n            }\n        }\n    },\n\n    navigation: [{\n        label: 'sw-settings-country.general.mainMenuItemGeneral',\n        color: '#9AA8B5',\n        icon: 'default-action-settings',\n        path: 'sw.settings.country.index',\n        parent: 'sw-settings'\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-tax-list.html.twig';\n\nComponent.register('sw-settings-tax-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('sw-settings-list')\n    ],\n\n    data() {\n        return {\n            entityName: 'tax'\n        };\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-tax-detail.html.twig';\n\nComponent.register('sw-settings-tax-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            tax: {}\n        };\n    },\n\n    computed: {\n        taxStore() {\n            return State.getStore('tax');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.taxId = this.$route.params.id;\n                this.tax = this.taxStore.getById(this.taxId);\n            }\n        },\n\n        onSave() {\n            const taxName = this.tax.name;\n            const titleSaveSuccess = this.$tc('sw-settings-tax.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-settings-tax.detail.messageSaveSuccess', 0, { name: taxName });\n\n            return this.tax.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-settings-tax-create', 'sw-settings-tax-detail', {\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.tax.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.taxStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.settings.tax.detail', params: { id: this.tax.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-settings-tax-list';\nimport './page/sw-settings-tax-detail';\nimport './page/sw-settings-tax-create';\n\nModule.register('sw-settings-tax', {\n    type: 'core',\n    name: 'Tax settings',\n    description: 'Tax section in the settings module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-tax-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        },\n        detail: {\n            component: 'sw-settings-tax-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.tax.index'\n            }\n        },\n        create: {\n            component: 'sw-settings-tax-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.tax.index'\n            }\n        }\n    },\n\n    navigation: [{\n        label: 'sw-settings-tax.general.mainMenuItemGeneral',\n        color: '#9AA8B5',\n        icon: 'default-action-settings',\n        path: 'sw.settings.tax.index',\n        parent: 'sw-settings'\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-language-list.html.twig';\n\nComponent.register('sw-settings-language-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('sw-settings-list')\n    ],\n\n    data() {\n        return {\n            entityName: 'language'\n        };\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-language-detail.html.twig';\n\nComponent.register('sw-settings-language-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            language: {},\n            locales: [],\n            languages: []\n        };\n    },\n\n    computed: {\n        languageStore() {\n            return State.getStore('language');\n        },\n\n        localeStore() {\n            return State.getStore('locale');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.languageId = this.$route.params.id;\n                this.language = this.languageStore.getById(this.languageId);\n            }\n\n            this.localeStore.getList({\n                offset: 0,\n                limit: 500\n            }).then((response) => {\n                this.locales = response.items;\n            });\n\n            this.languageStore.getList({\n                offset: 0,\n                limit: 25\n            }).then((response) => {\n                this.languages = response.items;\n            });\n        },\n\n        onSave() {\n            const languageName = this.language.name;\n            const titleSaveSuccess = this.$tc('sw-settings-language.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-settings-language.detail.messageSaveSuccess', 0, { name: languageName });\n            return this.language.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-settings-language-create', 'sw-settings-language-detail', {\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.language.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.languageStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.settings.language.detail', params: { id: this.language.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-settings-language-list';\nimport './page/sw-settings-language-detail';\nimport './page/sw-settings-language-create';\n\nModule.register('sw-settings-language', {\n    type: 'core',\n    name: 'Language settings',\n    description: 'Language section in the settings module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-language-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        },\n        detail: {\n            component: 'sw-settings-language-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.language.index'\n            }\n        },\n        create: {\n            component: 'sw-settings-language-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.language.index'\n            }\n        }\n    },\n\n    navigation: [{\n        label: 'sw-settings-language.general.mainMenuItemGeneral',\n        color: '#9AA8B5',\n        icon: 'default-action-settings',\n        path: 'sw.settings.language.index',\n        parent: 'sw-settings'\n    }]\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-settings-payment-list.html.twig';\n\nComponent.register('sw-settings-payment-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('sw-settings-list')\n    ],\n\n    data() {\n        return {\n            entityName: 'payment'\n        };\n    },\n\n    computed: {\n        store() {\n            return State.getStore('payment_method');\n        }\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-payment-detail.html.twig';\n\nComponent.register('sw-settings-payment-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            paymentMethod: {}\n        };\n    },\n\n    computed: {\n        paymentMethodStore() {\n            return State.getStore('payment_method');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.paymentMethodId = this.$route.params.id;\n                this.paymentMethod = this.paymentMethodStore.getById(this.paymentMethodId);\n            }\n        },\n\n        onSave() {\n            const paymentMethodName = this.paymentMethod.name;\n            const titleSaveSuccess = this.$tc('sw-settings-payment.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-settings-payment.detail.messageSaveSuccess', 0, {\n                name: paymentMethodName\n            });\n\n            return this.paymentMethod.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-settings-payment-create', 'sw-settings-payment-detail', {\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.payment.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.paymentMethodStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.settings.payment.detail', params: { id: this.paymentMethod.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-settings-payment-list';\nimport './page/sw-settings-payment-detail';\nimport './page/sw-settings-payment-create';\n\nModule.register('sw-settings-payment', {\n    type: 'core',\n    name: 'Payment settings',\n    description: 'Payment section in the settings module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-payment-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        },\n        detail: {\n            component: 'sw-settings-payment-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.payment.index'\n            }\n        },\n        create: {\n            component: 'sw-settings-payment-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.payment.index'\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-settings-index.html.twig';\n\nComponent.override('sw-settings-index', {\n    template\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport template from './sw-settings-shipping-list.html.twig';\n\nComponent.register('sw-settings-shipping-list', {\n    template,\n\n    mixins: [\n        Mixin.getByName('sw-settings-list')\n    ],\n\n    data() {\n        return {\n            entityName: 'shipping'\n        };\n    },\n\n    computed: {\n        store() {\n            return State.getStore('shipping_method');\n        }\n    }\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport template from './sw-settings-shipping-detail.html.twig';\nimport './sw-settings-shipping-detail.less';\n\nComponent.register('sw-settings-shipping-detail', {\n    template,\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            shippingMethod: {}\n        };\n    },\n\n    computed: {\n        shippingMethodStore() {\n            return State.getStore('shipping_method');\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.shippingMethodId = this.$route.params.id;\n                this.shippingMethod = this.shippingMethodStore.getById(this.shippingMethodId);\n            }\n        },\n\n        onSave() {\n            const shippingMethodName = this.shippingMethod.name;\n            const titleSaveSuccess = this.$tc('sw-settings-shipping.detail.titleSaveSuccess');\n            const messageSaveSuccess = this.$tc('sw-settings-shipping.detail.messageSaveSuccess', 0, {\n                name: shippingMethodName\n            });\n\n            return this.shippingMethod.save().then(() => {\n                this.createNotificationSuccess({\n                    title: titleSaveSuccess,\n                    message: messageSaveSuccess\n                });\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nComponent.extend('sw-settings-shipping-create', 'sw-settings-shipping-detail', {\n    beforeRouteEnter(to, from, next) {\n        if (to.name.includes('sw.settings.shipping.create') && !to.params.id) {\n            to.params.id = utils.createId();\n        }\n\n        next();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.id) {\n                this.shippingMethodStore.create(this.$route.params.id);\n            }\n\n            this.$super.createdComponent();\n            // This is actual a required parameter\n            this.shippingMethod.type = 0;\n        },\n\n        onSave() {\n            this.$super.onSave().then(() => {\n                this.$router.push({ name: 'sw.settings.shipping.detail', params: { id: this.shippingMethod.id } });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\n\nimport './extension/sw-settings-index';\nimport './page/sw-settings-shipping-list';\nimport './page/sw-settings-shipping-detail';\nimport './page/sw-settings-shipping-create';\n\nModule.register('sw-settings-shipping', {\n    type: 'core',\n    name: 'Shipping settings',\n    description: 'Shipping section in the settings module',\n    color: '#9AA8B5',\n    icon: 'default-action-settings',\n\n    routes: {\n        index: {\n            component: 'sw-settings-shipping-list',\n            path: 'index',\n            meta: {\n                parentPath: 'sw.settings.index'\n            }\n        },\n        detail: {\n            component: 'sw-settings-shipping-detail',\n            path: 'detail/:id',\n            meta: {\n                parentPath: 'sw.settings.shipping.index'\n            }\n        },\n        create: {\n            component: 'sw-settings-shipping-create',\n            path: 'create',\n            meta: {\n                parentPath: 'sw.settings.shipping.index'\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-admin-menu.html.twig';\n\nComponent.override('sw-admin-menu', {\n    template\n});\n","import { Component, State, Mixin } from 'src/core/shopware';\nimport { md5 } from 'src/core/service/utils/format.utils';\nimport template from './sw-profile-index.html.twig';\nimport './sw-profile-index.less';\n\nComponent.register('sw-profile-index', {\n    template,\n\n    inject: ['userService'],\n\n    mixins: [\n        Mixin.getByName('notification')\n    ],\n\n    data() {\n        return {\n            userProfile: {},\n            user: {\n                isLoading: true\n            },\n            imageSize: 140,\n            newPassword: null,\n            newPasswordConfirm: null\n        };\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    computed: {\n        userStore() {\n            return State.getStore('user');\n        },\n\n        md5mail() {\n            return (this.user.email) ? md5(this.user.email) : '';\n        },\n\n        gravatarImage() {\n            return `https://www.gravatar.com/avatar/${this.md5mail}?s=${this.imageSize}`;\n        }\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.$route.params.user) {\n                this.userProfile = this.$route.params.user;\n                this.user = this.userStore.getById(this.userProfile.id);\n            } else {\n                this.userService.getUser().then((response) => {\n                    this.userProfile = response.data;\n                    this.user = this.userStore.getById(this.userProfile.id);\n                });\n            }\n        },\n\n        onSave() {\n            if (this.newPassword && this.newPassword.length > 0) {\n                if (this.newPassword !== this.newPasswordConfirm) {\n                    const errorTitle = this.$tc('sw-profile.index.notificationPasswordErrorTitle');\n                    const errorMessage = this.$tc('sw-profile.index.notificationPasswordErrorMessage');\n\n                    this.createNotificationError({\n                        title: errorTitle,\n                        message: errorMessage\n                    });\n\n                    return;\n                }\n\n                this.user.password = this.newPassword;\n            }\n\n            this.user.save().then(() => {\n                const successTitle = this.$tc('sw-profile.index.notificationSaveSuccessTitle');\n                const successMessage = this.$tc('sw-profile.index.notificationSaveSuccessMessage');\n\n                this.newPassword = '';\n                this.newPasswordConfirm = '';\n\n                this.createNotificationSuccess({\n                    title: successTitle,\n                    message: successMessage\n                });\n            });\n        }\n    }\n});\n","import { Module } from 'src/core/shopware';\nimport './extension/sw-admin-menu';\nimport './page/sw-profile-index';\n\nModule.register('sw-profile', {\n    type: 'core',\n    name: 'Profile',\n    description: 'The user profile settings.',\n    color: '#9AA8B5',\n    icon: 'default-avatar-single',\n\n    routes: {\n        index: {\n            component: 'sw-profile-index',\n            path: 'index'\n        }\n    }\n});\n","/**\n * @module core/service/utils/types\n */\n\nimport isObject from 'lodash/isObject';\nimport isPlainObject from 'lodash/isPlainObject';\nimport isEmpty from 'lodash/isEmpty';\nimport isRegExp from 'lodash/isRegExp';\nimport isArray from 'lodash/isArray';\nimport isFunction from 'lodash/isFunction';\nimport isDate from 'lodash/isDate';\nimport isString from 'lodash/isString';\nimport isBoolean from 'lodash/isBoolean';\n\nexport default {\n    isObject,\n    isPlainObject,\n    isEmpty,\n    isRegExp,\n    isArray,\n    isFunction,\n    isDate,\n    isString,\n    isBoolean\n};\n","import { types } from 'src/core/service/util.service';\n\n/**\n * @module core/service/validation\n */\nexport default {\n    required,\n    regex,\n    email\n};\n\n/**\n * Checks if a value is set based on its type.\n *\n * @memberOf module:core/service/validation\n * @param value\n * @returns {boolean}\n */\nexport function required(value) {\n    if (typeof value === 'string' && value.length <= 0) {\n        return false;\n    }\n\n    if (typeof value === 'boolean') {\n        return value === true;\n    }\n\n    if (types.isObject(value)) {\n        return Object.keys(value).length > 0;\n    }\n\n    return typeof value !== 'undefined' && value !== null;\n}\n\n/**\n * Checks the value against the given regular expression.\n *\n * @memberOf module:core/service/validation\n * @param value\n * @param expression\n * @returns {boolean}\n */\nexport function regex(value, expression) {\n    if (expression instanceof RegExp) {\n        return expression.test(value);\n    }\n\n    return new RegExp(expression).test(value);\n}\n\n/**\n * Checks if the value is a valid email address.\n *\n * @memberOf module:core/service/validation\n * @param value\n * @returns {boolean}\n */\nexport function email(value) {\n    const emailValidation = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    return regex(value, emailValidation);\n}\n","/**\n * @module core/helper/jsonapi-parser\n */\nimport types from 'src/core/service/utils/types.utils';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * Converts a JSONApi compliant data structure into a nested object structure which suits the data entry management\n * of the application much better.\n *\n * @example\n * import jsonApiParserService from 'src/core/service/jsonapi-parser.service';\n *\n * httpClient.get('/foo').then((response) => {\n *     const parsedResponse = jsonApiParserService(response.data);\n * });\n *\n * @param {String|Object} data Data structure\n * @returns {Object|null} Parsed data structure or `null` if the `data` parameter isn't an object or string.\n * @method jsonApiParserService\n * @memberOf module:core/helper/jsonapi-parser\n */\nexport default function jsonApiParserService(data) {\n    const json = convertRawDataToJson(data);\n\n    if (!json) {\n        return null;\n    }\n\n    // Provided data was parsed before or doesn't follows the JSONApi spec, so we're returning data structure untouched\n    if (json.parsed === true || !areTopMemberPropertiesPresent(json)) {\n        return json;\n    }\n\n    const convertedStructure = parseDataStructure(json);\n\n    // Mark the converted structure as \"parsed\", so we're not parsing it again\n    convertedStructure.parsed = true;\n\n    return convertedStructure;\n}\n\n/**\n * Tries to convert the raw data input into a JSON format.\n *\n * @param {String|Object} [data={}] Data structure to parse\n * @returns {Boolean|Object} Converted data structure or false when the data type wasn't an object or string.\n */\nfunction convertRawDataToJson(data) {\n    let jsonData;\n    if (types.isString(data)) {\n        try {\n            jsonData = JSON.parse(data);\n        } catch (err) {\n            return false;\n        }\n    } else if (types.isObject(data) && !types.isArray(data)) {\n        jsonData = data;\n    } else {\n        return false;\n    }\n\n    return jsonData;\n}\n\n/**\n * Basic check if we're dealing with a data structure which follows the JSONApi spec.\n * @param {Object} json\n * @returns {Boolean}\n */\nfunction areTopMemberPropertiesPresent(json) {\n    return (json.data !== undefined\n        || json.errors !== undefined\n        || json.links !== undefined\n        || json.meta !== undefined);\n}\n\n/**\n * Iterates over the `included` property of the JSONApi spec and creates a new map with unique identifiers.\n *\n * @param {Array} included\n * @returns {Map<any, any>}\n */\nfunction createIncludeMap(included) {\n    const includedMap = new Map();\n\n    if (!included || !included.length) {\n        return includedMap;\n    }\n\n    included.forEach((item) => {\n        const key = `${item.type}-${item.id}`;\n        includedMap.set(key, item);\n    });\n\n    return includedMap;\n}\n\n/**\n * Parses the data structure and converts it from JSONApi spec to a nested object structure to work with our data\n * management and handling.\n *\n * @param {Object} json\n * @returns {Object} parsed data structure\n */\nfunction parseDataStructure(json) {\n    const data = {\n        links: null,\n        errors: null,\n        data: null,\n        associations: null,\n        aggregations: null\n    };\n\n    // Errors will be returned right away, we don't need to convert anything\n    if (json.errors) {\n        data.errors = json.errors;\n        return data;\n    }\n\n    const includedMap = createIncludeMap(json.included);\n\n    if (types.isArray(json.data)) {\n        data.data = json.data.map((record) => {\n            const dataItem = createItem(record, includedMap);\n\n            if (hasOwnProperty(dataItem, 'associationLinks')) {\n                data.associations = { ...data.associations, ...dataItem.associationLinks };\n                delete dataItem.associationLinks;\n            }\n\n            return dataItem;\n        });\n    } else if (types.isObject(json.data)) {\n        const dataItem = createItem(json.data, includedMap);\n\n        if (Object.prototype.hasOwnProperty.call(dataItem, 'associationLinks')) {\n            data.associations = { ...data.associations, ...dataItem.associationLinks };\n            delete dataItem.associationLinks;\n        }\n        data.data = dataItem;\n    } else {\n        data.data = null;\n    }\n\n    if (json.meta && Object.keys(json.meta).length) {\n        data.meta = renameObjectPropertiesToCamelCase(json.meta);\n    }\n\n    if (json.links && Object.keys(json.links).length) {\n        data.links = json.links;\n    }\n\n    if (json.aggregations && Object.keys(json.aggregations).length) {\n        data.aggregations = json.aggregations;\n    }\n\n    return data;\n}\n\n/**\n * Creates a new object item for the nested object structure.\n *\n * @param {Object} record\n * @param {Map} includedMap\n * @returns {{id, type, links: {}, meta: {}}}\n */\nfunction createItem(record, includedMap) {\n    let item = {\n        id: record.id,\n        type: record.type,\n        links: record.links || {},\n        meta: record.meta || {}\n    };\n\n    if (record.attributes && Object.keys(record.attributes).length > 0) {\n        const attributes = renameObjectPropertiesToCamelCase(record.attributes);\n        item = { ...item, ...attributes };\n    }\n\n    if (record.relationships) {\n        const relations = createRelationships(record.relationships, includedMap);\n        item = { ...item, ...relations.mappedRelations, ...{ associationLinks: relations.associationLinks } };\n    }\n\n    return item;\n}\n\n/**\n * Renames the attributes which can be kebab-case to camel-case.\n *\n * @param {Object} attributesCollection\n * @returns {Object}\n */\nfunction renameObjectPropertiesToCamelCase(attributesCollection) {\n    const attributes = {};\n    Object.keys(attributesCollection).forEach((attributeKey) => {\n        const attribute = attributesCollection[attributeKey];\n        const key = attributeKey.replace(/-([a-z])/g, (match, item) => {\n            return item.toUpperCase();\n        });\n        attributes[key] = attribute;\n    });\n\n    return attributes;\n}\n\n/**\n * Maps the included entries and creates new items out of it including dependency resolving\n * @param {Object} item\n * @param {Map} includedMap\n * @returns {Object}\n */\nfunction mapIncluded(item, includedMap) {\n    const includedKey = `${item.type}-${item.id}`;\n    if (!includedMap.has(includedKey)) {\n        return item;\n    }\n\n    const included = includedMap.get(includedKey);\n    return createItem(included, includedMap);\n}\n\n/**\n * Resolve the dependencies between entries in `includedMap` and the relations of the item.\n *\n * @param {Object} relationships\n * @param {Map} includedMap\n * @returns {Object}\n */\nfunction createRelationships(relationships, includedMap) {\n    const mappedRelations = {};\n    const associationLinks = {};\n\n    Object.keys(relationships).forEach((prop) => {\n        const relationship = relationships[prop];\n\n        if (relationship.links && Object.keys(relationship.links).length) {\n            associationLinks[prop] = relationship.links.related;\n        }\n\n        // We don't have any data, don't continue with the iteration\n        if (!relationship.data) {\n            return;\n        }\n\n        const data = relationship.data;\n\n        if (types.isArray(data)) {\n            mappedRelations[prop] = data.map((item) => mapIncluded(item, includedMap));\n        } else if (types.isObject(data)) {\n            mappedRelations[prop] = mapIncluded(data, includedMap);\n        } else {\n            mappedRelations[prop] = null;\n        }\n    });\n\n    return { mappedRelations: mappedRelations, associationLinks: associationLinks };\n}\n","import { warn } from 'src/core/service/utils/debug.utils';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * The flat tree converts a collection of flat objects into a data tree hierarchy.\n * @class\n */\nclass FlatTree {\n    /**\n     * Creates a new instance of registered nodes.\n     *\n     * @memberOf FlatTree\n     * @constructor\n     */\n    constructor() {\n        this._registeredNodes = new Map();\n    }\n\n    /**\n     * Converts the flat objects into the data tree hierarchy\n     *\n     * @returns {Object} registered nodes as a data tree\n     */\n    convertToTree() {\n        return this._tree(undefined, this._registeredNodes);\n    }\n\n    /**\n     * Internal method which will be called recursively to build up the tree\n     *\n     * @private\n     * @param {String|undefined} parent\n     * @param {Map|Array} elements\n     * @returns {Array}\n     */\n    _tree(parent, elements) {\n        const children = [];\n        elements.forEach((element) => {\n            if (element.parent !== parent) {\n                return;\n            }\n\n            const newParent = element.id || element.path;\n            element.children = this._tree(newParent, elements);\n            children.push(element);\n        });\n\n        return children;\n    }\n\n    /**\n     * Adds a new flat node to the {@link #_registeredNodes} collection map.\n     *\n     * @chainable\n     * @param {Object} node\n     * @returns {FlatTree}\n     */\n    add(node) {\n        const nodeIdentifier = node.id || node.path;\n\n        if (!nodeIdentifier) {\n            warn(\n                'FlatTree',\n                'The node needs an \"id\" or \"path\" property. Abort registration.',\n                node\n            );\n            return this;\n        }\n\n        if (hasOwnProperty(node, 'link') && !hasOwnProperty(node, 'target')) {\n            node.target = '_self';\n        }\n\n        if (this._registeredNodes.has(nodeIdentifier)) {\n            warn(\n                'FlatTree',\n                `Tree contains node with unique identifier ${nodeIdentifier} already.`,\n                'Please remove it first before adding a new one.',\n                this._registeredNodes.get(nodeIdentifier)\n            );\n            return this;\n        }\n\n        this._registeredNodes.set(nodeIdentifier, node);\n        return this;\n    }\n\n    /**\n     * Removes a node using the provided nodeIdentifier, if it is registered.\n     *\n     * @chainable\n     * @param {String} nodeIdentifier - router path of the node\n     * @returns {FlatTree}\n     */\n    remove(nodeIdentifier) {\n        if (!this._registeredNodes.has(nodeIdentifier)) {\n            return this;\n        }\n\n        this._registeredNodes.delete(nodeIdentifier);\n        return this;\n    }\n\n    /**\n     * Returns the collection of the registered nodes for the data tree\n     * @returns {Map}\n     */\n    getRegisteredNodes() {\n        return this._registeredNodes;\n    }\n}\n\nexport default FlatTree;\n","import parseJsonApi from 'src/core/service/jsonapi-parser.service';\n\n/**\n * ApiService class which provides the common methods for our REST API\n * @class\n */\nclass ApiService {\n    /**\n     * @constructor\n     * @param {AxiosInstance} httpClient\n     * @param {LoginService} loginService\n     * @param {String} apiEndpoint\n     * @param {String} [contentType='application/vnd.api+json']\n     */\n    constructor(httpClient, loginService, apiEndpoint, contentType = 'application/vnd.api+json') {\n        this.httpClient = httpClient;\n        this.loginService = loginService;\n        this.apiEndpoint = apiEndpoint;\n        this.contentType = contentType;\n    }\n\n    /**\n     * Gets a list from the configured API end point using the page & limit.\n     *\n     * @param {Number} page\n     * @param {Number} limit\n     * @param {String} sortBy\n     * @param {String} sortDirection\n     * @param {String} term\n     * @param {Object} criteria\n     * @param {Object} aggregations\n     * @param {Object} headers\n     * @returns {Promise<T>}\n     */\n    getList({ page = 1, limit = 25, sortBy, sortDirection = 'asc', term, criteria, aggregations, headers }) {\n        const requestHeaders = this.getBasicHeaders(headers);\n        const params = { page, limit };\n\n        if (sortBy && sortBy.length) {\n            params.sort = (sortDirection.toLowerCase() === 'asc' ? '' : '-') + sortBy;\n        }\n\n        if (term) {\n            params.term = term;\n        }\n\n        if (criteria) {\n            params.filter = [criteria.getQuery()];\n        }\n\n        if (aggregations) {\n            params.aggregations = aggregations;\n        }\n\n        // Switch to the general search end point when we're having a search term\n        if ((params.term && params.term.length) || (params.filter && params.filter.length)) {\n            return this.httpClient\n                .post(`${this.getApiBasePath(null, 'search')}`, params, { headers: requestHeaders })\n                .then((response) => {\n                    return ApiService.handleResponse(response);\n                });\n        }\n\n        return this.httpClient\n            .get(this.getApiBasePath(), { params, headers: requestHeaders })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Get the detail entity from the API end point using the provided entity id.\n     *\n     * @param {String|Number} id\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    getById(id, additionalParams = {}, additionalHeaders = {}) {\n        if (!id) {\n            return Promise.reject(new Error('Missing required argument: id'));\n        }\n\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(this.getApiBasePath(id), {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Updates an entity using the provided payload.\n     *\n     * @param {String|Number} id\n     * @param {Object} payload\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    updateById(id, payload, additionalParams = {}, additionalHeaders = {}) {\n        if (!id) {\n            return Promise.reject(new Error('Missing required argument: id'));\n        }\n\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .patch(this.getApiBasePath(id), payload, {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Delete associations of the entity.\n     *\n     * @param id\n     * @param associationKey\n     * @param associationId\n     * @param additionalHeaders\n     * @returns {*}\n     */\n    deleteAssociation(id, associationKey, associationId, additionalHeaders) {\n        if (!id || !associationId || !associationId) {\n            return Promise.reject(new Error('Missing required arguments.'));\n        }\n\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient.delete(`${this.getApiBasePath(id)}/${associationKey}/${associationId}`, {\n            headers\n        }).then((response) => {\n            if (response.status >= 200 && response.status < 300) {\n                return Promise.resolve(response);\n            }\n\n            return Promise.reject(response);\n        });\n    }\n\n    /**\n     * Creates a new entity\n     *\n     * @param {any} payload\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    create(payload, additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .post(this.getApiBasePath(), payload, {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n\n    /**\n     * Deletes an existing entity\n     *\n     * @param {Number} id\n     * @param {Object} [additionalParams={}]\n     * @param {Object} [additionalHeaders={}]\n     * @returns {Promise<T>}\n     */\n    delete(id, additionalParams = {}, additionalHeaders = {}) {\n        if (!id) {\n            return Promise.reject(new Error('Missing required argument: id'));\n        }\n\n        const params = Object.assign({}, additionalParams);\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .delete(this.getApiBasePath(id), {\n                params,\n                headers\n            });\n    }\n\n    /**\n     * Returns the URI to the API endpoint\n     *\n     * @param {String|Number} [id]\n     * @param {String} [prefix='']\n     * @returns {String}\n     */\n    getApiBasePath(id, prefix = '') {\n        let url = '';\n\n        if (prefix && prefix.length) {\n            url += `${prefix}/`;\n        }\n\n        if (id && id.length > 0) {\n            return `${url}${this.apiEndpoint}/${id}`;\n        }\n\n        return `${url}${this.apiEndpoint}`;\n    }\n\n    /**\n     * Get the basic headers for a request.\n     *\n     * @param additionalHeaders\n     * @returns {Object}\n     */\n    getBasicHeaders(additionalHeaders = {}) {\n        const basicHeaders = {\n            Accept: this.contentType,\n            Authorization: `Bearer ${this.loginService.getToken()}`,\n            'Content-Type': 'application/json'\n        };\n\n        return Object.assign({}, basicHeaders, additionalHeaders);\n    }\n\n    /**\n     * Basic response handling.\n     * Converts the JSON api data when the specific content type is set.\n     *\n     * @param response\n     * @returns {*}\n     */\n    static handleResponse(response) {\n        if (!response.data) {\n            return response;\n        }\n\n        let data = response.data;\n        const headers = response.headers;\n\n        if (headers && headers['content-type'] && headers['content-type'] === 'application/vnd.api+json') {\n            data = ApiService.parseJsonApiData(data);\n        }\n\n        return data;\n    }\n\n    /**\n     * Parses a JSON api data structure to a simplified object.\n     *\n     * @param data\n     * @returns {Object}\n     */\n    static parseJsonApiData(data) {\n        return parseJsonApi(data);\n    }\n\n    /**\n     * Getter & setter for the API end point\n     * @type {String}\n     */\n    get apiEndpoint() {\n        return this.endpoint;\n    }\n\n    /**\n     * @type {String}\n     */\n    set apiEndpoint(endpoint) {\n        this.endpoint = endpoint;\n    }\n\n    /**\n     * Getter & setter for the http client\n     *\n     * @type {AxiosInstance}\n     */\n    get httpClient() {\n        return this.client;\n    }\n\n    /**\n     * @type {AxiosInstance}\n     */\n    set httpClient(client) {\n        this.client = client;\n    }\n\n    /**\n     * @type {String}\n     */\n    get contentType() {\n        return this.type;\n    }\n\n    /**\n     * @type {String}\n     */\n    set contentType(contentType) {\n        this.type = contentType;\n    }\n}\n\nexport default ApiService;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../node_modules/css-loader/index.js??ref--13-2!../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./all.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"13f1ee41\", content, true, {});","module.exports = \"{% block sw_login %}\\n    <div class=\\\"sw-login\\\" :class=\\\"{ 'is--login-success' : isLoginSuccess }\\\" >\\n        {% block sw_login_container %}\\n            <div class=\\\"sw-login__container\\\" :class=\\\"{ 'is--login-error': isLoginError }\\\">\\n                {% block sw_login_image %}\\n                    <div class=\\\"sw-login__image\\\">\\n                        {% block sw_login_image_headlines %}\\n                            <div class=\\\"sw-login__image-headlines\\\">\\n                                {% block sw_login_headline %}\\n                                    <div class=\\\"sw-login__headline\\\">{{ $tc('sw-login.index.headlineMain') }}</div>\\n                                {% endblock %}\\n\\n                                {% block sw_login_sub_headline %}\\n                                    <div class=\\\"sw-login__sub-headline\\\">{{ $tc('sw-login.index.subheadlineMain') }}</div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_login_form %}\\n                    <form class=\\\"sw-login__form\\\" @submit.prevent=\\\"loginUserWithPassword\\\">\\n                        {% block sw_login_badge %}\\n                            <div class=\\\"sw-login__badge\\\">\\n                                {% block sw_login_badge_image %}\\n                                    <svg xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\" width=\\\"34px\\\" height=\\\"34px\\\" viewBox=\\\"0 0 34 34\\\" version=\\\"1.1\\\">\\n                                        <title>Shopware</title>\\n                                        <g>\\n                                            <path d=\\\"M26.926772,30.0704562 C26.9875207,30.1161711 27.0237245,30.1888855 27.0234177,30.2652816 C27.0231109,30.3413709 26.9862935,30.4137784 26.9252379,30.4591865 C24.0010161,32.6234359 20.5291355,33.7672297 16.8851336,33.7672297 C12.3743887,33.7672297 8.13425177,32.0113467 4.9452515,28.82296 C1.75625123,25.6345734 6.13623296e-05,21.3944364 6.13623296e-05,16.8839984 C6.13623296e-05,12.374174 1.75625123,8.13434381 4.9452515,4.94534354 C8.13425177,1.75634328 12.3746955,0.000153405824 16.8851336,0.000153405824 C21.0583856,0.000153405824 25.0641185,1.53543889 28.1644502,4.32312952 C28.2442212,4.39461664 28.2672321,4.50844376 28.2221308,4.60539624 C28.1782567,4.70020104 28.0760884,4.75788163 27.9699316,4.74376829 C26.7669231,4.57870362 25.4681894,4.49494404 24.1093206,4.49494404 C19.1917435,4.49494404 15.1988968,5.59148887 12.5624643,7.66676286 C10.2113666,9.5171439 8.96877945,12.0774871 8.96877945,15.0710484 C8.96877945,18.4085455 10.2460363,21.0471256 12.8735713,23.1383538 C15.1927605,24.9838259 18.2817402,26.1819254 21.0071481,27.2385847 C23.2968834,28.1268044 25.4595987,28.9653206 26.926772,30.0704562 Z M33.6964176,15.3238611 C33.7433598,15.8610883 33.7669843,16.3860431 33.7669843,16.8836916 C33.7669843,19.0031464 33.3782539,21.0738182 32.6115316,23.0383332 C32.5860662,23.1033773 32.5336015,23.154308 32.4679438,23.1782393 C32.441558,23.1877505 32.4139449,23.1923527 32.3857182,23.1923527 C32.3446055,23.1923527 32.3037995,23.1819211 32.2679026,23.1619783 C30.260434,22.048252 28.0734805,21.2327467 25.9586278,20.4439339 C21.8544084,18.9135574 18.3107339,17.5918128 18.3107339,14.6918292 C18.3107339,13.6566467 18.7436451,12.7751768 19.563139,12.1422244 C20.5093462,11.411399 21.9258955,11.0407705 23.7738221,11.0407705 C27.2364984,11.0407705 30.0861649,12.2333474 33.6095899,15.157876 C33.6592934,15.1989888 33.690895,15.2597375 33.6964176,15.3238611 Z\\\" />\\n                                        </g>\\n                                    </svg>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_login_form_headline %}\\n                            <h2 class=\\\"sw-login__form-headline\\\">{{ $tc('sw-login.index.headlineForm') }}</h2>\\n                        {% endblock %}\\n\\n                        {% block sw_login_user_field %}\\n                            <sw-field :class=\\\"{ 'has--error' : authStore.errorTitle.length && authStore.errorMessage.length }\\\"\\n                                      v-model=\\\"authStore.username\\\"\\n                                      :label=\\\"$tc('sw-login.index.labelUsername')\\\"\\n                                      :placeholder=\\\"$tc('sw-login.index.placeholderUsername')\\\"\\n                                      ref=\\\"swLoginUsernameField\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_login_password_field %}\\n                            <sw-field :class=\\\"{ 'has--error' : authStore.errorTitle.length && authStore.errorMessage.length }\\\"\\n                                      v-model=\\\"authStore.password\\\"\\n                                      :label=\\\"$tc('sw-login.index.labelPassword')\\\"\\n                                      :placeholder=\\\"$tc('sw-login.index.placeholderPassword')\\\"\\n                                      type=\\\"password\\\">\\n                            </sw-field>\\n                        {% endblock %}\\n\\n                        {% block sw_login_submit %}\\n                            <div class=\\\"sw-login__submit\\\">\\n                                {% block sw_login_submit_button %}\\n                                    <sw-button variant=\\\"primary\\\">{{ $tc('sw-login.index.buttonLogin') }}</sw-button>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_login_loader %}\\n                            <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                        {% endblock %}\\n                    </form>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","/**\n * @module core/factory/context\n * @type factory\n */\nexport default function createContext(context) {\n    const isDevMode = (process.env.NODE_ENV !== 'production');\n    const installationPath = getInstallationPath(context, isDevMode);\n    const apiPath = getApiPath(installationPath, isDevMode);\n\n    return {\n        installationPath,\n        environment: process.env.NODE_ENV,\n        apiPath: apiPath,\n        apiResourcePath: `${apiPath}/v1`,\n        assetsPath: getAssetsPath(installationPath, isDevMode)\n    };\n}\n\n/**\n * Provides the installation path of the application. The path provides the scheme, host and sub directory.\n *\n * @param {Object} context\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getInstallationPath(context, isDevMode) {\n    if (isDevMode) {\n        return '';\n    }\n\n    let fullPath = '';\n    if (context.schemeAndHttpHost && context.schemeAndHttpHost.length) {\n        fullPath = `${context.schemeAndHttpHost}${context.basePath}`;\n    }\n\n    return fullPath;\n}\n\n/**\n * Provides the full path to the API end point of the application\n *\n * @param {String} installationPath\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getApiPath(installationPath, isDevMode) {\n    if (isDevMode) {\n        installationPath = process.env.BASE_PATH;\n    }\n\n    return `${installationPath}/api`;\n}\n\n/**\n * Provides the path to the assets directory.\n *\n * @param {String} installationPath\n * @param {Boolean} isDevMode\n * @returns {string}\n */\nfunction getAssetsPath(installationPath, isDevMode) {\n    if (isDevMode) {\n        return '';\n    }\n\n    return `${installationPath}/bundles/`;\n}\n","import { Application } from 'src/core/shopware';\n\n/**\n * Refresh token helper which manages a cache of requests to retry them after the token got refreshed.\n * @class\n */\nexport default class RefreshTokenHelper {\n    constructor() {\n        this._isRefreshing = false;\n        this._subscribers = [];\n        this._whitelist = [\n            '/oauth/token'\n        ];\n    }\n\n    /**\n     * Subscribe a new callback to the cache queue\n     *\n     * @param {Function} [callback = () => {}]\n     */\n    subscribe(callback = () => {}) {\n        this._subscribers.push(callback);\n    }\n\n    /**\n     * Event handler which will be fired when the token got refresh. It iterates over the registered\n     * subscribers and fires the callbacks with the new token.\n     *\n     * @param {String} token - Renewed access token\n     */\n    onRefreshToken(token) {\n        this._subscribers = this._subscribers.reduce((accumulator, callback) => {\n            callback.call(null, token);\n            return accumulator;\n        }, []);\n    }\n\n    /**\n     * Fires the refresh token request and renews the bearer authentication in the login service.\n     *\n     * @returns {Promise<String>}\n     */\n    fireRefreshTokenRequest() {\n        const providerContainer = Application.getContainer('service');\n        const loginService = providerContainer.loginService;\n        const refreshToken = loginService.getRefreshToken();\n\n        if (!refreshToken || !refreshToken.length) {\n            return Promise.reject(new Error('No refresh token found.'));\n        }\n\n        this.isRefreshing = true;\n        return loginService.refreshTokenUsingRefreshToken(refreshToken).then((response) => {\n            const refresh = loginService.getBearerAuthentication('refresh');\n            this.isRefreshing = false;\n\n            loginService.setBearerAuthentication({\n                access: response.data.access_token,\n                expiry: response.data.expires_in,\n                refresh\n            });\n            return response.data.access_token;\n        });\n    }\n\n    get whitelist() {\n        return this._whitelist;\n    }\n\n    set whitelist(urls) {\n        this._whitelists = urls;\n    }\n\n    get isRefreshing() {\n        return this._isRefreshing;\n    }\n\n    set isRefreshing(value) {\n        this._isRefreshing = value;\n    }\n}\n","/**\n * @module core/factory/http\n */\nimport Axios from 'axios';\nimport RefreshTokenHelper from 'src/core/helper/refresh-token.helper';\n\n/**\n * Initializes the HTTP client with the provided context. The context provides the API end point and will be used as\n * the base url for the HTTP client.\n *\n * @method createHTTPClient\n * @memberOf module:core/factory/http\n * @param {Context} context Information about the environment\n * @returns {AxiosInstance}\n */\nexport default function createHTTPClient(context) {\n    return createClient(context);\n}\n\n/**\n * Creates the HTTP client with the provided context.\n *\n * @param {Context} context Information about the environment\n * @returns {AxiosInstance}\n */\nfunction createClient(context) {\n    const client = Axios.create({\n        baseURL: context.apiResourcePath\n    });\n\n    return refreshTokenInterceptor(client);\n}\n\n/**\n * Sets up an interceptor to refresh the token, cache the requests and retry them after the token got refreshed.\n *\n * @param {AxiosInstance} client\n * @returns {AxiosInstance}\n */\nfunction refreshTokenInterceptor(client) {\n    const tokenHandler = new RefreshTokenHelper();\n\n    client.interceptors.response.use((response) => {\n        return response;\n    }, (error) => {\n        const { config, response: { status } } = error;\n        const originalRequest = config;\n        const resource = originalRequest.url.replace(originalRequest.baseURL, '');\n\n        if (tokenHandler.whitelist.includes(resource)) {\n            return Promise.reject(error);\n        }\n\n        if (status === 401) {\n            if (!tokenHandler.isRefreshing) {\n                tokenHandler.fireRefreshTokenRequest().then((newToken) => {\n                    tokenHandler.onRefreshToken(newToken);\n                }).catch(() => {\n                    return Promise.reject(error);\n                });\n            }\n\n            return new Promise((resolve) => {\n                tokenHandler.subscribe((newToken) => {\n                    // replace the expired token and retry\n                    originalRequest.headers.Authorization = `Bearer ${newToken}`;\n                    resolve(Axios(originalRequest));\n                });\n            });\n        }\n\n        return Promise.reject(error);\n    });\n\n    return client;\n}\n","import { Application } from 'src/core/shopware';\nimport utils, { types } from 'src/core/service/util.service';\nimport { deepCopyObject, hasOwnProperty } from 'src/core/service/utils/object.utils';\n\nexport default class EntityStore {\n    constructor(entityName, apiService, EntityClass) {\n        this.entityName = entityName;\n        this.EntityClass = EntityClass;\n\n        if (types.isString(apiService)) {\n            const serviceContainer = Application.getContainer('service');\n            this.apiService = serviceContainer[apiService];\n        } else {\n            this.apiService = apiService;\n        }\n\n        this.isLoading = false;\n        this.store = {};\n    }\n\n    /**\n     * Returns an entity by its id synchronously.\n     *\n     * @param {String} id\n     * @param {Boolean} [force=false]\n     * @return {*}\n     */\n    getById(id, force = false) {\n        if (this.store[id] && force !== true) {\n            return this.store[id];\n        }\n\n        const entity = this.create(id);\n\n        entity.isLoading = true;\n        this.apiService.getById(id).then((response) => {\n            entity.setData(response.data);\n            entity.isLoading = false;\n        });\n\n        return entity;\n    }\n\n    /**\n     * Returns an entity by its id asynchronously.\n     *\n     * @param {String} id\n     * @return {Promise<never> | Promise<any>}\n     */\n    getByIdAsync(id) {\n        if (!id || !id.length) {\n            return Promise.reject();\n        }\n\n        const entity = this.create(id);\n\n        entity.isLoading = true;\n        return this.apiService.getById(id).then((response) => {\n            entity.setData(response.data);\n            entity.isLoading = false;\n\n            return entity;\n        });\n    }\n\n    /**\n     * Loads a list of entities from the server.\n     *\n     * @param {Object} params\n     */\n    getList(params) {\n        this.isLoading = true;\n\n        return this.apiService.getList(params).then((response) => {\n            const total = response.meta.total;\n            const items = [];\n\n            this.isLoading = false;\n\n            response.data.forEach((item) => {\n                const entity = this.create(item.id);\n                entity.setData(item);\n                items.push(entity);\n            });\n\n            return { items, total };\n        });\n    }\n\n    /**\n     * Creates a new entity in the store.\n     *\n     * @param {String} id\n     * @return {*}\n     */\n    create(id = utils.createId()) {\n        if (this.store[id]) {\n            return this.store[id];\n        }\n\n        this.store[id] = new this.EntityClass(this.entityName, this.apiService, id, this);\n        return this.store[id];\n    }\n\n    /**\n     * Duplicates an entity in the store.\n     *\n     * @param {String} id\n     * @return {*}\n     */\n    duplicate(id) {\n        const newId = utils.createId();\n\n        this.store[newId] = new this.EntityClass(this.entityName, this.apiService, newId, this);\n\n        if (this.store[id]) {\n            const duplicateData = deepCopyObject(this.store[id].draft);\n            duplicateData.id = newId;\n\n            this.store[newId].setLocalData(duplicateData);\n        }\n\n        return this.store[newId];\n    }\n\n    /**\n     * Adds an entity proxy to the store.\n     *\n     * @param {EntityProxy} entity\n     * @return {boolean}\n     */\n    add(entity) {\n        if (!hasOwnProperty(entity, 'id')) {\n            return false;\n        }\n\n        this.store[entity.id] = entity;\n        return true;\n    }\n\n    /**\n     * Removes an entity from the store.\n     *\n     * @param {EntityProxy} entity\n     * @return {boolean}\n     */\n    remove(entity) {\n        if (!hasOwnProperty(entity, 'id') || !this.store[entity.id]) {\n            return false;\n        }\n\n        delete this.store[entity.id];\n        return true;\n    }\n\n    /**\n     * Removes an entity from the store by its id.\n     *\n     * @param {String} id\n     * @return {boolean}\n     */\n    removeById(id) {\n        if (!this.store[id]) {\n            return false;\n        }\n\n        delete this.store[id];\n        return true;\n    }\n\n    /**\n     * Removes all entities from the store.\n     *\n     * @return {boolean}\n     */\n    removeAll() {\n        this.store = {};\n        return true;\n    }\n\n    /**\n     * Iterator method to apply on all store items.\n     *\n     * @param {Function} iterator\n     * @param {Object} scope\n     * @return {{}}\n     */\n    forEach(iterator, scope = this) {\n        if (!types.isFunction(iterator)) {\n            return this.store;\n        }\n\n        Object.keys(this.store).forEach((id) => {\n            iterator.call(scope, this.store[id], id);\n        });\n\n        return this.store;\n    }\n\n    /**\n     * Syncs all entities in the store with the server.\n     *\n     * @param {Boolean} deletionsOnly\n     * @return {Promise<any[]>}\n     */\n    sync(deletionsOnly = false) {\n        let syncQueue = this.getDeletionQueue();\n\n        if (deletionsOnly === false) {\n            syncQueue = [...syncQueue, ...this.getUpdateQueue()];\n        }\n\n        this.isLoading = true;\n\n        return Promise.all(syncQueue).then(() => {\n            this.isLoading = false;\n        });\n    }\n\n    /**\n     * Get a promise queue of deleted entities.\n     *\n     * @return {Array}\n     */\n    getDeletionQueue() {\n        const deletionQueue = [];\n\n        Object.keys(this.store).forEach((id) => {\n            const entity = this.store[id];\n\n            if (entity.isDeleted) {\n                deletionQueue.push(new Promise((resolve, reject) => {\n                    entity.delete(true)\n                        .then((response) => { resolve(response); })\n                        .catch((response) => { reject(response); });\n                }));\n            }\n        });\n\n        return deletionQueue;\n    }\n\n    /**\n     * Get a promise queue of changed entities.\n     *\n     * @return {Array}\n     */\n    getUpdateQueue() {\n        const updateQueue = [];\n\n        Object.keys(this.store).forEach((id) => {\n            const entity = this.store[id];\n\n            if (entity.isDeleted) {\n                return;\n            }\n\n            const changes = entity.getChanges();\n\n            if (entity.isLocal || Object.keys(changes).length > 0) {\n                updateQueue.push(\n                    new Promise((resolve, reject) => {\n                        entity.save()\n                            .then((response) => { resolve(response); })\n                            .catch((response) => { reject(response); });\n                    })\n                );\n            }\n        });\n\n        return updateQueue;\n    }\n}\n","import { types } from 'src/core/service/util.service';\nimport EntityStore from './EntityStore';\n\nexport default class AssociationStore extends EntityStore {\n    constructor(entityName, apiService, EntityClass, parentEntity = null, associationKey = null) {\n        super(entityName, apiService, EntityClass);\n\n        this.parentEntity = parentEntity;\n        this.associationKey = associationKey;\n        this.total = null;\n    }\n\n    /**\n     * Loads a list of entities from the server.\n     *\n     * @param {Object} params\n     * @param {Boolean} populateParent\n     * @return {Promise<{}>}\n     */\n    getList(params, populateParent = true) {\n        return super.getList(params).then((response) => {\n            if (populateParent === true && response.items && response.items.length) {\n                this.populateParentEntity(response.items);\n            }\n\n            if (response.total) {\n                this.total = response.total;\n            }\n\n            return response;\n        });\n    }\n\n    /**\n     * Populates the data of the parent entity with associated data.\n     *\n     * @param items\n     * @return {*}\n     */\n    populateParentEntity(items) {\n        const parentProp = this.parentEntity.draft[this.associationKey];\n\n        if (parentProp && types.isArray(parentProp)) {\n            parentProp.splice(0, parentProp.length);\n            parentProp.push(...items);\n        }\n\n        return parentProp;\n    }\n\n    /**\n     * Returns the last total number of associated entities.\n     *\n     * @return {null|Number}\n     */\n    getTotal() {\n        return this.total;\n    }\n}\n","import { Application, Entity, State } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport { deepCopyObject, hasOwnProperty, getArrayChanges } from 'src/core/service/utils/object.utils';\nimport { required } from 'src/core/service/validation.service';\nimport type from 'src/core/service/utils/types.utils';\nimport CriteriaFactory from 'src/core/factory/criteria.factory';\nimport ApiService from 'src/core/service/api/api.service';\nimport AssociationStore from './AssociationStore';\n\nexport default class EntityProxy {\n    constructor(entityName, apiService, id = utils.createId(), store = null) {\n        const that = this;\n\n        that.id = id;\n        that.entityName = entityName;\n\n        /**\n         * The API service for operating CRUD operations for the entity.\n         *\n         * @type ApiService\n         */\n        that.apiService = apiService;\n\n        /**\n         * The corresponding store, which holds the entity.\n         *\n         * @type EntityStore\n         */\n        that.store = store;\n\n        /**\n         * Shows if there is an async action working on the entity.\n         *\n         * @type {boolean}\n         */\n        that.isLoading = false;\n\n        /**\n         * Symbolizes if the entity was never synchronized with the server.\n         *\n         * @type {boolean}\n         */\n        that.isLocal = true;\n\n        /**\n         * Symbolizes that the entity was deleted locally but was not already deleted on the server.\n         *\n         * @type {boolean}\n         */\n        that.isDeleted = false;\n\n        /**\n         * Holds all exceptions related to this entity.\n         *\n         * @type {Array}\n         */\n        that.errors = [];\n\n        /**\n         * A registry of all OneToMany associated stores of this entity.\n         *\n         * @type {Object}\n         */\n        that.associations = {};\n\n        /**\n         * The original data of the entity.\n         * All changes which are made locally will not affect this object.\n         *\n         * @type {Object}\n         */\n        that.original = Entity.getRawEntityObject(this.entitySchema);\n        that.original.id = id;\n\n        /**\n         * The draft data of the entity on which local changes are applied.\n         * For saving there will be a changeset generated between the draft and the original data.\n         *\n         * @type {Object}\n         */\n        that.draft = deepCopyObject(that.original);\n\n        that.createAssociatedStores();\n\n        return new Proxy(that.exposedData, {\n            get(target, property) {\n                // The normal getter for the raw data.\n                if (property in target) {\n                    return target[property];\n                }\n\n                // You can also access some methods of the class directly on the object.\n                if (property in that) {\n                    return that[property];\n                }\n\n                return null;\n            },\n\n            set(target, property, value) {\n                if (property === 'draft') {\n                    Object.assign(that.draft, deepCopyObject(value));\n                    Object.assign(target, that.exposedData);\n                    return true;\n                }\n\n                if (property === 'original') {\n                    Object.assign(that.original, deepCopyObject(value));\n                    return true;\n                }\n\n                if (property in target) {\n                    target[property] = value;\n                }\n\n                if (property in that.draft) {\n                    that.draft[property] = value;\n                }\n\n                if (property in that) {\n                    that[property] = value;\n                }\n\n                return true;\n            }\n        });\n    }\n\n    /**\n     * Initializes data of the entity by setting the draft and original data.\n     * This method is mostly used to set data which was loaded from the server.\n     *\n     * @param {Object} data\n     * @param {Boolean} [removeAssociationKeysFromData=true]\n     * @param {Boolean} [populateAssociations=false]\n     */\n    setData(data, removeAssociationKeysFromData = true, populateAssociations = false) {\n        const associatedProps = this.associatedEntityPropNames;\n\n        if (populateAssociations === true) {\n            this.populateAssociatedStores(data);\n        }\n\n        if (removeAssociationKeysFromData === true) {\n            Object.keys(data).forEach((prop) => {\n                if (associatedProps.includes(prop)) {\n                    delete data[prop];\n                }\n            });\n        }\n\n        this.draft = data;\n        this.original = data;\n        this.isLocal = false;\n    }\n\n    /**\n     * Apply local data changes to the entity.\n     *\n     * @param {Object} data\n     * @param {Boolean} [removeAssociationKeysFromData=true]\n     * @param {Boolean} [applyAsChange=true]\n     */\n    setLocalData(data, removeAssociationKeysFromData = true, applyAsChange = true) {\n        const associatedProps = this.associatedEntityPropNames;\n\n        if (removeAssociationKeysFromData === true) {\n            Object.keys(data).forEach((prop) => {\n                if (associatedProps.includes(prop)) {\n                    delete data[prop];\n                }\n            });\n        }\n\n        this.draft = data;\n\n        if (applyAsChange !== true) {\n            this.original = data;\n        }\n    }\n\n    /**\n     * Discards current changes of the entity.\n     */\n    discardChanges() {\n        this.draft = deepCopyObject(this.original);\n    }\n\n    /**\n     * Applies the changes of the entity, so they become the current state.\n     */\n    applyChanges() {\n        this.original = deepCopyObject(this.draft);\n    }\n\n    /**\n     * Saves the entity to the server.\n     *\n     * @param {Boolean} includeAssociations\n     * @return {Promise<{}>}\n     */\n    save(includeAssociations = true) {\n        const changes = this.getChanges();\n        let changedAssociations = {};\n        let deletionQueue = [];\n\n        if (includeAssociations === true) {\n            changedAssociations = this.getChangedAssociations();\n\n            Object.assign(changes, changedAssociations);\n            deletionQueue = this.getDeletedAssociationsQueue();\n        }\n\n        if (this.isLocal) {\n            return this.sendCreateRequest(changes, changedAssociations);\n        }\n\n        this.isLoading = true;\n        return Promise.all(deletionQueue).then(() => {\n            if (!Object.keys(changes).length) {\n                this.isLoading = false;\n                return Promise.resolve(this.exposedData);\n            }\n\n            return this.sendUpdateRequest(changes, changedAssociations);\n        }).catch((exception) => {\n            this.isLoading = false;\n            return Promise.reject(this.handleException(exception));\n        });\n    }\n\n    /**\n     * Internal method for sending the create request.\n     *\n     * @private\n     * @param {Object} changes\n     * @param {Object} changedAssociations\n     * @return {Promise}\n     */\n    sendCreateRequest(changes, changedAssociations) {\n        changes.id = this.id;\n\n        this.isLoading = true;\n\n        return this.apiService.create(changes, { _response: true }).then((response) => {\n            this.isLoading = false;\n\n            if (response.data) {\n                this.setData(response.data);\n            }\n\n            this.refreshAssociations(changedAssociations);\n\n            return Promise.resolve(this.exposedData);\n        }).catch((exception) => {\n            this.isLoading = false;\n            return Promise.reject(this.handleException(exception));\n        });\n    }\n\n    /**\n     * Internal method for sending the update request.\n     *\n     * @private\n     * @param {Object} changes\n     * @param {Object} changedAssociations\n     * @return {Promise}\n     */\n    sendUpdateRequest(changes, changedAssociations = {}) {\n        this.isLoading = true;\n\n        return this.apiService.updateById(this.id, changes, { _response: true }).then((response) => {\n            this.isLoading = false;\n\n            if (response.data) {\n                this.setData(response.data);\n            }\n\n            this.refreshAssociations(changedAssociations);\n\n            return Promise.resolve(this.exposedData);\n        }).catch((exception) => {\n            this.isLoading = false;\n            return Promise.reject(this.handleException(exception));\n        });\n    }\n\n    /**\n     * Reloads changed associations from the server.\n     *\n     * @param {Object} changedAssociations\n     */\n    refreshAssociations(changedAssociations) {\n        Object.keys(changedAssociations).forEach((associationKey) => {\n            const association = this.associations[associationKey];\n            const associationIds = changedAssociations[associationKey].reduce((acc, item) => {\n                return [...acc, item.id];\n            }, []);\n\n            const limit = 50;\n            const pages = Math.ceil(associationIds.length / limit);\n            const criteria = CriteriaFactory.terms('id', associationIds);\n\n            for (let i = 1; i <= pages; i += 1) {\n                association.getList({ page: i, limit, criteria }, false);\n            }\n        });\n    }\n\n    /**\n     * Deletes the entity.\n     *\n     * @param {Boolean} directDelete\n     * @return {Promise}\n     */\n    delete(directDelete = false) {\n        this.isDeleted = true;\n\n        if (directDelete !== true) {\n            return Promise.resolve();\n        }\n\n        if (this.isLocal) {\n            this.remove();\n            return Promise.resolve();\n        }\n\n        return this.apiService.delete(this.id).then(() => {\n            this.remove();\n        }).catch((exception) => {\n            return Promise.reject(this.handleException(exception));\n        });\n    }\n\n    /**\n     * Removes the entity from its corresponding store.\n     *\n     * @return {boolean}\n     */\n    remove() {\n        if (this.store === null) {\n            return false;\n        }\n\n        return this.store.remove(this);\n    }\n\n    /**\n     * Validates the entity.\n     *\n     * @return {Boolean}\n     */\n    validate(data = this.draft) {\n        return this.requiredProperties.every((property) => {\n            return required(data[property]);\n        });\n    }\n\n    /**\n     * Handles exceptions returned from the server.\n     *\n     * @param exception\n     * @return {Object}\n     */\n    handleException(exception) {\n        if (exception.response.data && exception.response.data.errors) {\n            exception.response.data.errors.forEach((error) => {\n                this.addError(error);\n            });\n        }\n\n        return exception;\n    }\n\n    /**\n     * Adds a new error for the entity.\n     *\n     * @param {Object} error\n     */\n    addError(error) {\n        this.errors.push(error);\n\n        State.getStore('error').addError({\n            type: this.entityName,\n            error\n        });\n    }\n\n    /**\n     * Creates entity stores for each OneToMany association of the entity.\n     */\n    createAssociatedStores() {\n        const associationDefinitions = this.associatedEntityPropDefinitions;\n\n        const initContainer = Application.getContainer('init');\n        const serviceContainer = Application.getContainer('service');\n\n        Object.keys(associationDefinitions).forEach((prop) => {\n            const definition = associationDefinitions[prop];\n            const apiEndPoint = `${this.kebabEntityName}/${this.id}/${prop}`;\n\n            const apiService = new ApiService(\n                initContainer.httpClient,\n                serviceContainer.loginService,\n                apiEndPoint\n            );\n\n            this.associations[prop] = new AssociationStore(definition.entity, apiService, EntityProxy, this, prop);\n\n            if (this.draft[prop] && this.draft[prop].length > 0) {\n                this.populateAssociatedStore(prop, this.draft[prop]);\n            }\n        });\n    }\n\n    /**\n     * Populates all associated stores and creates entities if there is initial data provided.\n     */\n    populateAssociatedStores(data = this.draft) {\n        const associatedProps = this.associatedEntityPropNames;\n\n        associatedProps.forEach((prop) => {\n            if (data[prop] && data[prop].length > 0) {\n                this.populateAssociatedStore(prop, data[prop]);\n            }\n        });\n    }\n\n    /**\n     * Populates an associated store and creates entities based on the provided data.\n     *\n     * @param {String} associationName\n     * @param {Array} items\n     * @return {*}\n     */\n    populateAssociatedStore(associationName, items) {\n        const store = this.associations[associationName];\n\n        items.forEach((item) => {\n            const entity = store.create(item.id);\n            entity.setData(item);\n        });\n\n        return store;\n    }\n\n    /**\n     * Returns the store for a OneToMany association by property name.\n     *\n     * @param {String} associationName\n     * @return {*}\n     */\n    getAssociation(associationName) {\n        return this.associations[associationName];\n    }\n\n    /**\n     * Returns a promise queue for syncing all deleted OneToMany associations.\n     *\n     * @return {Array}\n     */\n    getDeletedAssociationsQueue() {\n        let deletionQueue = [];\n\n        Object.keys(this.associations).forEach((associationKey) => {\n            const association = this.associations[associationKey];\n            const assocDeletionQueue = association.getDeletionQueue();\n\n            if (assocDeletionQueue.length > 0) {\n                deletionQueue = [...deletionQueue, ...assocDeletionQueue];\n            }\n        });\n\n        return deletionQueue;\n    }\n\n    /**\n     * Get all changed OneToMany associations.\n     * Includes changes and additions but no deletions, because they are handled separately.\n     * Returns an object which fits the structure of the entity so it can be merged into other data or changesets.\n     *\n     * @return {{}}\n     */\n    getChangedAssociations() {\n        const changes = {};\n\n        Object.keys(this.associations).forEach((associationKey) => {\n            const association = this.associations[associationKey];\n\n            Object.keys(association.store).forEach((id) => {\n                const entity = association.store[id];\n\n                // Deletions are handled in separate requests\n                if (entity.isDeleted) {\n                    return;\n                }\n\n                const associationChanges = entity.getChanges();\n\n                if (entity.isLocal || Object.keys(associationChanges).length > 0) {\n                    associationChanges.id = id;\n                    changes[associationKey] = changes[associationKey] || [];\n                    changes[associationKey].push(associationChanges);\n                }\n            });\n        });\n\n        return changes;\n    }\n\n    /**\n     * Get all changes made to the data of the entity.\n     * This method will generate a detailed changeset considering the schema definition of the entity.\n     * Also handles changes for OneToOne associations and special JSON fields.\n     *\n     * @param {Object} a\n     * @param {Object} b\n     * @param {Object} schema\n     * @return {*}\n     */\n    getChanges(a = this.original, b = this.draft, schema = Entity.getDefinition(this.entityName)) {\n        const properties = schema.properties;\n        const propertyList = Object.keys(properties);\n        const blacklist = Entity.getPropertyBlacklist();\n\n        if (a === b) {\n            return {};\n        }\n\n        if (!type.isObject(a) || !type.isObject(b)) {\n            return b;\n        }\n\n        if (type.isDate(a) || type.isDate(b)) {\n            if (a.valueOf() === b.valueOf()) {\n                return {};\n            }\n\n            return b;\n        }\n\n        return Object.keys(b).reduce((acc, key) => {\n            // The key is not part of the schema, or it is blacklisted\n            if (!propertyList.includes(key) || blacklist.includes(key)) {\n                return acc;\n            }\n\n            // The property does not exist in the base object, so it is an addition\n            if (!hasOwnProperty(a, key)) {\n                // The property is a OneToOne associated entity\n                if (type.isObject(b[key]) && properties[key].entity) {\n                    const addition = EntityProxy.validateSchema(b[key], Entity.getDefinition(properties[key].entity));\n\n                    if (Object.keys(addition).length <= 0) {\n                        return acc;\n                    }\n\n                    return { ...acc, [key]: addition };\n                }\n\n                // The property is a JSON field\n                if (type.isObject(b[key]) && properties[key].properties) {\n                    const addition = EntityProxy.validateSchema(b[key], properties[key]);\n\n                    if (Object.keys(addition).length <= 0) {\n                        return acc;\n                    }\n\n                    return { ...acc, [key]: addition };\n                }\n\n                // The property is a OneToMany associated entity\n                if (type.isArray(b[key] && properties[key].entity)) {\n                    return acc; // OneToMany associations are handled in a separate store\n                }\n\n                return { ...acc, [key]: b[key] };\n            }\n\n            // The property is a OneToOne associated entity\n            if (type.isObject(b[key]) && properties[key].entity) {\n                const changes = this.getChanges(a[key], b[key], Entity.getDefinition(properties[key].entity));\n\n                if (Object.keys(changes).length <= 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: changes };\n            }\n\n            // The property is a JSON field\n            if (type.isObject(b[key]) && properties[key].properties) {\n                const changes = this.getChanges(a[key], b[key], properties[key]);\n\n                if (Object.keys(changes).length <= 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: EntityProxy.validateSchema(b[key], properties[key]) };\n            }\n\n            // The property is a OneToMany associated entity\n            if (type.isArray(b[key] && properties[key].entity)) {\n                return acc; // OneToMany associations are handled in a separate store\n            }\n\n            // The property is a normal array\n            if (type.isArray(b[key])) {\n                const changes = getArrayChanges(a[key], b[key]);\n\n                if (changes.length <= 0) {\n                    return acc;\n                }\n\n                return { ...acc, [key]: b[key] };\n            }\n\n            // Any other property\n            if (b[key] !== a[key]) {\n                return { ...acc, [key]: b[key] };\n            }\n\n            return acc;\n        }, {});\n    }\n\n    /**\n     * Validates the property structure of an object against an entity schema.\n     * Removes also all properties which are blacklisted.\n     *\n     * @param {Object} obj\n     * @param {Object} schema\n     * @return {{}}\n     */\n    static validateSchema(obj, schema) {\n        const properties = schema.properties;\n        const propertyList = Object.keys(properties);\n        const blacklist = Entity.getPropertyBlacklist();\n\n        return Object.keys(obj).reduce((acc, key) => {\n            if (!propertyList.includes(key) || blacklist.includes(key)) {\n                return acc;\n            }\n\n            return { ...acc, [key]: obj[key] };\n        }, {});\n    }\n\n    /**\n     * Properties which will be exposed with the entity which can be used for internal tasks.\n     * These will not be included in the entity definition or the changeset.\n     *\n     * @return {{isLoading: boolean, errors: Array}}\n     */\n    get privateData() {\n        return {\n            isDeleted: this.isDeleted,\n            isLoading: this.isLoading,\n            errors: this.errors\n        };\n    }\n\n    /**\n     * The data which is exposed by the entity.\n     * This data will be used by the view layer.\n     *\n     * @return {Object}\n     */\n    get exposedData() {\n        return Object.assign({}, this.privateData, this.draft);\n    }\n\n    /**\n     * The schema definition of the entity.\n     *\n     * @return {*}\n     */\n    get entitySchema() {\n        return Entity.getDefinition(this.entityName);\n    }\n\n    /**\n     * A list with names of all required properties of the entity.\n     *\n     * @return {*}\n     */\n    get requiredProperties() {\n        return Entity.getRequiredProperties(this.entityName);\n    }\n\n    /**\n     * All property names of the entity which define a OneToMany relation.\n     *\n     * @return {*}\n     */\n    get associatedEntityPropNames() {\n        return Entity.getAssociatedProperties(this.entityName);\n    }\n\n    /**\n     * Get all property definitions of OneToMany associations of the entity.\n     *\n     * @return {{}}\n     */\n    get associatedEntityPropDefinitions() {\n        const schema = this.entitySchema;\n        const associationProps = this.associatedEntityPropNames;\n\n        return Object.keys(schema.properties).reduce((acc, prop) => {\n            if (associationProps.includes(prop)) {\n                return { ...acc, [prop]: schema.properties[prop] };\n            }\n\n            return acc;\n        }, {});\n    }\n\n    /**\n     * Get the kebab version of the entity name.\n     *\n     * @return {String}\n     */\n    get kebabEntityName() {\n        return this.entityName.replace('_', '-');\n    }\n}\n","const title = 'sw-login.index.titleErrorMessage';\n\nconst codes = {\n    2: 'messageUnsupportedGrantType',\n    3: 'messageInvalidRequest',\n    4: 'messageInvalidClient',\n    5: 'messageInvalidScope',\n    6: 'messageInvalidCredentials',\n    7: 'messageServerError',\n    8: 'messageInvalidRefreshToken',\n    9: 'messageAccessDenied',\n    10: 'messageInvalidGrant'\n};\n\n/**\n * Get the message and title associated to an error code.\n *\n * @param {Number} code\n * @param {String} prefix\n * @returns {Object}\n */\nexport default function getErrorCode(code, prefix = 'sw-login.index.') {\n    return {\n        message: codes[code] ? `${prefix}${codes[code]}` : '',\n        title\n    };\n}\n","/**\n * @module core/data/AuthStore\n */\nimport { Application } from 'src/core/shopware';\nimport getErrorCode from 'src/core/data/error-codes/login.error-codes';\n\nclass AuthStore {\n    constructor() {\n        this.username = '';\n        this.password = '';\n        this.errorTitle = '';\n        this.errorMessage = '';\n        this.lastUrl = '';\n    }\n\n    /**\n     * Logs in the user with his credentials.\n     *\n     * @return {Promise<T>}\n     */\n    loginUserWithPassword() {\n        const providerContainer = Application.getContainer('service');\n        const loginService = providerContainer.loginService;\n\n        return loginService.loginByUsername(this.username, this.password)\n            .then((response) => {\n                loginService.setBearerAuthentication({\n                    access: response.data.access_token,\n                    refresh: response.data.refresh_token,\n                    expiry: response.data.expires_in\n                });\n\n                this.loginSuccess();\n                return true;\n            })\n            .catch((response) => {\n                this.loginFailure(response);\n                return false;\n            });\n    }\n\n    /**\n     * Callback for a successful login. Resets the state object of the store.\n     *\n     * @return {void}\n     */\n    loginSuccess() {\n        this.errorTitle = '';\n        this.errorMessage = '';\n        this.password = '';\n        this.lastUrl = '';\n    }\n\n    /**\n     * Callback for a failed login.\n     *\n     * @param payload\n     */\n    loginFailure(payload) {\n        const generalMessage = 'sw-login.index.messageGeneralRequestError';\n        this.lastUrl = payload.config.url;\n\n        if (!payload.response) {\n            this.errorTitle = payload.message;\n            this.errorMessage = generalMessage;\n\n            return;\n        }\n\n        let error = payload.response.data.errors;\n        error = error.length > 1 ? error : error[0];\n\n        this.password = '';\n\n        if (error.code && error.code.length) {\n            const { message, title } = getErrorCode(parseInt(error.code, 10));\n            this.errorTitle = title;\n            this.errorMessage = message;\n        }\n    }\n}\n\nexport default AuthStore;\n","/**\n * @module core/data/NotificationStore\n */\nimport utils from 'src/core/service/util.service';\nimport types from 'src/core/service/utils/types.utils';\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nclass NotificationStore {\n    constructor() {\n        this.notifications = [];\n\n        this.defaults = {\n            system: false,\n            variant: 'info', // success, info, warning, error\n            autoClose: true,\n            duration: 5000\n        };\n    }\n\n    /**\n     * Create a new notification.\n     *\n     * @param {Object} config\n     * @returns {Promise<T>}\n     */\n    createNotification(config) {\n        if (!config.message) {\n            warn('NotificationStore', 'A message must be specified', config);\n            return Promise.reject(config);\n        }\n\n        const notification = Object.assign({ uuid: utils.createId() }, this.defaults, config);\n\n        this.addNotification(notification);\n\n        if (!notification.autoClose) {\n            return Promise.resolve(notification);\n        }\n\n        return new Promise((resolve) => {\n            setTimeout(() => {\n                this.removeNotification(notification.uuid);\n                resolve(notification);\n            }, notification.duration);\n        });\n    }\n\n    /**\n     * Add a notification object to the store.\n     *\n     * @param {Object} notification\n     */\n    addNotification(notification) {\n        this.notifications.push(notification);\n\n        if (this.notifications.length > 5) {\n            this.removeNotification();\n        }\n    }\n\n    /**\n     * Remove a notification from the store.\n     *\n     * @param uuid\n     */\n    removeNotification(uuid = 0) {\n        if (!types.isString(uuid)) {\n            this.notifications.splice(uuid, 1);\n            return;\n        }\n\n        this.notifications.splice(this.notifications.findIndex(item => item.uuid === uuid), 1);\n    }\n}\n\nexport default NotificationStore;\n","/**\n * @module core/data/ErrorStore\n */\nimport { State } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\n\nclass ErrorStore {\n    constructor() {\n        this.errors = {\n            system: []\n        };\n\n        this.formErrors = {};\n\n        this.errorTemplate = {\n            code: 0,\n            type: '',\n            title: '',\n            detail: '',\n            id: null,\n            propertyDepth: [],\n            propertyPath: '',\n            status: ''\n        };\n    }\n\n    /**\n     * Registers the data binding of a field component to automatically match new errors.\n     *\n     * @param {String} expression\n     * @return {*}\n     */\n    registerFormField(expression) {\n        if (!this.formErrors[expression]) {\n            this.formErrors[expression] = Object.assign({}, this.errorTemplate);\n        }\n\n        return this.formErrors[expression];\n    }\n\n    /**\n     * Add a new error to the store.\n     *\n     * @param {Object} payload\n     * @return {boolean}\n     */\n    addError(payload) {\n        if (!payload.error) {\n            return false;\n        }\n\n        const error = payload.error;\n        const type = payload.type || 'system';\n\n        error.id = utils.createId();\n        error.type = type;\n\n        if (!this.errors[type]) {\n            this.errors[type] = {};\n        }\n\n        if (type !== 'system' && error.source && error.source.pointer) {\n            error.propertyDepth = error.source.pointer.split('/');\n            error.propertyPath = `${type}${error.propertyDepth.join('.')}`;\n\n            if (typeof this.formErrors[error.propertyPath] !== 'undefined') {\n                Object.assign(this.formErrors[error.propertyPath], error);\n            }\n\n            error.propertyDepth.reduce((obj, key, i) => {\n                if (!key.length || key.length <= 0) {\n                    return obj;\n                }\n\n                obj[key] = (i === error.propertyDepth.length - 1) ? error : {};\n\n                return obj[key];\n            }, this.errors[type]);\n        } else {\n            this.errors.system.push(error);\n\n            /**\n             * System errors will trigger a notification to display the error.\n             */\n            State.getStore('notification').createNotification({\n                variant: 'error',\n                title: error.title,\n                message: error.detail\n            });\n        }\n\n        return error;\n    }\n\n    /**\n     * Remove an error from the store.\n     *\n     * @param {Object} error\n     * @return {boolean}\n     */\n    deleteError(error) {\n        if (!error || !error.type) {\n            return false;\n        }\n\n        if (typeof this.formErrors[error.propertyPath] !== 'undefined') {\n            Object.assign(this.formErrors[error.propertyPath], this.errorTemplate);\n        }\n\n        if (error.type === 'system') {\n            this.errors.system = this.errors.system.filter((item) => {\n                return item.id !== error.id;\n            });\n        } else {\n            error.propertyDepth.reduce((obj, key, index) => {\n                if (!key.length || key.length <= 0) {\n                    return obj;\n                }\n\n                if (index === error.propertyDepth.length - 1 && obj[key]) {\n                    delete obj[key];\n                }\n\n                return (obj !== null && obj[key]) ? obj[key] : null;\n            }, this.errors[error.type]);\n        }\n\n        return true;\n    }\n}\n\nexport default ErrorStore;\n","/**\n * @module core/data/LocaleStore\n */\nimport { Application } from 'src/core/shopware';\n\nclass LocaleStore {\n    constructor() {\n        this.locale = 'en-GB';\n    }\n\n    /**\n     * Set the current locale state.\n     *\n     * @param {String} locale\n     */\n    setLocale(locale) {\n        const factoryContainer = Application.getContainer('factory');\n        const localeFactory = factoryContainer.locale;\n\n        this.locale = locale;\n        localeFactory.setLocale(locale);\n    }\n}\n\nexport default LocaleStore;\n","import utils from 'src/core/service/util.service';\n\n/**\n * This class wraps an upload and stores information about it. For use in core/data/UploadStore\n * @class\n */\nclass UploadTask {\n    constructor(uploadFunction) {\n        this.id = utils.createId();\n\n        this.running = false;\n        this.resolved = false;\n\n        this.uploadFunction = uploadFunction;\n    }\n\n    start() {\n        if (this.running || this.resolved) {\n            return Promise.resolve({});\n        }\n\n        this.running = true;\n\n        return Promise.resolve(this.uploadFunction()).then(() => {\n            this.markAsResolved();\n        }).catch(() => {\n            this.markAsResolved();\n        });\n    }\n\n    markAsResolved() {\n        this.running = false;\n        this.resolved = true;\n    }\n}\n\nexport default UploadTask;\n","/**\n * @module core/data/UploadStore\n */\nimport noop from 'lodash/noop';\nimport remove from 'lodash/remove';\nimport UploadTask from 'src/core/helper/uploadTask.helper';\n\nclass UploadStore {\n    constructor() {\n        this.tags = new Map();\n    }\n\n    isTagMissing(tag) {\n        return !this.tags.has(tag);\n    }\n\n    addUpload(tag, uploadFunction) {\n        if (this.isTagMissing(tag)) {\n            this.tags.set(tag, []);\n        }\n\n        const task = new UploadTask(uploadFunction);\n\n        this.tags.get(tag).push(task);\n\n        return task;\n    }\n\n    removeUpload(id) {\n        this.tags.forEach((taskCollection, tag) => {\n            remove(taskCollection, (task) => {\n                return task.id === id;\n            });\n\n            if (taskCollection.length === 0) {\n                this.tags.delete(tag);\n            }\n        });\n    }\n\n    runUploads(tag, callback = noop) {\n        if (this.isTagMissing(tag)) {\n            return Promise.resolve({});\n        }\n\n        return Promise.all(this.tags.get(tag).map((task) => {\n            return task.start().then(() => {\n                callback.apply(null, [this.getRunningTaskCount(tag)]);\n            });\n        })).finally(() => {\n            this.tags.delete(tag);\n        });\n    }\n\n    getRunningTaskCount(tag) {\n        if (this.isTagMissing(tag)) {\n            return 0;\n        }\n        return this.tags.get(tag).reduce((total, task) => {\n            return task.running ? total + 1 : total;\n        }, 0);\n    }\n\n    getPendingTaskCount(tag) {\n        if (this.isTagMissing(tag)) {\n            return 0;\n        }\n        return this.tags.get(tag).reduce((total, task) => {\n            const isPending = !task.running && !task.resolved;\n            return isPending ? total + 1 : total;\n        }, 0);\n    }\n}\n\nexport default UploadStore;\n","import { Mixin } from 'src/core/shopware';\nimport { types } from 'src/core/service/util.service';\n\n/**\n * @module app/mixin/validation\n */\nMixin.register('validation', {\n    inject: ['validationService'],\n\n    props: {\n        validation: {\n            type: [String, Array, Object, Boolean],\n            required: false,\n            default: null\n        }\n    },\n\n    computed: {\n        isValid() {\n            return this.validate(this.value);\n        }\n    },\n\n    methods: {\n        validate(value) {\n            let validation = this.validation;\n            let valid = true;\n\n            if (types.isBoolean(validation)) {\n                return validation;\n            }\n\n            if (types.isString(validation)) {\n                const validationList = validation.split(',');\n\n                if (validationList.length > 1) {\n                    validation = validationList;\n                } else {\n                    valid = this.validateRule(value, this.validation);\n                }\n            }\n\n            if (types.isArray(validation)) {\n                valid = validation.every((validationRule) => {\n                    if (types.isBoolean(validationRule)) {\n                        return validationRule;\n                    }\n\n                    return this.validateRule(value, validationRule.trim());\n                });\n            }\n\n            return valid;\n        },\n\n        validateRule(value, rule) {\n            if (typeof this.validationService[rule] === 'undefined') {\n                return false;\n            }\n\n            return this.validationService[rule](value);\n        }\n    }\n});\n","import { Mixin, State } from 'src/core/shopware';\n\nMixin.register('notification', {\n\n    computed: {\n        notificationStore() {\n            return State.getStore('notification');\n        }\n    },\n\n    methods: {\n        createNotificationSuccess(config) {\n            const notification = Object.assign({\n                variant: 'success'\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createNotificationInfo(config) {\n            const notification = Object.assign({\n                variant: 'info'\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createNotificationWarning(config) {\n            const notification = Object.assign({\n                variant: 'warning'\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createNotificationError(config) {\n            const notification = Object.assign({\n                variant: 'error'\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createSystemNotificationSuccess(config) {\n            const notification = Object.assign({\n                variant: 'success',\n                system: true\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createSystemNotificationInfo(config) {\n            const notification = Object.assign({\n                variant: 'info',\n                system: true\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createSystemNotificationWarning(config) {\n            const notification = Object.assign({\n                variant: 'warning',\n                system: true\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createSystemNotificationError(config) {\n            const notification = Object.assign({\n                variant: 'error',\n                system: true\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        },\n\n        createNotification(config) {\n            this.notificationStore.createNotification(config);\n        },\n\n        createSystemNotification(config) {\n            const notification = Object.assign({\n                system: true\n            }, config);\n\n            this.notificationStore.createNotification(notification);\n        }\n    }\n});\n","import { Mixin } from 'src/core/shopware';\nimport CriteriaFactory from 'src/core/factory/criteria.factory';\nimport { debug } from 'src/core/service/util.service';\n\nMixin.register('listing', {\n\n    data() {\n        return {\n            page: 1,\n            limit: 25,\n            total: 0,\n            sortBy: null,\n            sortDirection: 'ASC',\n            term: ''\n        };\n    },\n\n    computed: {\n        maxPage() {\n            return Math.ceil(this.total / this.limit);\n        },\n\n        routeName() {\n            return this.$route.name;\n        },\n\n        filters() {\n            debug.warn('Listing Mixin', 'You can create your custom filters by defining the computed property \"filters\".');\n            return [];\n        }\n    },\n\n    created() {\n        this.getDataFromRoute();\n        this.updateRoute();\n        this.getList();\n    },\n\n    methods: {\n        getDataFromRoute() {\n            const params = this.$route.query;\n\n            this.page = parseInt(params.page, 10) || this.page;\n            this.limit = parseInt(params.limit, 10) || this.limit;\n            this.sortDirection = params.sortDirection || this.sortDirection;\n            this.sortBy = params.sortBy || this.sortBy;\n            this.term = params.term || this.term;\n\n            if (params.filters) {\n                const filters = JSON.parse(params.filters);\n\n                filters.queries.forEach((query) => {\n                    const localFilter = this.filters.find((filter) => {\n                        return filter.criteria.type === query.type && filter.criteria.field === query.field;\n                    });\n\n                    if (localFilter) {\n                        localFilter.active = true;\n                    }\n                });\n            }\n\n            return params;\n        },\n\n        updateRoute() {\n            const params = this.getListingParams();\n\n            if (params.criteria) {\n                params.filters = params.criteria.getQueryString();\n                delete params.criteria;\n            }\n\n            this.$router.push({\n                name: this.routeName,\n                query: params\n            });\n        },\n\n        getListingParams() {\n            const params = {\n                limit: this.limit,\n                page: this.page\n            };\n\n            if (this.term && this.term.length) {\n                params.term = this.term;\n            }\n\n            if (this.sortBy && this.sortBy.length) {\n                params.sortBy = this.sortBy;\n                params.sortDirection = this.sortDirection;\n            }\n\n            const criteria = this.generateCriteriaFromFilters(this.filters);\n\n            if (criteria) {\n                params.criteria = criteria;\n            }\n\n            return params;\n        },\n\n        generateCriteriaFromFilters(filters, operator = 'AND') {\n            const terms = [];\n\n            this.filters.forEach((filter) => {\n                if (!filter.active) {\n                    return;\n                }\n\n                const criteria = filter.criteria;\n                const term = CriteriaFactory[criteria.type](criteria.field, criteria.options);\n\n                terms.push(term);\n            });\n\n            if (!terms.length) {\n                return null;\n            }\n\n            return CriteriaFactory.nested(operator, ...terms);\n        },\n\n        onPageChange(opts) {\n            this.page = opts.page;\n            this.limit = opts.limit;\n\n            this.updateRoute();\n            this.getList();\n        },\n\n        onSearch(value) {\n            this.term = value;\n\n            this.page = 1;\n            this.updateRoute();\n            this.getList();\n        },\n\n        onSwitchFilter(filter, filterIndex) {\n            this.filters[filterIndex].active = !this.filters[filterIndex].active;\n\n            this.page = 1;\n            this.updateRoute();\n            this.getList();\n        },\n\n        onSortColumn(column) {\n            if (this.sortBy === column.dataIndex) {\n                this.sortDirection = (this.sortDirection === 'ASC' ? 'DESC' : 'ASC');\n            } else {\n                this.sortBy = column.dataIndex;\n                this.sortDirection = 'ASC';\n            }\n\n            this.updateRoute();\n            this.getList();\n        },\n\n        onRefresh() {\n            this.getList();\n        },\n\n        getList() {\n            debug.warn(\n                'Listing Mixin',\n                'When using the listing mixin you have to implement your custom \"getList()\" method.'\n            );\n        }\n    }\n});\n","import { Mixin } from 'src/core/shopware';\nimport { debug } from 'src/core/service/util.service';\n\nMixin.register('drag-selector', {\n    data() {\n        return {\n            mouseDown: false,\n            startPoint: null,\n            endPoint: null,\n            dragSelection: []\n        };\n    },\n\n    computed: {\n        dragSelectorClass() {\n            debug.warn('Drag-Selector Mixin',\n                'You have to specify the CSS-Selector class of the selectable Items ' +\n                'by defining the computed property \"dragSelectorClass\".');\n\n            return null;\n        },\n\n        _dragIsActive() {\n            return !this.mouseDown || !this.startPoint || !this.endPoint;\n        },\n\n        _selectionBox() {\n            if (this._dragIsActive) {\n                return null;\n            }\n\n            const rect = this.$el.parentNode.getBoundingClientRect();\n            const left = Math.min(this.startPoint.x, this.endPoint.x) - rect.left;\n            const top = Math.min(this.startPoint.y, this.endPoint.y) - rect.top;\n            const width = Math.abs(this.startPoint.x - this.endPoint.x);\n            const height = Math.abs(this.startPoint.y - this.endPoint.y);\n\n            return {\n                left,\n                top,\n                width,\n                height\n            };\n        },\n\n        _selectionBoxStyling() {\n            if (this._dragIsActive) {\n                return null;\n            }\n\n            return `\n                left: ${this._selectionBox.left}px;\n                top: ${this._selectionBox.top}px;\n                width: ${this._selectionBox.width}px;\n                height: ${this._selectionBox.height}px;\n            `;\n        }\n    },\n\n    methods: {\n        onDragSelection() {\n            debug.warn('Drag-Selector Mixin',\n                'You have to override the \"onDragSelection()\" method.');\n        },\n\n        onDragDeselection() {\n            debug.warn('Drag-Selector Mixin',\n                'You have to override the \"onDragDeselection()\" method.');\n        },\n\n        onMouseDown(originalDomEvent) {\n            this.mouseDown = true;\n            this.startPoint = {\n                x: originalDomEvent.pageX,\n                y: originalDomEvent.pageY\n            };\n            window.addEventListener('mousemove', this._onMouseMove);\n            window.addEventListener('mouseup', this._onMouseUp);\n        },\n\n        _getScroll() {\n            return {\n                x: this.$el.scrollLeft || document.body.scrollLeft || document.documentElement.scrollLeft,\n                y: this.$el.scrollTop || document.body.scrollTop || document.documentElement.scrollTop\n            };\n        },\n\n        _onMouseMove(originalDomEvent) {\n            if (this.mouseDown) {\n                this.endPoint = {\n                    x: originalDomEvent.pageX,\n                    y: originalDomEvent.pageY\n                };\n                this._showSelectBox();\n\n                const children = this.$children.length\n                    ? this.$children\n                    : this.$el.children;\n                if (children) {\n                    this._handleSelection(children, originalDomEvent);\n                }\n            }\n        },\n\n        _showSelectBox() {\n            const selectBox = document.getElementsByClassName('sw-drag-select-box')[0] ||\n                document.createElement('div');\n\n            selectBox.setAttribute('class', 'sw-drag-select-box');\n            selectBox.setAttribute('style', this._selectionBoxStyling);\n\n            this.$el.appendChild(selectBox);\n        },\n\n        _handleSelection(children, originalDomEvent) {\n            const newSelection = children.reduce((filtered, item) => {\n                if (this._isItemInSelectBox(item.$el)) {\n                    this.onDragSelection({\n                        originalDomEvent,\n                        item\n                    });\n                    filtered.push(item);\n                }\n\n                return filtered;\n            }, []);\n\n            this.dragSelection.forEach(item => {\n                if (!newSelection.includes(item)) {\n                    this.onDragDeselection({\n                        originalDomEvent,\n                        item\n                    });\n                }\n            });\n            this.dragSelection = newSelection;\n        },\n\n        _onMouseUp() {\n            window.removeEventListener('mousemove', this._onMouseMove);\n            window.removeEventListener('mouseup', this._onMouseUp);\n\n            const selectBox = document.getElementsByClassName('sw-drag-select-box')[0];\n            if (selectBox) {\n                this.$el.removeChild(selectBox);\n            }\n\n            this.mouseDown = false;\n            this.startPoint = null;\n            this.endPoint = null;\n        },\n\n        _isItemInSelectBox(el) {\n            if (el.classList.contains(this.dragSelectorClass)) {\n                const scroll = this._getScroll();\n                const element = {\n                    top: el.offsetTop - scroll.y,\n                    left: el.offsetLeft - scroll.x,\n                    width: el.clientWidth,\n                    height: el.clientHeight\n                };\n\n                return (\n                    this._selectionBox.left <= element.left + element.width &&\n                    this._selectionBox.left + this._selectionBox.width >= element.left &&\n                    this._selectionBox.top <= element.top + element.height &&\n                    this._selectionBox.top + this._selectionBox.height >= element.top\n                );\n            }\n\n            return false;\n        }\n    }\n});\n","/**\n * @module core/helper/device\n */\nimport utils from 'src/core/service/util.service';\n\n/**\n * The DeviceHelper provides methods to get device and browser information like the current viewport size.\n * The helper methods can be accessed with \"this.$device\" in every Vue component.\n *\n * @constructor\n */\nfunction DeviceHelper() {\n    this.listeners = [];\n\n    window.addEventListener('resize', this.resize.bind(this));\n}\n\nDeviceHelper.prototype = Object.assign(DeviceHelper.prototype, {\n    /**\n     * Resize method which will be fired when the user resizes the browser.\n     *\n     * @returns {void}\n     */\n    resize: utils.debounce(function debouncedResize(event) {\n        this.listeners.forEach((listenerObject) => {\n            listenerObject.listener.call(listenerObject.scope, event);\n        });\n    }, 100),\n\n    /**\n     * Registers an event register for the browser \"resize\" event.\n     *\n     * @param {Function} callback\n     * @param {Any} scope\n     * @param {Object} component\n     * @returns {number}\n     */\n    onResize({ listener, scope, component }) {\n        if (!scope) {\n            scope = window;\n        }\n        this.listeners.push({ listener, scope, component });\n        return this.listeners.length - 1;\n    },\n\n    removeResizeListener(component) {\n        this.listeners = this.listeners.filter((listenerObject) => {\n            return component !== listenerObject.component;\n        });\n\n        return true;\n    },\n\n    /**\n     * Returns the user agent string.\n     *\n     * @returns {string}\n     */\n    getUserAgent() {\n        return window.navigator.userAgent;\n    },\n\n    /**\n     * Returns the current viewport with in pixels.\n     * @returns {number}\n     */\n    getViewportWidth() {\n        return window.innerWidth;\n    },\n\n    /**\n     * Returns the current viewport height in pixels.\n     *\n     * @returns {number}\n     */\n    getViewportHeight() {\n        return window.innerHeight;\n    },\n\n    /**\n     * Returns the pixel ratio of the device as a number.\n     *\n     * @returns {number}\n     */\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    },\n\n    /**\n     * Returns the device screen width in pixels.\n     *\n     * @returns {number}\n     */\n    getScreenWidth() {\n        return window.screen.width;\n    },\n\n    /**\n     * Returns the device screen height in pixels.\n     *\n     * @returns {number}\n     */\n    getScreenHeight() {\n        return window.screen.height;\n    },\n\n    /**\n     * Returns information about the screen orientation.\n     *\n     * @returns {object}\n     */\n    getScreenOrientation() {\n        return window.screen.orientation;\n    },\n\n    /**\n     * Returns the current browser language as a string.\n     *\n     * @returns {string}\n     */\n    getBrowserLanguage() {\n        return window.navigator.language;\n    },\n\n    /**\n     * Returns the current platform (e.g. \"Win32\") as a string.\n     *\n     * @returns {string}\n     */\n    getPlatform() {\n        return window.navigator.platform;\n    }\n});\n\nexport default DeviceHelper;\n","import DeviceHelper from 'src/core/helper/device.helper';\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nlet pluginInstalled = false;\n\nexport default {\n    install(Vue) {\n        if (pluginInstalled) {\n            warn('DeviceHelper', 'This plugin is already installed');\n            return false;\n        }\n\n        const deviceHelper = new DeviceHelper();\n\n        Object.defineProperties(Vue.prototype, {\n            $device: {\n                get() {\n                    return deviceHelper;\n                }\n            }\n        });\n\n        Vue.mixin({\n            destroyed() {\n                this.$device.removeResizeListener(this);\n            }\n        });\n\n        pluginInstalled = true;\n\n        return true;\n    }\n};\n","/**\n * @module app/adapter/view/vue\n */\nimport Vue from 'vue';\nimport VueRouter from 'vue-router';\nimport VueI18n from 'vue-i18n';\nimport DeviceHelper from 'src/core/plugins/device-helper.plugin';\nimport { Component, Mixin } from 'src/core/shopware';\nimport { warn } from 'src/core/service/utils/debug.utils';\n\nimport 'src/app/component/components';\n\n/**\n * Contains the global Vue.js components\n * @type {{}}\n */\nconst vueComponents = {};\n\n/**\n * @method VueAdapter\n * @memberOf module:app/adapter/view/vue\n * @param context\n * @param componentFactory\n * @param stateFactory\n * @param filterFactory\n * @param directiveFactory\n * @param localeFactory\n * @returns {VueAdapter}\n */\nexport default function VueAdapter(context, componentFactory, stateFactory, filterFactory, directiveFactory, localeFactory) {\n    return {\n        createInstance,\n        initComponents,\n        createComponent,\n        getComponent,\n        getComponents,\n        getWrapper,\n        getName\n    };\n\n    /**\n     * Creates the main instance for the view layer.\n     * Is used on startup process of the main application.\n     *\n     * @param renderElement\n     * @param router\n     * @param providers\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Vue}\n     */\n    function createInstance(renderElement, router, providers) {\n        initPlugins();\n        initDirectives();\n        initFilters();\n        initInheritance();\n\n        const i18n = initLocales();\n        const components = getComponents();\n\n        // Enable performance measurements in development mode\n        Vue.config.performance = process.env.NODE_ENV !== 'production';\n\n        return new Vue({\n            el: renderElement,\n            template: '<sw-admin />',\n            router,\n            i18n,\n            components,\n            provide() {\n                return providers;\n            }\n        });\n    }\n\n    /**\n     * Initializes all core components as Vue components.\n     *\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Object}\n     */\n    function initComponents() {\n        const componentRegistry = componentFactory.getComponentRegistry();\n\n        componentRegistry.forEach((component) => {\n            createComponent(component.name);\n        });\n\n        return vueComponents;\n    }\n\n    /**\n     * Returns the component as a Vue component.\n     * Includes the full rendered template with all overrides.\n     *\n     * @param componentName\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Function}\n     */\n    function createComponent(componentName) {\n        const componentConfig = Component.build(componentName);\n\n        if (!componentConfig) {\n            return false;\n        }\n\n        // If the mixin is a string, use our mixin registry\n        if (componentConfig.mixins && componentConfig.mixins.length) {\n            componentConfig.mixins = componentConfig.mixins.map((mixin) => {\n                if (typeof mixin === 'string') {\n                    return Mixin.getByName(mixin);\n                }\n\n                return mixin;\n            });\n        }\n\n        const vueComponent = Vue.component(componentName, componentConfig);\n        vueComponents[componentName] = vueComponent;\n\n        return vueComponent;\n    }\n\n    /**\n     * Returns a final Vue component by its name.\n     *\n     * @param componentName\n     * @memberOf module:app/adapter/view/vue\n     * @returns {null|Component}\n     */\n    function getComponent(componentName) {\n        if (!vueComponents[componentName]) {\n            return null;\n        }\n\n        return vueComponents[componentName];\n    }\n\n    /**\n     * Returns the complete set of available Vue components.\n     *\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Object}\n     */\n    function getComponents() {\n        return vueComponents;\n    }\n\n    /**\n     * Initialises all plugins for VueJS\n     *\n     * @private\n     * @memberOf module:app/adapter/view/vue\n     */\n    function initPlugins() {\n        Vue.use(VueRouter);\n        Vue.use(VueI18n);\n        Vue.use(DeviceHelper);\n    }\n\n    /**\n     * Initializes all custom directives.\n     *\n     * @private\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Boolean}\n     */\n    function initDirectives() {\n        const registry = directiveFactory.getDirectiveRegistry();\n\n        registry.forEach((directive, name) => {\n            Vue.directive(name, directive);\n        });\n\n        return true;\n    }\n\n    /**\n     * Initialises helpful filters for global use\n     *\n     * @private\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Boolean}\n     */\n    function initFilters() {\n        const registry = filterFactory.getRegistry();\n\n        registry.forEach((factoryMethod, name) => {\n            Vue.filter(name, factoryMethod);\n        });\n\n        return true;\n    }\n\n    /**\n     * Initialises the standard locales.\n     *\n     * @private\n     * @memberOf module:app/adapter/view/vue\n     * @return {VueI18n}\n     */\n    function initLocales() {\n        const registry = localeFactory.getLocaleRegistry();\n        const messages = {};\n\n        registry.forEach((localeMessages, key) => {\n            messages[key] = localeMessages;\n        });\n\n        const currentLocale = localeFactory.getLastKnownLocale();\n        localeFactory.setLocale(currentLocale);\n\n        return new VueI18n({\n            locale: currentLocale,\n            fallbackLocale: 'en-GB',\n            messages\n        });\n    }\n\n    /**\n     * Extend Vue prototype to access super class for component inheritance.\n     *\n     * @private\n     * @memberOf module:app/adapter/view/vue\n     */\n    function initInheritance() {\n        Object.defineProperties(Vue.prototype, {\n            $super: {\n                get() {\n                    /**\n                     * Registers a proxy as the $super property on every instance.\n                     * Makes it possible to dynamically access methods of an extended component.\n                     */\n                    return new Proxy(this, {\n                        get(target, key) {\n                            /**\n                             * Fallback method which will be returned\n                             * if the called method does not exist on a super class.\n                             */\n                            function empty() {\n                                warn('View', `The method \"${key}\" is not defined in any super class.`, target);\n                            }\n\n                            /**\n                             * Recursively search for a method in super classes.\n                             * This enables multi level inheritance.\n                             */\n                            function getSuperMethod(comp, methodName) {\n                                if (comp.extends && comp.extends.methods && comp.extends.methods[methodName]) {\n                                    return comp.extends.methods[methodName];\n                                }\n                                if (comp.extends.extends) {\n                                    return getSuperMethod(comp.extends, methodName);\n                                }\n\n                                return empty;\n                            }\n\n                            return getSuperMethod(target.constructor.options, key).bind(target);\n                        }\n                    });\n                }\n            }\n        });\n    }\n\n    /**\n     * Returns the adapter wrapper\n     *\n     * @memberOf module:app/adapter/view/vue\n     * @returns {Vue}\n     */\n    function getWrapper() {\n        return Vue;\n    }\n\n    /**\n     * Returns the name of the adapter\n     *\n     * @memberOf module:app/adapter/view/vue\n     * @returns {string}\n     */\n    function getName() {\n        return 'Vue.js';\n    }\n}\n","/**\n * @module core/factory/router\n */\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * Initializes the router for the application.\n *\n * @constructor\n * @param {VueRouter} Router\n * @param {ViewFactory} View\n * @param {ModuleFactory} moduleFactory\n * @param {LoginService} LoginService\n * @returns {{}}\n */\nexport default function createRouter(Router, View, moduleFactory, LoginService) {\n    let allRoutes = [];\n    let moduleRoutes = [];\n    let instance = null;\n\n    return {\n        addRoutes,\n        addModuleRoutes,\n        createRouterInstance,\n        getViewComponent,\n        getRouterInstance\n    };\n\n    /**\n     * Creates the router instance for the application.\n     *\n     * @memberof module:core/factory/router\n     * @param {Object} [opts={}]\n     * @returns {VueRouter} router\n     */\n    function createRouterInstance(opts = {}) {\n        const mergedRoutes = registerModuleRoutesAsChildren(allRoutes, moduleRoutes);\n\n        const options = Object.assign({}, opts, {\n            routes: mergedRoutes\n        });\n\n        const router = new Router(options);\n\n        beforeRouterInterceptor(router);\n        instance = router;\n\n        return router;\n    }\n\n    /**\n     * Returns the current router instance\n     *\n     * @returns {VueRouter}\n     */\n    function getRouterInstance() {\n        return instance;\n    }\n\n    /**\n     * Installs the navigation guard interceptor which provides every route, if possible, with the module definition.\n     * This is useful to generalize the route managing.\n     *\n     * @memberof module:core/factory/router\n     * @param {VueRouter} router\n     * @returns {VueRouter} router\n     */\n    function beforeRouterInterceptor(router) {\n        router.beforeEach((to, from, next) => {\n            const bearerAuthExpiry = LoginService.getExpiry();\n            const loggedIn = LoginService.validateExpiry(bearerAuthExpiry);\n\n            // The login route will be called and the user is not logged in, let him see the login\n            if ((to.name === 'login' || to.path === '/login') && !loggedIn) {\n                return next();\n            }\n\n            // The login route will be called and the user is  logged in, redirect to the dashboard\n            if ((to.name === 'login' || to.path === '/login') && loggedIn) {\n                return next({ name: 'core' });\n            }\n\n            // User tries to access a protected route, therefore redirect him to the login\n            if (!loggedIn) {\n                // Save the last route in case the user gets logged out in the mean time\n                sessionStorage.setItem('sw-admin-previous-route', JSON.stringify({\n                    fullPath: to.fullPath,\n                    name: to.name\n                }));\n\n                return next({\n                    name: 'sw.login.index'\n                });\n            }\n\n            // Provide information about the module\n            const moduleRegistry = moduleFactory.getModuleRegistry();\n\n            let foundModule = null;\n            moduleRegistry.forEach((module) => {\n                const routes = module.routes;\n\n                if (!foundModule && routes.has(to.name)) {\n                    foundModule = module;\n                }\n            });\n\n            if (!foundModule) {\n                return next();\n            }\n\n            // Add the current navigation definition to the meta data\n            const navigation = foundModule.navigation;\n            if (navigation) {\n                let currentNavigationEntry = {};\n                navigation.forEach((item) => {\n                    if (item.path === to.name) {\n                        currentNavigationEntry = item;\n                    }\n                });\n\n                to.meta.$current = currentNavigationEntry;\n            }\n\n            to.meta.$module = foundModule.manifest;\n            return next();\n        });\n\n        return router;\n    }\n\n    /**\n     * Registers the module routes as child routes of the root core route to automatically\n     * providing the administration base structure to every module.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} core - Core routes\n     * @param {Array} module - Module routes\n     * @returns {Array} core - new core routes definition\n     */\n    function registerModuleRoutesAsChildren(core, module) {\n        const moduleRootRoutes = [];\n        const moduleNormalRoutes = [];\n\n        // Separate core routes from the normal routes\n        module.forEach((moduleRoute) => {\n            if (moduleRoute.coreRoute === true) {\n                moduleRootRoutes.push(moduleRoute);\n                return;\n            }\n\n            moduleNormalRoutes.push(moduleRoute);\n        });\n\n        core.map((route) => {\n            if (route.root === true) {\n                route.children = moduleNormalRoutes;\n            }\n\n            return route;\n        });\n\n        // Merge the module core routes with the routes from the routes file\n        core = [...core, ...moduleRootRoutes];\n        return core;\n    }\n\n    /**\n     * Registers the core module routes. The provided component name will be remapped to the corresponding\n     * view component.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} routes\n     * @returns {Array} moduleRoutes - converted routes array\n     */\n    function addModuleRoutes(routes) {\n        routes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        moduleRoutes = [...moduleRoutes, ...routes];\n\n        return moduleRoutes;\n    }\n\n    /**\n     * Registers module routes to the router. The method will loop through the provided routes\n     * and remaps the component names (e.g. either `route.component` or `route.components`) to\n     * the corresponding view component which should be registered under the same name.\n     *\n     * @memberof module:core/factory/router\n     * @param {Array} routes\n     * @returns {Array} allRoutes - converted routes array\n     */\n    function addRoutes(routes) {\n        routes.map((route) => {\n            return convertRouteComponentToViewComponent(route);\n        });\n\n        allRoutes = [...allRoutes, ...routes];\n\n        return allRoutes;\n    }\n\n    /**\n     * Converts the `route.component` / `route.components` property which is usually a component name\n     * to a view component, so the router works with component instead of looking up component names\n     * in the internal registry of the view framework.\n     *\n     * @memberof module:core/factory/router\n     * @param {Object} route - Route definition\n     * @returns {Object} route - Converted route definition\n     */\n    function convertRouteComponentToViewComponent(route) {\n        if (hasOwnProperty(route, 'components') && Object.keys(route.components).length) {\n            const componentList = {};\n\n            Object.keys(route.components).forEach((componentKey) => {\n                let component = route.components[componentKey];\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                componentList[componentKey] = component;\n            });\n\n            route = iterateChildRoutes(route);\n\n            route.components = componentList;\n        }\n\n        if (typeof route.component === 'string') {\n            route.component = getViewComponent(route.component);\n        }\n\n        return route;\n    }\n\n    /**\n     * Transforms the child routes component list into View components to work with the application.\n     *\n     * @param {Object} route\n     * @returns {Object}\n     */\n    function iterateChildRoutes(route) {\n        if (route.children && route.children.length) {\n            route.children = route.children.map((child) => {\n                let component = child.component;\n\n                // Just convert component names\n                if (typeof component === 'string') {\n                    component = getViewComponent(component);\n                }\n                child.component = component;\n\n                if (child.children) {\n                    child = iterateChildRoutes(child);\n                }\n\n                return child;\n            });\n        }\n\n        return route;\n    }\n\n    /**\n     * Get a component using the argument `componentName` from the view layer.\n     *\n     * @memberof module:core/factory/router\n     * @param {String} componentName\n     * @returns {Vue|null} - View component or null\n     */\n    function getViewComponent(componentName) {\n        return View.getComponent(componentName);\n    }\n}\n","export default [\n    {\n        path: '/core',\n        alias: '/',\n        name: 'core',\n        coreRoute: true,\n        root: true,\n        component: 'sw-desktop',\n        redirect: '/sw/dashboard/index'\n    }\n];\n","import { Application, Filter } from 'src/core/shopware';\n\nFilter.register('asset', (value) => {\n    if (!value) {\n        return '';\n    }\n\n    const initContainer = Application.getContainer('init');\n    const context = initContainer.contextService;\n\n    return `${context.assetsPath}${value}`;\n});\n","import { currency } from 'src/core/service/utils/format.utils';\nimport { Filter } from 'src/core/shopware';\n\nFilter.register('currency', (value, format = 'EUR') => {\n    if (value === null) {\n        return '-';\n    }\n    return currency(value, format);\n});\n","import { date } from 'src/core/service/utils/format.utils';\nimport { Filter } from 'src/core/shopware';\n\nFilter.register('date', (value) => {\n    return date(value);\n});\n","import { Filter } from 'src/core/shopware';\n\n/**\n * Filter which allows you to truncate a string.\n *\n * @param {String} [value='']\n * @param {Number} [length=75]\n * @param {Boolean} [stripHtml=true]\n * @param {String} [ellipsis='...']\n */\nFilter.register('truncate', (value = '', length = 75, stripHtml = true, ellipsis = '...') => {\n    if (!value || !value.length) {\n        return '';\n    }\n\n    // Strip HTML\n    const strippedValue = (stripHtml ? value : value.replace(/(<([^>]+)>)/ig, ''));\n\n    // The string is smaller than the max length, we don't have to do anything\n    if (strippedValue.length <= length) {\n        return strippedValue;\n    }\n\n    // Truncate the string\n    const truncatedString = strippedValue.slice(0, (length - ellipsis.length));\n    return `${truncatedString}${ellipsis}`;\n});\n","import { Filter } from 'src/core/shopware';\n\nFilter.register('striphtml', (value) => {\n    if (!value) {\n        return '';\n    }\n\n    return value.replace(/<\\/?(\"[^\"]*\"|'[^']*'|[^>])*(>|$)/g, '');\n});\n","import initContext from 'src/app/init/context.init';\nimport initHttpClient from 'src/app/init/http.init';\nimport initEntity from 'src/app/init/entity.init';\nimport initState from 'src/app/init/state.init';\nimport initMixin from 'src/app/init/mixin.init';\nimport initCoreModules from 'src/app/init/modules.init';\nimport initView from 'src/app/init/view.init';\nimport initRouter from 'src/app/init/router.init';\nimport initFilter from 'src/app/init/filter.init';\nimport initDirectives from 'src/app/init/directive.init';\nimport initLocale from 'src/app/init/locale.init';\n\nexport default {\n    contextService: initContext,\n    httpClient: initHttpClient,\n    coreState: initState,\n    coreMixin: initMixin,\n    coreDirectives: initDirectives,\n    coreFilter: initFilter,\n    coreModuleRoutes: initCoreModules,\n    view: initView,\n    router: initRouter,\n    entity: initEntity,\n    locale: initLocale\n};\n","import ContextFactory from 'src/core/factory/context.factory';\n\n/**\n * Initializes the context of application. The context contains information about the installation path,\n * assets path and api path.\n */\nexport default function initializeContext(container) {\n    return ContextFactory(container.context);\n}\n","import HttpClient from 'src/core/factory/http.factory';\n\nexport default function initializeHttpClient(container) {\n    return HttpClient(container.contextService);\n}\n","import AuthStore from 'src/core/data/AuthStore';\nimport NotificationStore from 'src/core/data/NotificationStore';\nimport ErrorStore from 'src/core/data/ErrorStore';\nimport LocaleStore from 'src/core/data/LocaleStore';\nimport UploadStore from 'src/core/data/UploadStore';\n\nexport default function createCoreStates() {\n    const factoryContainer = this.getContainer('factory');\n    const stateFactory = factoryContainer.state;\n\n    stateFactory.registerStore('auth', new AuthStore());\n    stateFactory.registerStore('notification', new NotificationStore());\n    stateFactory.registerStore('error', new ErrorStore());\n    stateFactory.registerStore('adminLocale', new LocaleStore());\n    stateFactory.registerStore('upload', new UploadStore());\n\n    return true;\n}\n","import 'src/app/mixin';\n\nexport default function createCoreMixins() {\n    return true;\n}\n","import 'src/app/directives';\n\nexport default function createCoreDirectives() {\n    return true;\n}\n","import 'src/app/filter';\n\nexport default function createCoreFilter() {\n    return true;\n}\n","import 'module';\n\nexport default function initializeCoreModules() {\n    const factoryContainer = this.getContainer('factory');\n    const moduleFactory = factoryContainer.module;\n\n    // Return the module routes for the router\n    return moduleFactory.getModuleRoutes();\n}\n","import VueAdapter from 'src/app/adapter/view/vue.adapter';\nimport ViewFactory from 'src/core/factory/view.factory';\n\n/**\n * Initializes the view of the application\n *\n * @param container\n * @returns {ViewFactory}\n */\nexport default function initializeView(container) {\n    const factoryContainer = this.getContainer('factory');\n\n    const adapter = VueAdapter(\n        container.contextService,\n        factoryContainer.component,\n        factoryContainer.state,\n        factoryContainer.filter,\n        factoryContainer.directive,\n        factoryContainer.locale\n    );\n    const viewFactory = ViewFactory(adapter);\n\n    viewFactory.initComponents();\n    return viewFactory;\n}\n","/**\n * @module core/factory/view\n */\n\n/**\n * Creates the view factory based on the provided ViewAdapter\n * @method createViewFactory\n * @param {VueAdapter} viewAdapter\n * @memberOf module:core/factory/view\n * @returns {{}}\n */\nexport default function createViewFactory(viewAdapter) {\n    return {\n        name: viewAdapter.getName(),\n        wrapper: viewAdapter.getWrapper(),\n        createInstance: viewAdapter.createInstance,\n        createComponent: viewAdapter.createComponent,\n        initComponents: viewAdapter.initComponents,\n        getComponent: viewAdapter.getComponent,\n        getComponents: viewAdapter.getComponents\n    };\n}\n","import VueRouter from 'vue-router';\nimport RouterFactory from 'src/core/factory/router.factory';\nimport coreRoutes from 'src/app/routes';\n\nexport default function initializeRouter(container) {\n    const factoryContainer = this.getContainer('factory');\n    const loginService = this.getContainer('service').loginService;\n    const factory = RouterFactory(VueRouter, container.view, factoryContainer.module, loginService);\n\n    factory.addRoutes(coreRoutes);\n    factory.addModuleRoutes(container.coreModuleRoutes);\n    factory.createRouterInstance();\n\n    return factory;\n}\n","import EntityStore from 'src/core/data/EntityStore';\nimport EntityProxy from 'src/core/data/EntityProxy';\nimport stringUtil from 'src/core/service/utils/string.utils';\n\nexport default function initializeEntities(container) {\n    const httpClient = container.httpClient;\n    const factoryContainer = this.getContainer('factory');\n    const entityFactory = factoryContainer.entity;\n    const stateFactory = factoryContainer.state;\n\n    return httpClient.get('entity-schema.json').then((response) => {\n        Object.keys(response.data).forEach((entityName) => {\n            entityFactory.addEntityDefinition(entityName, response.data[entityName]);\n\n            const store = new EntityStore(entityName, `${stringUtil.camelCase(entityName)}Service`, EntityProxy);\n            stateFactory.registerStore(entityName, store);\n        });\n\n        return entityFactory;\n    });\n}\n","import deDEMessages from 'src/app/snippets/de-DE.json';\nimport enGBMessages from 'src/app/snippets/en-GB.json';\n\nexport default function initializeLocaleService() {\n    const factoryContainer = this.getContainer('factory');\n    const localeFactory = factoryContainer.locale;\n\n    localeFactory.register('de-DE', deDEMessages);\n    localeFactory.register('en-GB', enGBMessages);\n\n    return localeFactory;\n}\n","import ShopApiService from 'src/core/service/api/shop.api.service';\nimport CatalogApiService from 'src/core/service/api/catalog.api.service';\nimport IntegrationApiService from 'src/core/service/api/integration.api.service';\nimport CategoryApiService from 'src/core/service/api/category.api.service';\nimport ProductApiService from 'src/core/service/api/product.api.service';\nimport ProductManufacturerApiService from 'src/core/service/api/product-manufacturer.api.service';\nimport OrderApiService from 'src/core/service/api/order.api.service';\nimport OrderLineItemApiService from 'src/core/service/api/order-line-item.api.service';\nimport OrderDeliveryApiService from 'src/core/service/api/order-delivery.api.service';\nimport OrderStateApiService from 'src/core/service/api/order-state.api.service';\nimport CustomerApiService from 'src/core/service/api/customer.api.service';\nimport CustomerAddressApiService from 'src/core/service/api/customer-address.api.service';\nimport CustomerGroupApiService from 'src/core/service/api/customer-group.api.service';\nimport PaymentMethodApiService from 'src/core/service/api/payment-method.api.service';\nimport ShippingMethodApiService from 'src/core/service/api/shipping-method.api.service';\nimport CountryApiService from 'src/core/service/api/country.api.service';\nimport CurrencyApiService from 'src/core/service/api/currency.api.service';\nimport TaxApiService from 'src/core/service/api/tax.api.service';\nimport RuleApiService from 'src/core/service/api/rule.api.service';\nimport MediaApiService from 'src/core/service/api/media.api.service';\nimport SalesChannelApiService from 'src/core/service/api/sales-channel.api.service';\nimport SalesChannelTypeApiService from 'src/core/service/api/sales-channel-type.api.service';\nimport SearchApiService from 'src/core/service/api/search.api.service';\nimport LanguageApiService from 'src/core/service/api/language.api.service';\nimport LocaleApiService from 'src/core/service/api/locale.api.service';\nimport UserApiService from 'src/core/service/api/user.api.service';\n\nexport default {\n    shopService: ShopApiService,\n    catalogService: CatalogApiService,\n    integrationService: IntegrationApiService,\n    categoryService: CategoryApiService,\n    productService: ProductApiService,\n    productManufacturerService: ProductManufacturerApiService,\n    orderService: OrderApiService,\n    orderLineItemService: OrderLineItemApiService,\n    orderDeliveryService: OrderDeliveryApiService,\n    orderStateService: OrderStateApiService,\n    customerService: CustomerApiService,\n    customerAddressService: CustomerAddressApiService,\n    customerGroupService: CustomerGroupApiService,\n    paymentMethodService: PaymentMethodApiService,\n    shippingMethodService: ShippingMethodApiService,\n    countryService: CountryApiService,\n    currencyService: CurrencyApiService,\n    taxService: TaxApiService,\n    ruleService: RuleApiService,\n    mediaService: MediaApiService,\n    salesChannelService: SalesChannelApiService,\n    salesChannelTypeService: SalesChannelTypeApiService,\n    searchService: SearchApiService,\n    languageService: LanguageApiService,\n    localeService: LocaleApiService,\n    userService: UserApiService\n};\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"shop\"\n * @class\n * @extends ApiService\n */\nclass ShopApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'shop') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default ShopApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"catalog\"\n * @class\n * @extends ApiService\n */\nclass CatalogApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'catalog') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default CatalogApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"integration\"\n * @class\n * @extends ApiService\n */\nclass IntegrationApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'integration') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`${this.getApiBasePath()}/actions/generate-key`, {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default IntegrationApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"category\"\n * @class\n * @extends ApiService\n */\nclass CategoryApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'category') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default CategoryApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"product\"\n * @class\n * @extends ApiService\n */\nclass ProductApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'product') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default ProductApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"product-manufacturer\"\n * @class\n * @extends ApiService\n */\nclass ProductManufacturerApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'product-manufacturer') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default ProductManufacturerApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"order\"\n * @class\n * @extends ApiService\n */\nclass OrderApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default OrderApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"order-line-item\"\n * @class\n * @extends ApiService\n */\nclass OrderLineItemApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order-line-item') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default OrderLineItemApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"order-delivery\"\n * @class\n * @extends ApiService\n */\nclass OrderDeliveryApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order-delivery') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default OrderDeliveryApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"order-state\"\n * @class\n * @extends ApiService\n */\nclass OrderStateApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'order-state') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default OrderStateApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"customer\"\n * @class\n * @extends ApiService\n */\nclass CustomerApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'customer') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default CustomerApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"customer_address\"\n * @class\n * @extends ApiService\n */\nclass CustomerAddressApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'customer_address') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    getListByCustomerId(customerId, page, limit, additionalParams = {}, additionalHeaders = {}) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        let params = {};\n\n        if (page >= 1) {\n            params.page = page;\n        }\n\n        if (limit > 0) {\n            params.limit = limit;\n        }\n\n        params = Object.assign(params, additionalParams);\n\n        // Switch to the general search end point when we're having a search term\n        if ((params.term && params.term.length) || (params.filter && params.filter.length)) {\n            return this.httpClient\n                .post(`${this.getApiBasePath(null, 'search')}`, params, { headers })\n                .then((response) => {\n                    return ApiService.handleResponse(response);\n                });\n        }\n\n        return this.httpClient\n            .get(this.getApiBasePath(), {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\nexport default CustomerAddressApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"customer-group\"\n * @class\n * @extends ApiService\n */\nclass CustomerGroupApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'customer-group') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default CustomerGroupApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"payment-method\"\n * @class\n * @extends ApiService\n */\nclass PaymentMethodApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'payment-method') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default PaymentMethodApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"shipping-method\"\n * @class\n * @extends ApiService\n */\nclass ShippingMethodApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'shipping-method') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default ShippingMethodApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"country\"\n * @class\n * @extends ApiService\n */\nclass CountryApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'country') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default CountryApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"currency\"\n * @class\n * @extends ApiService\n */\nclass CurrencyApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'currency') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default CurrencyApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"tax\"\n * @class\n * @extends ApiService\n */\nclass TaxApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'tax') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default TaxApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"rule\"\n * @class\n * @extends ApiService\n */\nclass RuleApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'rule') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default RuleApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"media\"\n * @class\n * @extends ApiService\n */\nclass MediaApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'media') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    uploadMediaById(id, mimeType, data, fileExtension) {\n        const apiRoute = `${this.getApiBasePath(id)}/actions/upload?extension=${fileExtension}`;\n        const headers = this.getBasicHeaders({ 'Content-Type': mimeType });\n        const params = {};\n\n        return this.httpClient.post(\n            apiRoute,\n            data,\n            { params, headers }\n        ).then((response) => {\n            return ApiService.handleResponse(response);\n        });\n    }\n}\n\nexport default MediaApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"application\"\n * @class\n * @extends ApiService\n */\nclass SalesChannelApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sales-channel') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * Get the generated access key and secret access key from the API\n     *\n     * @param {Object} additionalParams\n     * @param {Object} additionalHeaders\n     * @returns {Promise<T>}\n     */\n    generateKey(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`${this.getApiBasePath()}/actions/generate-key`, {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SalesChannelApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"sales-channel\"\n * @class\n * @extends ApiService\n */\nclass SalesChannelTypeApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'sales-channel-type') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default SalesChannelTypeApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"product\"\n * @class\n * @extends ApiService\n */\nclass SearchApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'admin/search') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    search({ term, page = 1, limit = 25, additionalParams = {}, additionalHeaders = {} }) {\n        const headers = this.getBasicHeaders(additionalHeaders);\n        const params = Object.assign({ page, limit, term }, additionalParams);\n\n        return this.httpClient\n            .get(this.getApiBasePath(), {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default SearchApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"language\"\n * @class\n * @extends ApiService\n */\nclass LanguageApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'language') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default LanguageApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"locale\"\n * @class\n * @extends ApiService\n */\nclass LocaleApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'locale') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n}\n\nexport default LocaleApiService;\n","import ApiService from './api.service';\n\n/**\n * Gateway for the API end point \"user\"\n * @class\n * @extends ApiService\n */\nclass UserApiService extends ApiService {\n    constructor(httpClient, loginService, apiEndpoint = 'user') {\n        super(httpClient, loginService, apiEndpoint);\n    }\n\n    /**\n     * Get information of the logged in user\n     *\n     * @param {Object} [additionalParams = {}]\n     * @param {Object} [additionalHeaders = {}]\n     * @returns {Promise<T>}\n     */\n    getUser(additionalParams = {}, additionalHeaders = {}) {\n        const params = additionalParams;\n        const headers = this.getBasicHeaders(additionalHeaders);\n\n        return this.httpClient\n            .get(`${this.getApiBasePath()}/me`, {\n                params,\n                headers\n            })\n            .then((response) => {\n                return ApiService.handleResponse(response);\n            });\n    }\n}\n\nexport default UserApiService;\n","/** Application Bootstrapper */\nimport { Application } from 'src/core/shopware';\n\n/** Initializer */\nimport initializers from 'src/app/init';\n\n/** Services */\nimport MenuService from 'src/app/service/menu.service';\nimport LoginService from 'src/core/service/login.service';\nimport apiServices from 'src/core/service/api';\nimport JsonApiParser from 'src/core/service/jsonapi-parser.service';\nimport ValidationService from 'src/core/service/validation.service';\n\n/** Import global styles */\nimport 'src/app/assets/less/all.less';\n\n// Add initializers\nObject.keys(initializers).forEach((key) => {\n    const initializer = initializers[key];\n    Application.addInitializer(key, initializer);\n});\n\n// Add service providers\nApplication\n    .addServiceProvider('menuService', () => {\n        const factoryContainer = Application.getContainer('factory');\n        return MenuService(factoryContainer.module);\n    })\n    .addServiceProvider('loginService', () => {\n        const initContainer = Application.getContainer('init');\n        return LoginService(initContainer.httpClient);\n    })\n    .addServiceProvider('jsonApiParserService', () => {\n        return JsonApiParser;\n    })\n    .addServiceProvider('validationService', () => {\n        return ValidationService;\n    });\n\n// Add api service providers\nObject.keys(apiServices).forEach((key) => {\n    const ServiceFactoryClass = apiServices[key];\n\n    Application.addServiceProvider(key, (container) => {\n        const initContainer = Application.getContainer('init');\n        return new ServiceFactoryClass(initContainer.httpClient, container.loginService);\n    });\n});\n","/**\n * @module app/service/menu\n */\nimport FlatTree from 'src/core/helper/flattree.helper';\nimport { hasOwnProperty } from 'src/core/service/utils/object.utils';\n\n/**\n * @method createMenuService\n * @memberOf module:app/service/menu\n * @param moduleFactory\n * @returns {{getMainMenu: getMainMenu, addItem: FlatTree.add, removeItem: FlatTree.remove}}\n * @constructor\n */\nexport default function createMenuService(moduleFactory) {\n    const flatTree = new FlatTree();\n\n    return {\n        getMainMenu,\n        addItem: flatTree.add,\n        removeItem: flatTree.remove\n    };\n\n    /**\n     * Iterates the module registry from the {@link ModuleFactory} and adds the menu items to\n     * the flat tree instance.\n     *\n     * @memberOf module:app/service/menu\n     * @returns {Object} main menu as a data tree hierarchy\n     */\n    function getMainMenu() {\n        const modules = moduleFactory.getModuleRegistry();\n\n        modules.forEach((module) => {\n            if (!hasOwnProperty(module, 'navigation') || !module.navigation) {\n                return;\n            }\n\n            module.navigation.forEach((navigationElement) => {\n                flatTree.add(navigationElement);\n            });\n        });\n\n        return flatTree.convertToTree().sort(sortTree);\n    }\n\n    /**\n     * Sorts the main menu entry tree using the \"position\" property of the entry.\n     *\n     * @memberOf module:app/service/menu\n     * @param {Object} prevItem\n     * @param {Object} nextItem\n     * @return {Number}\n     */\n    function sortTree(prevItem, nextItem) {\n        if (prevItem.position < nextItem.position) {\n            return -1;\n        }\n        if (prevItem.position > nextItem.position) {\n            return 1;\n        }\n\n        return 0;\n    }\n}\n","/**\n * @module core/service/login\n */\nimport { Application } from 'src/core/shopware';\n\n/**\n *\n * @memberOf module:core/service/login\n * @constructor\n * @method createLoginService\n * @param httpClient\n * @returns {Object}\n */\nexport default function createLoginService(httpClient) {\n    /** @var {String} localStorage token */\n    let localStorageKey = 'bearerAuth';\n\n    return {\n        loginByUsername,\n        refreshTokenUsingRefreshToken,\n        getToken,\n        getRefreshToken,\n        setBearerAuthentication,\n        getExpiry,\n        validateExpiry,\n        getBearerAuthentication,\n        clearBearerAuthentication,\n        getLocalStorageKey,\n        setLocalStorageKey\n    };\n\n    /**\n     * Sends an AJAX request to the authentication end point and tries to log in the user with the provided\n     * password.\n     *\n     * @memberOf module:core/service/login\n     * @param {String} user Username\n     * @param {String} pass Password\n     * @returns {Observable<AjaxResponse>|AxiosPromise}\n     */\n    function loginByUsername(user, pass) {\n        const contextService = Application.getContainer('init').contextService;\n\n        return httpClient.post('/oauth/token', {\n            grant_type: 'password',\n            client_id: 'administration',\n            scopes: 'write',\n            username: user,\n            password: pass\n        }, {\n            baseURL: contextService.apiPath\n        });\n    }\n\n    /**\n     * Sends an AJAX request to the authentication end point and retries to refresh the token.\n     *\n     * @memberOf module:core/service/login\n     * @param {String} token\n     * @returns {Observable<AjaxResponse>|AxiosPromise}\n     */\n    function refreshTokenUsingRefreshToken(token) {\n        const contextService = Application.getContainer('init').contextService;\n\n        return httpClient.post('/oauth/token', {\n            grant_type: 'refresh_token',\n            client_id: 'administration',\n            scopes: 'write',\n            refresh_token: token\n        }, {\n            baseURL: contextService.apiPath\n        });\n    }\n\n    /**\n     * Saves the bearer authentication object in the localStorage using the {@link localStorageKey} as the\n     * object identifier.\n     *\n     * @memberOf module:core/service/login\n     * @param {String} token - Bearer token from the API\n     * @param {Number} expiry - Expiry date as an unix timestamp\n     * @returns {Object} saved authentication object\n     */\n    function setBearerAuthentication({ access, refresh, expiry }) {\n        expiry = Math.round(+new Date() / 1000) + expiry;\n        const authObject = { access, refresh, expiry };\n        localStorage.setItem(localStorageKey, JSON.stringify(authObject));\n\n        return authObject;\n    }\n\n    /**\n     * Returns saved bearer authentication object. Either you're getting the full object or when you're specifying\n     * the `section` argument and getting either the token or the expiry date.\n     *\n     * @memberOf module:core/service/login\n     * @param {null|String} [section=null]\n     * @returns {Boolean|String|Number}\n     */\n    function getBearerAuthentication(section = null) {\n        const bearerAuth = JSON.parse(localStorage.getItem(localStorageKey));\n\n        if (!bearerAuth) {\n            return false;\n        }\n\n        if (!section) {\n            return bearerAuth;\n        }\n\n        return (bearerAuth[section] ? bearerAuth[section] : false);\n    }\n\n    /**\n     * Clears the local stored bearer authentication object.\n     *\n     * @memberOf module:core/service/login\n     * @returns {Boolean}\n     */\n    function clearBearerAuthentication() {\n        localStorage.removeItem(localStorageKey);\n        return true;\n    }\n\n    /**\n     * Returns the bearer token\n     *\n     * @memberOf module:core/service/login\n     * @returns {Boolean|String}\n     */\n    function getToken() {\n        return getBearerAuthentication('access');\n    }\n\n    /**\n     * Returns the refresh token\n     *\n     * @memberOf module:core/service/login\n     * @returns {Boolean|String}\n     */\n    function getRefreshToken() {\n        return getBearerAuthentication('refresh');\n    }\n\n    /**\n     * Returns the expiry date of the token as an unix timestamp.\n     *\n     * @memberOf module:core/service/login\n     * @returns {Boolean|String|Number}\n     */\n    function getExpiry() {\n        return getBearerAuthentication('expiry');\n    }\n\n    /**\n     * Validates the token using the current time (based on the OS system clock of the user) and the server time.\n     *\n     * @memberOf module:core/service/login\n     * @param {Number} expiry - Expiry date as an unix timestamp\n     * @returns {Boolean}\n     */\n    function validateExpiry(expiry) {\n        const timestamp = Math.round(+new Date() / 1000);\n        return (expiry - timestamp) > 0;\n    }\n\n    /**\n     * Returns the localStorage key\n     *\n     * @memberOf module:core/service/login\n     * @returns {String}\n     */\n    function getLocalStorageKey() {\n        return localStorageKey;\n    }\n\n    /**\n     * Sets the localStorage key\n     *\n     * @memberOf module:core/service/login\n     * @param {String} storageKey\n     * @param {Boolean} [clearKey=true] Should the localStorage be cleared before setting a new auth object\n     * @returns {String}\n     */\n    function setLocalStorageKey(storageKey, clearKey = true) {\n        if (clearKey) {\n            clearBearerAuthentication();\n        }\n        localStorageKey = storageKey;\n\n        return localStorageKey;\n    }\n}\n","module.exports = \"{% block sw_dashboard_index %}\\n    <sw-page class=\\\"sw-dashboard-index\\\" :showSmartBar=\\\"false\\\">\\n        {% block sw_dashboard_index_content %}\\n            <sw-card-view slot=\\\"content\\\" class=\\\"sw-dashboard-index__content\\\">\\n                {% block sw_dashboard_index_content_view %}{% endblock %}\\n            </sw-card-view>\\n        {% endblock %}\\n    </sw-page>\\n{% endblock %}\";"],"sourceRoot":""}