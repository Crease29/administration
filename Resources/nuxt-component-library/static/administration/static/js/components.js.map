{"version":3,"sources":["webpack:///./src/app/component/base/sw-collapse/index.js","webpack:///./src/app/component/media/sw-media-grid-item/index.js","webpack:///./src/app/component/base/sw-collapse/sw-collapse.html.twig","webpack:///./src/app/component/media/sw-media-grid-item/sw-media-grid-item.html.twig","webpack:///./src/app/component/base/sw-card/sw-card.html.twig","webpack:///./src/app/component/base/sw-user-card/sw-user-card.html.twig","webpack:///./src/app/component/base/sw-card-section/sw-card-section.html.twig","webpack:///./src/app/component/base/sw-button/sw-button.html.twig","webpack:///./src/app/component/base/sw-icon/sw-icon.html.twig","webpack:///./src/app/component/base/sw-image/sw-image.html.twig","webpack:///./src/app/component/base/sw-alert/sw-alert.html.twig","webpack:///./src/app/component/base/sw-avatar/sw-avatar.html.twig","webpack:///./src/app/component/base/sw-container/sw-container.html.twig","webpack:///./src/app/component/base/sw-sidebar/sw-sidebar.html.twig","webpack:///./src/app/component/base/sw-sidebar-item/sw-sidebar-item.html.twig","webpack:///./src/app/component/base/sw-tabs/sw-tabs.html.twig","webpack:///./src/app/component/base/sw-tabs-item/sw-tabs-item.html.twig","webpack:///./src/app/component/base/sw-table/sw-table.html.twig","webpack:///./src/app/component/base/sw-modal/sw-modal.html.twig","webpack:///./src/app/component/base/sw-address/sw-address.html.twig","webpack:///./src/app/component/base/sw-empty-state/sw-empty-state.html.twig","webpack:///./src/app/component/base/sw-description-list/sw-description-list.html.twig","webpack:///./src/app/component/base/sw-version/sw-version.html.twig","webpack:///./src/app/component/utils/sw-loader/sw-loader.html.twig","webpack:///./src/app/component/utils/sw-notifications/sw-notifications.html.twig","webpack:///./src/app/component/utils/sw-color-badge/sw-color-badge.html.twig","webpack:///./src/app/component/grid/sw-grid/sw-grid.html.twig","webpack:///./src/app/component/grid/sw-grid-column/sw-grid-column.html.twig","webpack:///./src/app/component/grid/sw-grid-row/sw-grid-row.html.twig","webpack:///./src/app/component/grid/sw-pagination/sw-pagination.html.twig","webpack:///./src/app/component/form/sw-field/sw-field.html.twig","webpack:///./src/app/component/form/sw-price-field/sw-price-field.html.twig","webpack:///./src/app/component/form/sw-multi-select/sw-multi-select.html.twig","webpack:///./src/app/component/form/sw-text-editor/sw-text-editor.html.twig","webpack:///./src/app/component/tree/sw-tree/sw-tree.html.twig","webpack:///./src/app/component/tree/sw-tree-item/sw-tree-item.html.twig","webpack:///./src/app/component/context-menu/sw-context-button/sw-context-button.html.twig","webpack:///./src/app/component/context-menu/sw-context-menu/sw-context-menu.html.twig","webpack:///./src/app/component/context-menu/sw-context-menu-item/sw-context-menu-item.html.twig","webpack:///./src/app/component/structure/sw-admin/sw-admin.html.twig","webpack:///./src/app/component/structure/sw-desktop/sw-desktop.html.twig","webpack:///./src/app/component/structure/sw-page/sw-page.html.twig","webpack:///./src/app/component/structure/sw-card-view/sw-card-view.html.twig","webpack:///./src/app/component/structure/sw-admin-menu-item/sw-admin-menu-item.html.twig","webpack:///./src/app/component/structure/sw-admin-menu/sw-admin-menu.html.twig","webpack:///./src/app/component/structure/sw-search-bar/sw-search-bar.html.twig","webpack:///./src/app/component/structure/sw-search-bar-item/sw-search-bar-item.html.twig","webpack:///./src/app/component/media/sw-media-grid/sw-media-grid.html.twig","webpack:///./src/app/component/media/sw-media-grid-media-item/sw-media-grid-media-item.html.twig","webpack:///./src/app/component/media/sw-media-preview/sw-media-preview.html.twig","webpack:///./src/app/component/media/sw-media-upload-container/sw-media-upload-container.html.twig","webpack:///./src/app/component/media/sw-media-upload-url-modal/sw-media-upload-url-modal.tml.twig","webpack:///./src/app/component/media/sw-media-grid-item/sw-media-grid-item.less","webpack:///./src/app/component/base/sw-card/sw-card.less","webpack:///./src/app/component/base/sw-user-card/sw-user-card.less","webpack:///./src/app/component/base/sw-card-section/sw-card-section.less","webpack:///./src/app/component/base/sw-button/sw-button.less","webpack:///./src/app/component/base/sw-icon/sw-icon.less","webpack:///./src/app/component/base/sw-image/sw-image.less","webpack:///./src/app/component/base/sw-alert/sw-alert.less","webpack:///./src/app/component/base/sw-avatar/sw-avatar.less","webpack:///./src/app/component/base/sw-container/sw-container.less","webpack:///./src/app/component/base/sw-sidebar/sw-sidebar.less","webpack:///./src/app/component/base/sw-sidebar-item/sw-sidebar-item.less","webpack:///./src/app/component/base/sw-tabs/sw-tabs.less","webpack:///./src/app/component/base/sw-tabs-item/sw-tabs-item.less","webpack:///./src/app/component/base/sw-table/sw-table.less","webpack:///./src/app/component/base/sw-modal/sw-modal.less","webpack:///./src/app/component/base/sw-address/sw-address.less","webpack:///./src/app/component/base/sw-empty-state/sw-empty-state.less","webpack:///./src/app/component/base/sw-description-list/sw-description-list.less","webpack:///./src/app/component/base/sw-version/sw-version.less","webpack:///./src/app/component/utils/sw-loader/sw-loader.less","webpack:///./src/app/component/utils/sw-notifications/sw-notifications.less","webpack:///./src/app/component/utils/sw-color-badge/sw-color-badge.less","webpack:///./src/app/component/grid/sw-grid/sw-grid.less","webpack:///./src/app/component/grid/sw-grid-column/sw-grid-column.less","webpack:///./src/app/component/grid/sw-grid-row/sw-grid-row.less","webpack:///./src/app/component/grid/sw-pagination/sw-pagination.less","webpack:///./src/app/component/form/sw-field/sw-field.less","webpack:///./src/app/component/form/sw-price-field/sw-price-field.less","webpack:///./src/app/component/form/sw-multi-select/sw-multi-select.less","webpack:///./src/app/component/form/sw-text-editor/sw-text-editor.less","webpack:///./src/app/component/tree/sw-tree/sw-tree.less","webpack:///./src/app/component/tree/sw-tree-item/sw-tree-item.less","webpack:///./src/app/component/context-menu/sw-context-button/sw-context-button.less","webpack:///./src/app/component/context-menu/sw-context-menu/sw-context-menu.less","webpack:///./src/app/component/context-menu/sw-context-menu-item/sw-context-menu-item.less","webpack:///./src/app/component/structure/sw-admin/sw-admin.less","webpack:///./src/app/component/structure/sw-desktop/sw-desktop.less","webpack:///./src/app/component/structure/sw-page/sw-page.less","webpack:///./src/app/component/structure/sw-card-view/sw-card-view.less","webpack:///./src/app/component/structure/sw-admin-menu/sw-admin-menu.less","webpack:///./src/app/component/structure/sw-search-bar/sw-search-bar.less","webpack:///./src/app/component/structure/sw-search-bar-item/sw-search-bar-item.less","webpack:///./src/app/component/media/sw-media-grid/sw-media-grid.less","webpack:///./src/app/component/media/sw-media-preview/sw-media-preview.less","webpack:///./src/app/component/media/sw-media-upload-container/sw-media-upload-container.less","webpack:///./src/app/component/base/sw-card/index.js","webpack:///./src/app/component/base/sw-user-card/index.js","webpack:///./src/app/component/base/sw-card-section/index.js","webpack:///./src/app/component/base/sw-button/index.js","webpack:///./src/app/component/base/sw-icon/index.js","webpack:///./src/app/component/base/sw-image/index.js","webpack:///./src/app/component/base/sw-alert/index.js","webpack:///./src/app/component/base/sw-avatar/index.js","webpack:///./src/app/component/base/sw-container/index.js","webpack:///./src/app/component/base/sw-sidebar/index.js","webpack:///./src/app/component/base/sw-sidebar-item/index.js","webpack:///./src/app/component/base/sw-tabs/index.js","webpack:///./src/app/component/base/sw-tabs-item/index.js","webpack:///./src/app/component/base/sw-table/index.js","webpack:///./src/app/component/base/sw-modal/index.js","webpack:///./src/app/component/base/sw-address/index.js","webpack:///./src/app/component/base/sw-empty-state/index.js","webpack:///./src/app/component/base/sw-description-list/index.js","webpack:///./src/app/component/base/sw-version/index.js","webpack:///./src/app/component/utils/sw-loader/index.js","webpack:///./src/app/component/utils/sw-notifications/index.js","webpack:///./src/app/component/utils/sw-color-badge/index.js","webpack:///./src/app/component/utils/sw-vnode-renderer/index.js","webpack:///./src/app/component/grid/sw-grid/index.js","webpack:///./src/app/component/grid/sw-grid-column/index.js","webpack:///./src/app/component/grid/sw-grid-row/index.js","webpack:///./src/app/component/grid/sw-pagination/index.js","webpack:///./src/app/component/form/sw-field/index.js","webpack:///./src/app/component/form/sw-price-field/index.js","webpack:///./src/app/component/form/sw-multi-select/index.js","webpack:///./src/app/component/form/sw-text-editor/index.js","webpack:///./src/app/component/tree/sw-tree/index.js","webpack:///./src/app/component/tree/sw-tree-item/index.js","webpack:///./src/app/component/context-menu/sw-context-button/index.js","webpack:///./src/app/component/context-menu/sw-context-menu/index.js","webpack:///./src/app/component/context-menu/sw-context-menu-item/index.js","webpack:///./src/app/component/structure/sw-admin/index.js","webpack:///./src/app/component/structure/sw-desktop/index.js","webpack:///./src/app/component/structure/sw-page/index.js","webpack:///./src/app/component/structure/sw-card-view/index.js","webpack:///./src/app/component/structure/sw-admin-menu-item/index.js","webpack:///./src/app/component/structure/sw-admin-menu/index.js","webpack:///./src/app/component/structure/sw-search-bar/index.js","webpack:///./src/app/component/structure/sw-search-bar-item/index.js","webpack:///./src/app/component/media/sw-media-grid/index.js","webpack:///./src/app/component/media/sw-media-grid-media-item/index.js","webpack:///./src/app/component/media/sw-media-preview/index.js","webpack:///./src/app/component/media/sw-media-upload-container/index.js","webpack:///./src/app/component/media/sw-media-upload-url-modal/index.js"],"names":["src_core_shopware__WEBPACK_IMPORTED_MODULE_0__","register","template","_sw_collapse_html_twig__WEBPACK_IMPORTED_MODULE_1___default","a","props","expandOnLoading","type","Boolean","required","default","data","expanded","this","methods","collapseItem","_sw_media_grid_item_html_twig__WEBPACK_IMPORTED_MODULE_1___default","selected","item","Object","containerOptions","computed","isListItemPreview","previewType","gridItemListeners","click","emitClickedEvent","itemTitle","name","mediaItemClasses","is--selected","mediaItemContentClasses","is--grid","is--list","selectedIndicatorClasses","selected-indicator--visible","selectionInProgress","originalDomEvent","removeFromSelection","$emit","doSelectItem","selectItem","module","exports","content","__webpack_require__","i","locals","add","shopware","sw_card_html_default","title","String","hero","isLoading","grid","large","cardClasses","sw-card--tabs","$slots","tabs","sw-card--grid","sw-card--hero","$props","sw-card--large","sw_user_card_html_default","user","hasActionSlot","actions","moduleColor","$route","meta","$module","color","userName","salutation","firstName","lastName","sw_card_section_html_default","divider","validator","value","length","includes","secondary","slim","cardSectionClasses","_ref","defineProperty_default","sw_button_html_default","disabled","variant","size","block","routerLink","link","buttonClasses","sw_icon_html_default","small","multicolor","decorative","iconNamePrefix","iconSetPath","iconClasses","iconStyles","is_nan_default","parseFloat","width","height","created","createdComponent","util_service","warn","$options","sw_image_html_default","altText","isCover","downloadable","url","swImageClasses","is--cover","sw_alert_html_default","showIcon","system","closable","notificationIndex","alertClasses","sw-alert--system","sw-alert--no-icon","sw-alert--closable","alertIcon","info","warning","error","success","sw_avatar_html_default","useGravatar","fontSize","lineHeight","avatarSize","avatarInitials","avatarInitialsSize","font-size","line-height","userImage","email","getGravatarUserImage","avatarImage","background-image","avatarColor","background-color","mounted","mountedComponent","generateAvatarInitialsSize","$refs","swAvatar","offsetHeight","Math","round","format_utils","sw_container_html_default","gap","justify","align","gridStyles","styles","sw_sidebar_html_default","items","currentlyExpanded","$on","closeNonExpandedContentPanels","activePanelId","_this","keys_default","forEach","key","panel","isExpanded","sw_sidebar_item_html_default","icon","panelId","createId","sidebarItemClasses","is--active","is--disabled","hasDefaultSlot","componentCreated","$parent","sidebarButtonClick","event","toggleContentPanel","expand","arguments","undefined","closeSideBarPanel","sw_tabs_html_default","showArrowControls","scrollbarOffset","scrollbarOffsetStyle","bottom","margin-top","initializeArrows","addScrollbarOffset","onClickArrow","direction","tabsNavigation","swTabsNavigation","tabsNavigationWidth","offsetWidth","scrollLeft","offset","dom_utils","getScrollbarHeight","tabsNavigationElements","$el","querySelectorAll","tabsNavigationItemsWidth","from_default","sw_tabs_item_html_default","route","sw_table_html_default","columns","tableStyles","grid-template-columns","sw_modal_html_default","inheritAttrs","modalClasses","hasFooterSlot","destroyed","destroyedComponent","document","addEventListener","closeModalOnEscapeKey","body","appendChild","setFocusToModal","removeEventListener","querySelector","focus","closeModal","keyCode","sw_address_html_default","address","headline","fullName","addressClasses","sw-address--headline","sw_empty_state_html_default","moduleDescription","description","moduleIcon","sw_description_list_html_default","descriptionListStyles","sw_version_html_default","sw_loader_html_default","sw_notifications_html_default","position","notificationsGap","notificationsTopGap","notifications","getStore","notificationsStyle","parseInt","top","right","left","onClose","removeNotification","sw_color_badge_html_default","rounded","colorStyle","variantClass","functional","render","h","context","node","sw_grid_html_default","Array","selectable","sidebar","header","sortBy","sortDirection","isFullpage","table","selection","editing","sort","sortDir","sizeClass","hasPaginationSlot","pagination","gridClasses","sw-grid--sidebar","sw-grid--fullpage","sw-grid--table","gridContentClasses","sw-grid__content--header","sw-grid__content--pagination","columnFlex","flex","column","trim","updated","setScrollbarOffset","that","registerInlineEditingEvents","$device","onResize","listener","component","inlineEditingStart","disableActiveInlineEditing","id","push","filter","selectAll","getSelection","isSelected","itemId","getScrollBarWidth","gridBody","getElementsByClassName","clientWidth","onGridCellClick","sortable","getScrollbarWidth","swGridBody","sw_grid_column_html_default","label","iconLabel","dataIndex","editable","truncate","registerColumn","watch","newLabel","oldLabel","index","findIndex","col","sw_grid_row_html_default","isEditingActive","inlineEditingCls","swGridRow","classList","remove","onInlineEditCancel","onInlineEditStart","getViewportWidth","isInlineEditingConfigured","onInlineEditFinish","sw_pagination_html_default","total","Number","limit","page","totalVisible","currentPage","perPage","steps","maxPage","ceil","displayedPages","maxLength","range","even","floor","start","end","concat","toConsumableArray_default","from","to","pageChange","onPageSizeChange","firstPage","prevPage","nextPage","lastPage","changePageByPageNumber","pageNum","refresh","sw_field_html_default","mixins","getByName","placeholder","helpText","suffix","Date","errorMessage","options","copyAble","passwordToggleAble","currentValue","boundExpression","boundExpressionPath","showPassword","formError","hasSuffix","replace","errorStore","hasError","detail","hasErrorCls","isValid","additionalEventListeners","listeners","$listeners","fieldClasses","has--error","has--suffix","convertValueType","$vnode","model","expression","split","registerFormField","onInput","getValueFromEvent","deleteError","onClick","onChange","target","checked","onTogglePasswordVisibility","copyToClipboard","el","textfield","removeAttribute","select","execCommand","createNotificationInfo","$tc","message","err","createNotificationError","window","removeAllRanges","setAttribute","sw_price_field_html_default","price","net","gross","taxRate","currency","validation","price.linked","convertGrossToNet","taxRate.taxRate","linked","onLockSwitch","onPriceGrossChange","onPriceNetChange","convertNetToGross","getMathTaxRate","sw_multi_select_html_default","serviceProvider","criteria","previewResultsLimit","resultsLimit","entityName","store","defaultItemId","initialSelection","searchTerm","results","selections","activeResultPosition","multiSelectClasses","is--expanded","$route.params.id","loadPreviewResults","loadSelections","addEventListeners","removeEventListeners","closeOnClickOutside","getList","then","response","loadResults","_this2","term","scrollToResultsTop","_this3","openResultList","closeResultList","swMultiSelectInput","blur","onSearchTermChange","doGlobalSearch","debounce","setActiveResultPosition","navigateUpResults","swMultiSelectEl","swMultiSelect","resultItem","scrollTop","navigateDownResults","activeItem","itemHeight","activeItemPosition","offsetTop","resultContainer","resultContainerHeight","setFocus","closest","isInSelections","result","every","addSelection","emitChanges","changeDefaultItemId","addSelectionOnEnter","entry","onDismissSelection","dismissLastSelection","dismissSelection","lastSelectionId","itemIds","map","associationStore","delete","create","isDeleted","sw_text_editor_html_default","htmlContent","toolbarConfig","list","textLength","editor","root","innerHTML","setText","quill_default","theme","modules","toolbar","on","onTextChange","silent","clipboard","dangerouslyPasteHTML","getText","getHTML","htmlValue","textValue","sw_tree_html_default","rootParentId","parentProperty","positionProperty","childCountProperty","draggedItem","currentTreeSearch","treeItems","getTreeItems","isSearched","isSortable","getItems","parentId","searchItems","find","childCount","children","b","startDrag","draggedComponent","opened","endDrag","moveDrag","droppedComponent","dragItem","dropItem","leftParentId","updateChildPositions","moveItemsUp","moveItemsDown","startPosition","dragStartPosition","_this4","sw_tree_item_html_default","isLeaf","dragEl","dragStartX","dragStartY","mouseStartX","mouseStartY","isDragging","styling","is--dragging","is--sortable","is--opened","is--no-children","updatedComponent","openTreeItem","open","getTreeItemChildren","treeItem","_len","args","_key","onDragStart","pageX","pageY","createDragEl","onDragMove","onDragEnd","style","onMouseEnter","cloneNode","boundingBox","getBoundingClientRect","zIndex","sw_context_button_html_default","showMenuOnStartup","menuWidth","menuOffsetTop","menuOffsetLeft","showMenu","positionTop","positionLeft","paddingTop","menuUuid","menuStyles","display","padding-top","beforeDestroy","removeMenuFromBody","openMenu","addMenuToBody","closeMenu","swContextButton","contains","menuEl","$children","sw_context_menu_html_default","sw_context_menu_item_html_default","contextMenuItemStyles","contextListeners","sw_admin_html_default","sw_desktop_html_default","sw_page_html_default","showSmartBar","parentRoute","pageColor","pageContainerClasses","has--smart-bar","smartBarStyles","border-bottom-color","padding-right","initPage","parentPath","swPageContent","firstChild","sw_card_view_html_default","sw_admin_menu_item_html_default","displayIcon","iconSize","collapsibleText","sidebarExpanded","getLinkToProp","params","path","getEntryLabel","translated","getIconName","getItemName","menuItemName","sw_admin_menu_html_default","inject","isOffCanvasShown","isUserActionsActive","flyoutEntries","flyoutStyle","flyoutLabel","subMenuOpen","userProfile","userStore","localeStore","mainMenuEntries","menuService","getMainMenu","sidebarCollapseIcon","userActionsToggleIcon","margin-left","adminMenuClasses","is--collapsed","is--off-canvas-shown","collapseMenuOnSmallViewports","userService","getUser","getById","$root","state","openSubMenu","currentTarget","changeActiveItem","parentNode","listItem","isActiveItem","menuItem","openFlyout","border-color","closeFlyout","onChangeLanguage","newLocale","$i18n","locale","setLocale","onToggleSidebar","onToggleUserActions","openUserActions","closeUserActions","onLogoutUser","loginService","clearBearerAuthentication","$router","swAdminMenuBody","sw_search_bar_html_default","showResultsContainer","useSearchTypeWhenSet","isActive","isSearchBarShown","searchTypeColor","useTypeSearch","showSearchResults","searchBarStyles","paddingRight","searchBarFieldClasses","showSearchFieldOnLargerViewports","clearSearchTerm","onFocusInput","onBlur","showSearchBar","hideSearchBar","doListSearch","toggleOffCanvas","resetSearchType","once","searchService","search","sw_search_bar_item_html_default","sw_media_grid_html_default","previewComponent","require","idField","gridColumnWidth","listSelectionStartItem","dragSelectorClass","mediaColumnDefinitions","columnDefinition","showSelectedIndicator","previewSize","clearSelection","emitSelectionCleared","isItemSelected","findIndexInSelection","handleClick","ctrlKey","shiftKey","handleSelection","_ref2","listSelect","addToSelection","singleSelect","_ref3","_ref4","_ref5","getSelectedIndexes","startIndex","endIndex","startItem","endItem","findIndexInItems","tmp","element","_ref6","onDragSelection","_ref7","onDragDeselection","_ref8","extend","sw_media_grid_media_item_html_default","fromBlur","doMainAction","dblclick","startInlineEdit","inputItemName","input","cancelInlineEditFromBlur","cancelInlineEdit","emitNameChanged","newName","showItemDetails","copyItemLink","extensions","links","deleteItem","replaceItem","sw_media_preview_html_default","playable","autoplay","checkForFileTypeImage","filePath","mimeType","test","checkForFileTypeVideo","isPlayable","checkForFileTypeAudio","checkForInMemoryFile","checkForMimeType","application/pdf","application/msword","application/vnd.openxmlformats-officedocument.wordprocessingml.document","application/vnd.ms-excel","application/vnd.openxmlformats-officedocument.spreadsheetml.sheet","application/vnd.ms-powerpoint","application/vnd.openxmlformats-officedocument.presentationml.presentation","application/svg","placeholderIcon","application/svg+xml","imageURLFromItem","now","video/mp4","video/webm","sw_media_upload_container_html_default","multipleFiles","showUrlModal","files","urls","mediaEntities","resetArrays","addFile","fileInput","emitOpenMedia","emitAddedData","mediaItems","handleFileUpload","openUrlDialog","showUrlDialog","closeUrlDialog","uploadFromUrl","sw_media_upload_url_modal_tml_default","emitUrl"],"mappings":"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","file":"static/js/components.js","sourcesContent":["import { Component } from 'src/core/shopware';\nimport template from './sw-collapse.html.twig';\n\nComponent.register('sw-collapse', {\n    template,\n\n    props: {\n        expandOnLoading: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            expanded: this.expandOnLoading\n        };\n    },\n\n    methods: {\n        collapseItem() {\n            this.expanded = !this.expanded;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-grid-item.html.twig';\nimport './sw-media-grid-item.less';\n\nComponent.register('sw-media-grid-item', {\n    template,\n\n    props: {\n        selected: {\n            type: Boolean,\n            required: true\n        },\n\n        item: {\n            required: true,\n            type: Object\n        },\n\n        containerOptions: {\n            required: true,\n            type: Object\n        }\n    },\n\n    computed: {\n        isListItemPreview() {\n            return this.containerOptions.previewType === 'media-grid-preview-as-list';\n        },\n\n        gridItemListeners() {\n            return {\n                click: this.emitClickedEvent\n            };\n        },\n\n        itemTitle() {\n            return this.item.name;\n        },\n\n        mediaItemClasses() {\n            return {\n                'is--selected': this.selected\n            };\n        },\n\n        mediaItemContentClasses() {\n            return {\n                'is--grid': !this.isListItemPreview,\n                'is--list': this.isListItemPreview\n            };\n        },\n\n        selectedIndicatorClasses() {\n            return {\n                'selected-indicator--visible': this.containerOptions.selectionInProgress\n            };\n        }\n    },\n\n    methods: {\n        emitClickedEvent(originalDomEvent) {\n            if (!this.selected) {\n                this.$emit('sw-media-grid-item-clicked', {\n                    originalDomEvent,\n                    item: this.item\n                });\n                return;\n            }\n\n            this.removeFromSelection(originalDomEvent);\n        },\n\n        doSelectItem(originalDomEvent) {\n            if (!this.selected) {\n                this.selectItem(originalDomEvent);\n                return;\n            }\n\n            this.removeFromSelection(originalDomEvent);\n        },\n\n        selectItem(originalDomEvent) {\n            this.$emit('sw-media-grid-item-selection-add', {\n                originalDomEvent,\n                item: this.item\n            });\n        },\n\n        removeFromSelection(originalDomEvent) {\n            this.$emit('sw-media-grid-item-selection-remove', {\n                originalDomEvent,\n                item: this.item\n            });\n        }\n    }\n});\n","module.exports = \"{% block sw_collapse_panel %}\\n    <div class=\\\"sw-collapse\\\">\\n        {% block sw_collapse_panel_header %}\\n            <div @click=\\\"collapseItem\\\" class=\\\"sw-collapse__header\\\">\\n                <slot name=\\\"header\\\" :expanded=\\\"expanded\\\">{% block sw_collapse_panel_header_slot %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_collapse_panel_content %}\\n            <div class=\\\"sw-collapse__content\\\" v-if=\\\"expanded\\\">\\n                <slot name=\\\"content\\\">{% block sw_collapse_panel_content_slot %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{%  block sw_media_grid_item %}\\n    <div class=\\\"sw-media-grid-item\\\" :class=\\\"mediaItemClasses\\\" v-on=\\\"gridItemListeners\\\">\\n        {% block sw_media_grid_item_content %}\\n            <div class=\\\"sw-media-grid-item__content\\\" :class=\\\"mediaItemContentClasses\\\">\\n                {% block sw_media_grid_item_selection_condition %}\\n                    <div class=\\\"sw-media-grid-item__selected-indicator\\\"\\n                         :class=\\\"selectedIndicatorClasses\\\"\\n                         v-if=\\\"containerOptions.selectable && !isListItemPreview\\\">\\n\\n                        {% block sw_media_grid_item_selected_indicator %}\\n                            <sw-field type=\\\"checkbox\\\" :value=\\\"selected\\\" @click.self=\\\"doSelectItem\\\"></sw-field>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_media_grid_item_preview_container %}\\n                    <div class=\\\"sw-media-grid-item__preview\\\">\\n                        {% block sw_media_grid_item_preview %}{% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_media_grid_item_name_container %}\\n                    <div class=\\\"sw-media-grid-item__name-container\\\">\\n                        {% block sw_media_grid_item_name %}\\n                            <div class=\\\"sw-media-grid-item__name\\\">\\n                                {{ itemTitle }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_media_grid_item_details_condition %}\\n                    <div v-if=\\\"isListItemPreview\\\">\\n                        {% block sw_media_grid_item_details%}{% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_media_grid_item_context_menu %}\\n                    <div class=\\\"sw-media-grid-item__context-button\\\">\\n                        <sw-context-button>\\n                            {% block sw_media_grid_item_context_items%}{% endblock %}\\n                        </sw-context-button>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_card %}\\n    <div class=\\\"sw-card\\\" :class=\\\"cardClasses\\\">\\n        {% block sw_card_title %}\\n            <div class=\\\"sw-card__title\\\" v-if=\\\"title\\\">{{ title }}</div>\\n        {% endblock %}\\n\\n        <slot name=\\\"tabs\\\"></slot>\\n\\n        {% block sw_card_content %}\\n            <div class=\\\"sw-card__content\\\">\\n                <slot>\\n                    {% block sw_card_slot_default %}{% endblock %}\\n                </slot>\\n                <slot name=\\\"grid\\\">\\n                    {% block sw_card_slot_grid %}{% endblock %}\\n                </slot>\\n\\n                {% block sw_card_loader %}\\n                    <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_user_card %}\\n    <sw-card class=\\\"sw-user-card\\\" :title=\\\"title\\\" :isLoading=\\\"isLoading\\\">\\n\\n        {% block sw_user_card_rows %}\\n            <sw-container slot=\\\"grid\\\" type=\\\"row\\\" grid=\\\"auto auto\\\">\\n\\n                {% block sw_user_card_row_primary %}\\n                    <sw-card-section divider=\\\"bottom\\\">\\n\\n                        {% block sw_user_card_metadata_container %}\\n                            <sw-container grid=\\\"80px 1fr\\\" gap=\\\"0px 30px\\\">\\n\\n                                {% block sw_user_card_avatar %}\\n                                    <sw-avatar :color=\\\"moduleColor\\\"\\n                                               size=\\\"80px\\\"\\n                                               :user=\\\"user\\\"\\n                                               :isLoading=\\\"isLoading\\\">\\n                                    </sw-avatar>\\n                                {% endblock %}\\n\\n                                {% block sw_user_card_metadata %}\\n                                    <div class=\\\"sw-user-card__metadata\\\">\\n\\n                                        {% block sw_user_card_metadata_user_name %}\\n                                            <div v-if=\\\"userName\\\" class=\\\"sw-user-card__metadata-user-name\\\">\\n                                                {{ userName }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block sw_user_card_metadata_user_company %}\\n                                            <div v-if=\\\"user.company\\\" class=\\\"sw-user-card__metadata-item\\\">\\n                                                {{ user.company }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block sw_user_card_metadata_user_email %}\\n                                            <div v-if=\\\"user.email\\\" class=\\\"sw-user-card__metadata-item\\\">\\n                                                Email: {{ user.email }}\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                        {% block sw_user_card_metadata_additional %}\\n                                            <slot name=\\\"metadata-additional\\\">\\n                                                {% block sw_user_card_slot_metadata_additional %}{% endblock %}\\n                                            </slot>\\n                                        {% endblock %}\\n\\n                                        {% block sw_user_card_actions %}\\n                                            <div v-if=\\\"hasActionSlot\\\" class=\\\"sw-user-card__actions\\\">\\n                                                <slot name=\\\"actions\\\">\\n                                                    {% block sw_user_card_slot_actions %}{% endblock %}\\n                                                </slot>\\n                                            </div>\\n                                        {% endblock %}\\n\\n                                    </div>\\n                                {% endblock %}\\n\\n                            </sw-container>\\n                        {% endblock %}\\n\\n                    </sw-card-section>\\n                {% endblock %}\\n\\n                {% block sw_user_card_row_secondary %}\\n                    <sw-card-section secondary slim>\\n                        <slot>\\n                            {% block sw_user_card_slot_default %}{% endblock %}\\n                        </slot>\\n                    </sw-card-section>\\n                {% endblock %}\\n            </sw-container>\\n        {% endblock %}\\n    </sw-card>\\n{% endblock %}\";","module.exports = \"<div class=\\\"sw-card-section\\\" :class=\\\"cardSectionClasses\\\">\\n    <slot></slot>\\n</div>\";","module.exports = \"{% block sw_button %}\\n    {% block sw_button_router_link %}\\n        <router-link v-if=\\\"routerLink\\\"\\n                     :to=\\\"routerLink\\\"\\n                     class=\\\"sw-button\\\"\\n                     :class=\\\"buttonClasses\\\">\\n            {% block sw_button_router_link_content %}\\n                <span class=\\\"sw-button__content\\\">\\n                    <slot>{% block sw_button_router_link_slot_default %}{% endblock %}</slot>\\n                </span>\\n            {% endblock %}\\n        </router-link>\\n    {% endblock %}\\n\\n    {% block sw_button_link %}\\n        <a v-else-if=\\\"link\\\"\\n           :href=\\\"link\\\"\\n           class=\\\"sw-button\\\"\\n           :class=\\\"buttonClasses\\\">\\n            {% block sw_button_link_content %}\\n                <span class=\\\"sw-button__content\\\">\\n                    <slot>{% block sw_button_link_slot_default %}{% endblock %}</slot>\\n                </span>\\n            {% endblock %}\\n        </a>\\n    {% endblock %}\\n\\n    {% block sw_button_button %}\\n        <button class=\\\"sw-button\\\"\\n                :class=\\\"buttonClasses\\\"\\n                :disabled=\\\"disabled\\\"\\n                v-on=\\\"$listeners\\\"\\n                v-else>\\n            {% block sw_button_button_content %}\\n                <span class=\\\"sw-button__content\\\">\\n                    <slot>{% block sw_button_button_slot_default %}{% endblock %}</slot>\\n                </span>\\n            {% endblock %}\\n        </button>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_icon %}\\n    <svg class=\\\"sw-icon\\\"\\n         :class=\\\"iconClasses\\\"\\n         :style=\\\"iconStyles\\\"\\n         :aria-hidden=\\\"decorative\\\">\\n        {% block sw_icon_inner %}\\n            {% block sw_icon_title %}\\n                <title v-if=\\\"title\\\">{{ title }}</title>\\n            {% endblock %}\\n\\n            <slot>\\n                {% block sw_icon_slot_default %}\\n                    <use :xlink:href=\\\"iconSetPath | asset\\\"></use>\\n                {% endblock %}\\n            </slot>\\n        {% endblock %}\\n    </svg>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_image %}\\n    <div class=\\\"sw-image\\\" :class=\\\"swImageClasses\\\">\\n        {% block sw_product_media_item_image %}\\n            <img class=\\\"sw-image__image\\\" :src=\\\"url\\\" :alt=\\\"altText\\\">\\n        {% endblock %}\\n        {% block sw_product_media_item_tooltip %}\\n            <div class=\\\"sw-image__tooltip\\\">{{ altText }}</div>\\n        {% endblock %}\\n        <sw-context-button class=\\\"sw-image__context-button\\\">\\n            {% block sw_product_media_item_contex %}\\n                <sw-context-menu-item v-if=\\\"!isCover\\\" @click=\\\"$emit('sw-image-cover')\\\">{{ $tc('sw-image.context.buttonAsCover') }}</sw-context-menu-item>\\n                <sw-context-menu-item variant=\\\"danger\\\" @click=\\\"$emit('sw-image-delete')\\\">{{ $tc('sw-image.context.buttonDelete') }}</sw-context-menu-item>\\n            {% endblock %}\\n        </sw-context-button>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_alert %}\\n    <div class=\\\"sw-alert\\\" :class=\\\"alertClasses\\\" role=\\\"alert\\\">\\n        {% block sw_alert_inner %}\\n            {% block sw_alert_icon %}\\n                <sw-icon class=\\\"sw-alert__icon\\\" :name=\\\"alertIcon\\\" decorative v-if=\\\"showIcon\\\"></sw-icon>\\n            {% endblock %}\\n\\n            {% block sw_alert_title %}\\n                <div v-if=\\\"title\\\" class=\\\"sw-alert__title\\\">{{ title }}</div>\\n            {% endblock %}\\n\\n            {% block sw_alert_message %}\\n                <div class=\\\"sw-alert__message\\\">\\n                    <slot>{% block sw_alert_slot_default %}{% endblock %}</slot>\\n                </div>\\n            {% endblock %}\\n\\n            {% block sw_alert_close %}\\n                <button v-if=\\\"closable\\\"\\n                        class=\\\"sw-alert__close\\\"\\n                        @click.prevent=\\\"$emit('swAlertClose', notificationIndex)\\\"\\n                        aria-label=\\\"Schließen\\\"\\n                        title=\\\"Schließen\\\">\\n                    <sw-icon name=\\\"small-default-x-line-medium\\\" small></sw-icon>\\n                </button>\\n            {% endblock %}\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_avatar %}\\n    <span class=\\\"sw-avatar\\\"\\n          :style=\\\"[avatarImage, avatarColor, avatarSize, avatarInitialsSize]\\\"\\n          ref=\\\"swAvatar\\\"\\n          role=\\\"img\\\">\\n        <slot>\\n            {% block sw_avatar_slot_default %}\\n                <span v-if=\\\"!userImage.length\\\" class=\\\"sw-avatar__initials\\\">\\n                    {{ avatarInitials }}\\n                </span>\\n            {% endblock %}\\n        </slot>\\n    </span>\\n{% endblock %}\";","module.exports = \"{% block sw_container %}\\n    <div class=\\\"sw-container\\\" :style=\\\"gridStyles\\\">\\n        <slot>\\n            {% block sw_container_slot_default %}{% endblock %}\\n        </slot>\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_sidebar %}\\n    <div class=\\\"sw-sidebar\\\">\\n        <slot>{% block sw_sidebar_slot_default %}{% endblock %}</slot>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_sidebar_item %}\\n    <div class=\\\"sw-sidebar-item\\\">\\n        {% block sw_sidebar_item_button %}\\n            <button class=\\\"sw-sidebar-item__button\\\" :class=\\\"sidebarItemClasses\\\" @click=\\\"sidebarButtonClick\\\">\\n                {% block sw_sidebar_item_icon %}<sw-icon :name=\\\"icon\\\" size=\\\"20px\\\" :title=\\\"title\\\"></sw-icon>{% endblock %}\\n            </button>\\n        {% endblock %}\\n\\n        {% block sw_sidebar_item_content %}\\n            <div class=\\\"sw-sidebar-item__content\\\" v-if=\\\"isExpanded\\\">\\n                {% block sw_sidebar_item_headline %}\\n                    <div class=\\\"sw-sidebar-item__headline\\\">\\n                        {% block sw_sidebar_item_title %}\\n                            <h1 class=\\\"sw-sidebar-item__title\\\">{{ title }}</h1>\\n                        {% endblock %}\\n\\n                        {% block sw_sidebar_item_close_button %}\\n                            <div class=\\\"sw-sidebar-item__close-button\\\" @click=\\\"closeSideBarPanel\\\">\\n                                <sw-icon name=\\\"small-default-x-line-small\\\"></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n                <slot>{% block sw_sidebar_item_slot_default %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_tabs %}\\n    <div class=\\\"sw-tabs\\\">\\n        {% block sw_tabs_container %}\\n            <div class=\\\"sw-tabs__container\\\">\\n                {% block sw_tabs_navigation %}\\n                    <nav class=\\\"sw-tabs__navigation\\\" ref=\\\"swTabsNavigation\\\" :style=\\\"scrollbarOffsetStyle\\\">\\n                        {% block sw_tabs_navigation_items %}\\n                            <slot>\\n                                {% block sw_tabs_slot_default %}{% endblock %}\\n                            </slot>\\n                        {% endblock %}\\n                    </nav>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_tabs_arrows %}\\n            {% block sw_tabs_arrow_left %}\\n                <button v-if=\\\"showArrowControls\\\"\\n                        @click=\\\"onClickArrow('left')\\\"\\n                        class=\\\"sw-tabs__arrow sw-tabs__arrow--left\\\">\\n                    {% block sw_tabs_arrow_left_icon %}\\n                        <sw-icon name=\\\"small-arrow-medium-left\\\" small></sw-icon>\\n                    {% endblock %}\\n                </button>\\n            {% endblock %}\\n\\n            {% block sw_tabs_arrow_right %}\\n                <button v-if=\\\"showArrowControls\\\"\\n                        @click=\\\"onClickArrow('right')\\\"\\n                        class=\\\"sw-tabs__arrow sw-tabs__arrow--right\\\">\\n                    {% block sw_tabs_arrow_right_icon %}\\n                        <sw-icon name=\\\"small-arrow-medium-right\\\" small></sw-icon>\\n                    {% endblock %}\\n                </button>\\n            {% endblock %}\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_tabs_item %}\\n    {% block sw_tabs_item_router_link %}\\n        <router-link v-if=\\\"route\\\" class=\\\"sw-tabs-item\\\" :to=\\\"route\\\">\\n            {% block sw_tabs_item_router_link_label %}\\n                <slot>{% block sw_tabs_item_router_link_slot_default %}{% endblock %}</slot>\\n            {% endblock %}\\n        </router-link>\\n    {% endblock %}\\n\\n    {% block sw_tabs_item_button %}\\n        <button v-else class=\\\"sw-tabs-item\\\">\\n            {% block sw_tabs_item_button_label %}\\n                <slot>{% block sw_tabs_item_button_slot_default %}{% endblock %}</slot>\\n            {% endblock %}\\n        </button>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"{% block sw_table %}\\n    <div class=\\\"sw-table\\\" :style=\\\"tableStyles\\\">\\n        <slot>{% block sw_table_slot_default %}{% endblock %}</slot>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_modal %}\\n    <transition name=\\\"sw-modal-fade\\\">\\n        {% block sw_modal_element %}\\n            <div class=\\\"sw-modal\\\" :class=\\\"modalClasses\\\" @click.prevent=\\\"closeModal\\\">\\n                {% block sw_modal_dialog %}\\n                    <div class=\\\"sw-modal__dialog\\\"\\n                         :style=\\\"{ maxWidth: size }\\\"\\n                         role=\\\"dialog\\\"\\n                         aria-labelledby=\\\"modalTitleEl\\\"\\n                         tabindex=\\\"-1\\\"\\n                         @click.stop>\\n                        {% block sw_modal_header %}\\n                            <header class=\\\"sw-modal__header\\\">\\n                                <slot name=\\\"modal-header\\\">\\n                                    {% block sw_modal_slot_header %}\\n                                        {% block sw_modal_close %}\\n                                            <h4 class=\\\"sw-modal__title\\\" id=\\\"modalTitleEl\\\">\\n                                                {{ title }}\\n                                            </h4>\\n                                        {% endblock %}\\n\\n                                        {% block sw_modal_close_button %}\\n                                            <button class=\\\"sw-modal__close\\\"\\n                                                    :title=\\\"$tc('global.sw-modal.labelClose')\\\"\\n                                                    :aria-label=\\\"$tc('global.sw-modal.labelClose')\\\"\\n                                                    @click.prevent=\\\"closeModal\\\">\\n                                                {% block sw_modal_close_icon %}\\n                                                    <sw-icon name=\\\"small-default-x-line-medium\\\" small></sw-icon>\\n                                                {% endblock %}\\n                                            </button>\\n                                        {% endblock %}\\n                                    {% endblock %}\\n                                </slot>\\n                            </header>\\n                        {% endblock %}\\n\\n                        {% block sw_modal_body %}\\n                            <div class=\\\"sw-modal__body\\\">\\n                                {% block sw_card_loader %}\\n                                    <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                                {% endblock %}\\n                                <slot>\\n                                    {% block sw_modal_slot_default %}{% endblock %}\\n                                </slot>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_modal_footer %}\\n                            <footer v-if=\\\"hasFooterSlot\\\" class=\\\"sw-modal__footer\\\">\\n                                <slot name=\\\"modal-footer\\\">\\n                                    {% block sw_modal_slot_footer %}{% endblock %}\\n                                </slot>\\n                            </footer>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </transition>\\n{% endblock %}\";","module.exports = \"{% block sw_address %}\\n    <div class=\\\"sw-address\\\" :class=\\\"addressClasses\\\">\\n\\n        {% block sw_address_headline %}\\n            <div class=\\\"sw-address__headline\\\" v-if=\\\"headline\\\">\\n                {{ headline }}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_address_body %}\\n            <div class=\\\"sw-address__body\\\">\\n                {% block sw_address_company %}\\n                    <div v-if=\\\"address.company\\\" class=\\\"sw-address__line\\\">\\n                        {{ address.company }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_address_full_name %}\\n                    <div v-if=\\\"fullName\\\" class=\\\"sw-address__line\\\">\\n                        {{ fullName }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_address_street %}\\n                    <div v-if=\\\"address.street\\\" class=\\\"sw-address__line\\\">\\n                        {{ address.street }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_address_additional_address_line_1 %}\\n                    <div v-if=\\\"address.additionalAddressLine1\\\" class=\\\"sw-address__line\\\">\\n                        {{ address.additionalAddressLine1 }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_address_additional_address_line_2 %}\\n                    <div v-if=\\\"address.additionalAddressLine2\\\" class=\\\"sw-address__line\\\">\\n                        {{ address.additionalAddressLine2 }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_address_city_zipcode %}\\n                    <div v-if=\\\"address.city || address.zipcode\\\" class=\\\"sw-address__line\\\">\\n                        {% block sw_address_zipcode %}\\n                            <span v-if=\\\"address.zipcode\\\">{{ address.zipcode }} </span>\\n                        {% endblock %}\\n\\n                        {% block sw_address_city %}\\n                            <span v-if=\\\"address.city\\\">{{ address.city }}</span>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_address_country %}\\n                    <div v-if=\\\"address.country.name\\\" class=\\\"sw-address__line\\\">\\n                        {{ address.country.name }}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_empty_state %}\\n    <div class=\\\"sw-empty-state\\\">\\n        {% block sw_empty_state_element %}\\n            <div class=\\\"sw-empty-state__element\\\">\\n\\n                {% block sw_empty_state_icon %}\\n                    <div class=\\\"sw-empty-state__icon\\\">\\n                        <slot name=\\\"icon\\\">\\n                            {% block sw_empty_state_slot_icon %}\\n                                <sw-icon :name=\\\"moduleIcon\\\" size=\\\"60px\\\" :color=\\\"moduleColor\\\"></sw-icon>\\n                            {% endblock %}\\n                        </slot>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_empty_state_title %}\\n                    <div class=\\\"sw-empty-state__title\\\" role=\\\"alert\\\">\\n                        {{ title }}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_empty_state_description %}\\n                    <div class=\\\"sw-empty-state__description\\\">\\n                        <slot>\\n                            {% block sw_empty_state_slot_default %}\\n                                <div class=\\\"sw-empty-state__description-content\\\"\\n                                     v-html=\\\"$tc(moduleDescription)\\\">\\n                                </div>\\n                            {% endblock %}\\n                        </slot>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_empty_state_actions %}\\n                    <div v-if=\\\"hasActionSlot\\\" class=\\\"sw-empty-state__actions\\\">\\n                        <slot name=\\\"actions\\\">\\n                            {% block sw_empty_state_slot_actions %}{% endblock %}\\n                        </slot>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_description_list %}\\n    <dl class=\\\"sw-description-list\\\" :style=\\\"descriptionListStyles\\\">\\n        <slot>\\n            {% block sw_description_list_slot_default %}{% endblock %}\\n        </slot>\\n    </dl>\\n{% endblock %}\";","module.exports = \"{% block sw_version %}\\n    <div class=\\\"sw-version\\\">\\n\\n        {% block sw_version_name %}\\n            <div class=\\\"sw-version__title\\\">\\n\\n                {% block sw_version_name_text %}\\n                    {{ $tc('global.sw-admin-menu.textProjectName') }}\\n                {% endblock %}\\n\\n                {% block sw_version_status %}\\n                    <span title=\\\"Shop status: OK\\\" class=\\\"sw-version__status\\\">\\n                        {% block sw_version_status_badge %}\\n                            <sw-color-badge variant=\\\"success\\\" :rounded=\\\"true\\\"></sw-color-badge>\\n                        {% endblock %}\\n                    </span>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_version_info %}\\n            <div class=\\\"sw-version__info\\\">\\n                {% block sw_version_info_text %}\\n                    {{ $tc('global.sw-admin-menu.textShopwareAdmin') }}\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_loader %}\\n    <div class=\\\"sw-loader\\\">\\n        {% block sw_loader_container %}\\n            <div class=\\\"sw-loader__container\\\" :style=\\\"{ width: size, height: size}\\\">\\n                {% block sw_loader_element %}\\n                    <svg class=\\\"sw-loader__element\\\" :width=\\\"size\\\" :height=\\\"size\\\" viewBox=\\\"0 0 66 66\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n                        <circle class=\\\"sw-loader__path\\\" fill=\\\"none\\\" stroke-width=\\\"6\\\" stroke-linecap=\\\"round\\\" cx=\\\"33\\\" cy=\\\"33\\\" r=\\\"30\\\"></circle>\\n                    </svg>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"<transition name=\\\"sw-notifications-slide-fade\\\">\\n    <div v-if=\\\"notifications.length\\\" class=\\\"sw-notifications\\\" :style=\\\"notificationsStyle\\\">\\n        <transition-group name=\\\"sw-notifications-slide-fade\\\">\\n            <sw-alert v-for=\\\"notification in notifications\\\"\\n                      :key=\\\"notification.uuid\\\"\\n                      :title=\\\"notification.title\\\"\\n                      :variant=\\\"notification.variant\\\"\\n                      :system=\\\"notification.system\\\"\\n                      :notificationIndex=\\\"notification.uuid\\\"\\n                      :closable=\\\"true\\\"\\n                      @swAlertClose=\\\"onClose\\\">\\n\\n                <div slot=\\\"default\\\" v-html=\\\"notification.message\\\"></div>\\n            </sw-alert>\\n        </transition-group>\\n    </div>\\n</transition>\\n\";","module.exports = \"{% block sw_color_badge %}\\n    <span class=\\\"sw-color-badge\\\" :class=\\\"variantClass\\\" v-bind=\\\"$attrs\\\" :style=\\\"colorStyle\\\">\\n        <slot>{% block sw_color_badfge_slot_default %}{% endblock %}</slot>\\n    </span>\\n{% endblock %}\";","module.exports = \"{% block sw_grid %}\\n    <div class=\\\"sw-grid\\\" :class=\\\"gridClasses\\\">\\n        <slot name=\\\"content\\\">\\n            {% block sw_grid_slot_content %}\\n                <div class=\\\"sw-grid__content\\\" :class=\\\"gridContentClasses\\\">\\n\\n                    <slot name=\\\"header\\\" v-if=\\\"header\\\">\\n                        {% block sw_grid_slot_header %}\\n                            <div class=\\\"sw-grid__header\\\" :style=\\\"[columnFlex, { paddingRight: `${scrollbarOffset}px` }]\\\">\\n                                {% block sw_grid_slot_header_cell_selectable %}\\n                                    <div class=\\\"sw-grid-column\\\" v-if=\\\"selectable\\\">\\n                                        <div class=\\\"sw-grid__cell-content\\\">\\n                                            <sw-field type=\\\"checkbox\\\" @change=\\\"selectAll\\\"></sw-field>\\n                                        </div>\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_grid_slot_header_cell %}\\n                                    <div :class=\\\"[{ 'sw-grid-column': true, 'is--sortable': column.sortable, 'is--sorted': sort === column.dataIndex }, `sw-grid-column--${column.align}`]\\\"\\n                                         v-for=\\\"column in columns\\\"\\n                                         @click=\\\"onGridCellClick($event, column)\\\">\\n\\n                                        {% block sw_grid_slot_header_cell_content %}\\n                                            <div class=\\\"sw-grid__cell-content\\\">\\n                                                {% block sw_grid_slot_header_cell_icon_label %}\\n                                                    <span v-if=\\\"column.iconLabel\\\" class=\\\"sw-grid__cell-label\\\">\\n                                                        <sw-icon :name=\\\"column.iconLabel\\\" :title=\\\"column.label\\\"></sw-icon>\\n                                                    </span>\\n                                                {% endblock %}\\n\\n                                                {% block sw_grid_slot_header_cell_label %}\\n                                                    <span v-else-if=\\\"column.label\\\" class=\\\"sw-grid__cell-label\\\">{{ column.label }}</span>\\n                                                {% endblock %}\\n\\n                                                {% block sw_grid_slot_header_cell_sortable %}\\n                                                    <span class=\\\"sw-grid_cell-sortable\\\" v-if=\\\"column.sortable && sort === column.dataIndex\\\">\\n                                                        <sw-icon name=\\\"small-arrow-small-down\\\" size=\\\"16px\\\" v-if=\\\"sortDir === 'ASC'\\\"></sw-icon>\\n                                                        <sw-icon name=\\\"small-arrow-small-up\\\" size=\\\"16px\\\" v-else></sw-icon>\\n                                                    </span>\\n                                                {% endblock %}\\n                                            </div>\\n                                        {% endblock %}\\n                                    </div>\\n                                </div>\\n                            {% endblock %}\\n                        {% endblock %}\\n                    </slot>\\n\\n                    <slot name=\\\"body\\\">\\n                        {% block sw_grid_slot_body %}\\n                            <div class=\\\"sw-grid__body\\\" ref=\\\"swGridBody\\\">\\n\\n                                <slot name=\\\"items\\\" v-for=\\\"item in items\\\">\\n                                    {% block sw_grid_body_slot_items %}\\n                                        <sw-grid-row class=\\\"sw-grid__item\\\"\\n                                                     :style=\\\"columnFlex\\\"\\n                                                     :item=\\\"item\\\"\\n                                                     :class=\\\"{ 'is--selected': isSelected(item.id) }\\\">\\n\\n                                            {% block sw_grid_body_item_selectable %}\\n                                                <div class=\\\"sw-grid-column\\\" v-if=\\\"selectable\\\">\\n                                                    <div class=\\\"sw-grid__cell-content\\\">\\n                                                        <sw-field type=\\\"checkbox\\\" :value=\\\"isSelected(item.id)\\\" @change=\\\"selectItem($event, item)\\\"></sw-field>\\n                                                    </div>\\n                                                </div>\\n                                            {% endblock %}\\n\\n                                            <slot name=\\\"columns\\\" :item=\\\"item\\\">\\n                                                {% block sw_grid_slot_columns %}{% endblock %}\\n                                            </slot>\\n                                        </sw-grid-row>\\n                                    {% endblock %}\\n                                </slot>\\n                            </div>\\n                        {% endblock %}\\n                    </slot>\\n\\n                    {% block sw_grid_pagination %}\\n                        <div class=\\\"sw-grid__pagination\\\" v-if=\\\"hasPaginationSlot\\\">\\n                            <slot name=\\\"pagination\\\">{% block sw_grid_slot_pagination %}{% endblock %}</slot>\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </slot>\\n\\n        <slot name=\\\"sidebar\\\">{% block sw_grid_slot_sidebar %}{% endblock %}</slot>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_grid_column %}\\n    <div class=\\\"sw-grid-column sw-grid__cell\\\" :class=\\\"'sw-grid-column--' + align\\\" v-on=\\\"$listeners\\\">\\n        {% block sw_grid_column_content %}\\n            <div class=\\\"sw-grid__cell-content\\\" :class=\\\"{ 'is--truncate': truncate }\\\">\\n                <slot>{% block sw_grid_column_slot_default %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_grid_column_editing %}\\n            <div class=\\\"sw-grid__cell-inline-editing\\\">\\n                <slot name=\\\"inline-edit\\\">{% block sw_grid_column_slot_inline_edit %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_grid_row %}\\n    <div class=\\\"sw-grid-row\\\" @dblclick=\\\"onInlineEditStart($event.currentTarget)\\\" ref=\\\"swGridRow\\\">\\n        {% block sw_grid_row_actions %}\\n            <div class=\\\"sw-grid-row__actions\\\">\\n                <slot name=\\\"actions\\\">\\n                    {% block sw_grid_row_slot_actions %}\\n                        <sw-button @click=\\\"onInlineEditCancel\\\" size=\\\"small\\\">\\n                            {{ $tc('global.sw-grid-row.buttonInlineEditCancel') }}\\n                        </sw-button>\\n                        <sw-button variant=\\\"primary\\\" @click=\\\"onInlineEditFinish\\\" size=\\\"small\\\">\\n                            {{ $tc('global.sw-grid-row.buttonInlineEditSave') }}\\n                        </sw-button>\\n                    {% endblock %}\\n                </slot>\\n            </div>\\n        {% endblock %}\\n\\n        <slot>{% block sw_grid_row_slot_default %}{% endblock %}</slot>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_pagination %}\\n    <div class=\\\"sw-pagination\\\">\\n        {% block sw_pagination_page_prev %}\\n            <button :disabled=\\\"currentPage === 1\\\" @click=\\\"prevPage\\\" class=\\\"sw-pagination__page-button\\\">\\n                <sw-icon name=\\\"small-arrow-medium-left\\\" small />\\n            </button>\\n        {% endblock %}\\n\\n        {% block sw_pagination_page_list %}\\n            <ul class=\\\"sw-pagination__list\\\">\\n                {% block sw_pagination_page_list_item %}\\n                    <li v-for=\\\"(pageNum, index) in displayedPages\\\" :key=\\\"index\\\" class=\\\"sw-pagination__list-item\\\">\\n                        {% block sw_pagination_page_list_item_button %}\\n                            <button v-if=\\\"typeof(pageNum) === 'number'\\\"\\n                                    class=\\\"sw-pagination__list-button\\\"\\n                                    :class=\\\"{ 'is-active': currentPage === pageNum }\\\"\\n                                    @click=\\\"changePageByPageNumber(pageNum)\\\">\\n                                {{ pageNum }}\\n                            </button>\\n                        {% endblock %}\\n\\n                        {% block sw_pagination_page_list_item_separator %}\\n                            <span class=\\\"sw-pagination__list-separator\\\" v-else>\\n                                {{ pageNum }}\\n                            </span>\\n                        {% endblock %}\\n                    </li>\\n                {% endblock %}\\n            </ul>\\n        {% endblock %}\\n\\n        {% block sw_pagination_page_next %}\\n            <button :disabled=\\\"currentPage === maxPage\\\" @click=\\\"nextPage\\\" class=\\\"sw-pagination__page-button\\\">\\n                <sw-icon name=\\\"small-arrow-medium-right\\\" small />\\n            </button>\\n        {% endblock %}\\n\\n        {% block sw_pagination_per_page_selection %}\\n            <div class=\\\"sw-pagination__per-page\\\">\\n                <sw-field type=\\\"select\\\" name=\\\"perPage\\\" :label=\\\"$tc('global.sw-pagination.labelItemsPerPage')\\\" v-model=\\\"perPage\\\" @change=\\\"onPageSizeChange\\\">\\n                    <option slot=\\\"options\\\" v-for=\\\"step in steps\\\" :value=\\\"step\\\">{{ step }}</option>\\n                </sw-field>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_field %}\\n    <div class=\\\"sw-field\\\"\\n         @click=\\\"onClick\\\"\\n         :class=\\\"fieldClasses\\\">\\n\\n        <!-- Label -->\\n        {% block sw_field_label %}\\n            <label v-if=\\\"label\\\" :for=\\\"name\\\">\\n                <slot name=\\\"label\\\">{{ label }}</slot>\\n            </label>\\n        {% endblock %}\\n\\n        {% block sw_field_input %}\\n            <div class=\\\"sw-field__input\\\">\\n\\n                <!-- Textarea -->\\n                {% block sw_field_input_textarea %}\\n                    <textarea v-if=\\\"type === 'textarea'\\\"\\n                              :id=\\\"id\\\"\\n                              :name=\\\"name\\\"\\n                              :placeholder=\\\"placeholder\\\"\\n                              v-html=\\\"currentValue\\\"\\n                              :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                              @input=\\\"onInput\\\"\\n                              @change=\\\"onChange\\\"\\n                              v-bind=\\\"$attrs\\\"\\n                              v-on=\\\"additionalEventListeners\\\">\\n                    </textarea>\\n                {% endblock %}\\n\\n                <!-- Select -->\\n                {% block sw_field_input_select %}\\n                    <div v-else-if=\\\"type === 'select' || type === 'combo'\\\" class=\\\"sw-field__select\\\" >\\n                        {% block sw_field_input_select_field %}\\n                            <select :id=\\\"id\\\"\\n                                    :name=\\\"name\\\"\\n                                    :value=\\\"currentValue\\\"\\n                                    :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                                    :class=\\\"{ 'is--placeholder': currentValue === null }\\\"\\n                                    @input=\\\"onInput\\\"\\n                                    @change=\\\"onChange\\\"\\n                                    v-if=\\\"$slots.options && $slots.options.length\\\"\\n                                    v-bind=\\\"$attrs\\\"\\n                                    v-on=\\\"additionalEventListeners\\\">\\n\\n                                {% block sw_field_input_select_field_placeholder_option %}\\n                                    <option class=\\\"sw-field__placeholder-option\\\" v-if=\\\"placeholder\\\" :value=\\\"null\\\">{{ placeholder }}</option>\\n                                {% endblock %}\\n\\n                                {% block sw_field_input_select_field_options %}\\n                                    <slot name=\\\"options\\\">\\n                                        {% block sw_field_slot_options %}\\n                                            <template v-if=\\\"options.length\\\">\\n                                                <option v-for=\\\"option in options\\\" :value=\\\"option.value\\\">{{ option.label }}</option>\\n                                            </template>\\n                                        {% endblock %}\\n                                    </slot>\\n                                {% endblock %}\\n                            </select>\\n                        {% endblock %}\\n\\n                        {% block sw_field_input_select_field_load_placeholder %}\\n                            <div class=\\\"sw-field__select-load-placeholder\\\" v-else>\\n                                <sw-loader size=\\\"20px\\\"></sw-loader>\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_field_input_select_field_icon %}\\n                            <sw-icon name=\\\"small-arrow-medium-down\\\" small decorative></sw-icon>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                <!-- Radio -->\\n                {% block sw_field_input_radio %}\\n                    <div v-else-if=\\\"type === 'radio'\\\" class=\\\"sw-field__radio-group\\\">\\n\\n                        {% block sw_field_input_radio_options %}\\n                            <slot name=\\\"radio-options\\\">\\n                                {% block sw_field_slot_radio_options %}\\n                                    <template v-if=\\\"options.length\\\">\\n                                        <div class=\\\"sw-field__radio-option\\\" v-for=\\\"(option, index) in options\\\">\\n                                            <div class=\\\"sw-field__radio-input\\\">\\n                                                <input type=\\\"radio\\\"\\n                                                       :name=\\\"name\\\"\\n                                                       :id=\\\"`${name}-${index}`\\\"\\n                                                       :value=\\\"option.value\\\"\\n                                                       :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                                                       :checked=\\\"currentValue === option.value ? 'checked' : false\\\"\\n                                                       @input=\\\"onInput\\\"\\n                                                       @change=\\\"onChange\\\"\\n                                                       v-bind=\\\"$attrs\\\"\\n                                                       v-on=\\\"additionalEventListeners\\\">\\n\\n                                                <div class=\\\"sw-field__radio-state\\\"></div>\\n                                            </div>\\n\\n                                            <label :for=\\\"`${name}-${index}`\\\">{{ option.label }}</label>\\n                                        </div>\\n                                    </template>\\n                                {% endblock %}\\n                            </slot>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                <!-- Checkbox -->\\n                {% block sw_field_input_checkbox %}\\n                    <div v-else-if=\\\"type === 'checkbox'\\\"\\n                         class=\\\"sw-field__checkbox\\\">\\n\\n                        {% block sw_field_input_checkbox_input %}\\n                            <input type=\\\"checkbox\\\"\\n                                   :id=\\\"id\\\"\\n                                   :name=\\\"name\\\"\\n                                   :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                                   :checked=\\\"currentValue ? 'checked' : false\\\"\\n                                   @input=\\\"onInput\\\"\\n                                   @change=\\\"onChange\\\"\\n                                   v-bind=\\\"$attrs\\\"\\n                                   v-on=\\\"additionalEventListeners\\\">\\n                        {% endblock %}\\n\\n                        {% block sw_field_input_checkbox_state %}\\n                            <div class=\\\"sw-field__checkbox-state\\\">\\n                                <sw-icon name=\\\"small-default-checkmark-line-small\\\" size=\\\"16\\\"></sw-icon>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                <!-- Switch -->\\n                {% block sw_field_input_switch %}\\n                    <div v-else-if=\\\"type === 'switch'\\\" class=\\\"sw-field__switch\\\">\\n\\n                        {% block sw_field_input_switch_input %}\\n                            <input type=\\\"checkbox\\\"\\n                                   :id=\\\"id\\\"\\n                                   :name=\\\"name\\\"\\n                                   :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                                   :checked=\\\"currentValue ? 'checked' : false\\\"\\n                                   @input=\\\"onInput\\\"\\n                                   @change=\\\"onChange\\\"\\n                                   v-bind=\\\"$attrs\\\"\\n                                   v-on=\\\"additionalEventListeners\\\">\\n                        {% endblock %}\\n\\n                        {% block sw_field_input_switch_state %}\\n                            <div class=\\\"sw-field__switch-state\\\">\\n                                <div class=\\\"sw-field__switch-state-knob\\\"></div>\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                <!-- Date -->\\n                {% block sw_field_input_datetime %}\\n                    <input v-else-if=\\\"type === 'datetime' || type === 'datetime-local'\\\"\\n                           type=\\\"datetime-local\\\"\\n                           :id=\\\"id\\\"\\n                           :name=\\\"name\\\"\\n                           :value=\\\"currentValue\\\"\\n                           :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                           @input=\\\"onInput\\\"\\n                           @change=\\\"onChange\\\"\\n                           v-bind=\\\"$attrs\\\"\\n                           v-on=\\\"additionalEventListeners\\\">\\n                {% endblock %}\\n\\n                <!-- Password -->\\n                {% block sw_field_input_password %}\\n                    <template v-else-if=\\\"type === 'password'\\\">\\n                        {% block sw_field_input_password_input %}\\n                            <input :type=\\\"showPassword ? 'text' : 'password'\\\"\\n                                   :id=\\\"id\\\"\\n                                   :name=\\\"name\\\"\\n                                   :placeholder=\\\"placeholder\\\"\\n                                   :value=\\\"currentValue\\\"\\n                                   :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                                   @input=\\\"onInput\\\"\\n                                   @change=\\\"onChange\\\"\\n                                   v-bind=\\\"$attrs\\\"\\n                                   v-on=\\\"additionalEventListeners\\\">\\n                        {% endblock %}\\n\\n\\n                        {% block sw_field_toggle_password_visibility %}\\n                            <span v-if=\\\"passwordToggleAble\\\" @click=\\\"onTogglePasswordVisibility\\\"\\n                                  :title=\\\"showPassword ? $tc('global.sw-field.titleHidePassword') : $tc('global.sw-field.titleShowPassword')\\\"\\n                                  class=\\\"sw-field__toggle-password-visibility\\\">\\n                                {% block sw_field_hide_password_icon %}\\n                                    <sw-icon v-if=\\\"showPassword\\\" name=\\\"default-eye-crossed\\\" small></sw-icon>\\n                                {% endblock %}\\n\\n                                {% block sw_field_show_password_icon %}\\n                                    <sw-icon v-else name=\\\"default-eye-open\\\" small></sw-icon>\\n                                {% endblock %}\\n                            </span>\\n                        {% endblock %}\\n                    </template>\\n                {% endblock %}\\n\\n                <!-- Default Input -->\\n                {% block sw_field_input_default %}\\n                    <input v-else\\n                           ref=\\\"textfield\\\"\\n                           :type=\\\"type\\\"\\n                           :id=\\\"id\\\"\\n                           :name=\\\"name\\\"\\n                           :placeholder=\\\"placeholder\\\"\\n                           :value=\\\"currentValue\\\"\\n                           :disabled=\\\"disabled ? 'disabled' : false\\\"\\n                           @input=\\\"onInput\\\"\\n                           @change=\\\"onChange\\\"\\n                           v-bind=\\\"$attrs\\\"\\n                           v-on=\\\"additionalEventListeners\\\">\\n                {% endblock %}\\n\\n                <!-- Suffix -->\\n                {% block sw_field_input_suffix %}\\n                    <span v-if=\\\"hasSuffix\\\" class=\\\"sw-field__suffix\\\">\\n                        <slot name=\\\"suffix\\\">\\n                            {% block sw_field_slot_suffix %}\\n                                {{ suffix }}\\n                            {% endblock %}\\n                        </slot>\\n                    </span>\\n                {% endblock %}\\n\\n                <!-- CopyAble -->\\n                {% block sw_field_input_copySuffix %}\\n                    <sw-button v-if=\\\"copyAble && type === 'text'\\\"\\n                               class=\\\"sw-field__copy-button\\\"\\n                               @click=\\\"copyToClipboard\\\">\\n                        {% block sw_field_button_copySuffix %}\\n                            <sw-icon name=\\\"small-copy\\\" size=\\\"16px\\\"></sw-icon>\\n                        {% endblock %}\\n                    </sw-button>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_field_help_text %}\\n            <div class=\\\"sw-field__help\\\" v-if=\\\"helpText\\\" :for=\\\"name\\\">\\n                <slot name=\\\"help-text\\\">\\n                    {% block sw_field_slot_help_text %}\\n                        {{ helpText }}\\n                    {% endblock %}\\n                </slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_field_error %}\\n            <div class=\\\"sw-field__error\\\" v-if=\\\"hasError\\\">\\n                <slot name=\\\"error\\\">\\n                    {% block sw_field_slot_error %}\\n                        <span v-if=\\\"errorMessage\\\">{{ errorMessage }}</span>\\n                        <span v-if=\\\"formError.detail\\\">{{ formError.detail }}</span>\\n                    {% endblock %}\\n                </slot>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_price_field %}\\n    <div class=\\\"sw-price-field\\\">\\n\\n        {% block sw_price_field_gross %}\\n            <sw-field type=\\\"number\\\"\\n                      :label=\\\"$tc('global.sw-price-field.labelPriceGross')\\\"\\n                      :suffix=\\\"currency.symbol\\\"\\n                      min=\\\"0.00\\\"\\n                      step=\\\"0.01\\\"\\n                      :validation=\\\"validation\\\"\\n                      @input=\\\"onPriceGrossChange\\\"\\n                      @change=\\\"onPriceGrossChange\\\"\\n                      v-bind=\\\"$attrs\\\"\\n                      v-model=\\\"price.gross\\\">\\n            </sw-field>\\n        {% endblock %}\\n\\n        {% block sw_price_field_lock_button %}\\n            <button class=\\\"sw-price-field__lock\\\" :class=\\\"{ 'is--locked': price.linked }\\\" @click=\\\"onLockSwitch\\\">\\n                <sw-icon name=\\\"default-lock-closed\\\" size=\\\"16\\\" v-if=\\\"price.linked\\\"></sw-icon>\\n                <sw-icon name=\\\"default-lock-open\\\" size=\\\"16\\\" v-else></sw-icon>\\n            </button>\\n        {% endblock %}\\n\\n        {% block sw_price_field_net %}\\n            <sw-field type=\\\"number\\\"\\n                      :label=\\\"$tc('global.sw-price-field.labelPriceNet')\\\"\\n                      :suffix=\\\"currency.symbol\\\"\\n                      min=\\\"0.00\\\"\\n                      step=\\\"0.01\\\"\\n                      :validation=\\\"validation\\\"\\n                      @input=\\\"onPriceNetChange\\\"\\n                      @change=\\\"onPriceNetChange\\\"\\n                      v-bind=\\\"$attrs\\\"\\n                      v-model=\\\"price.net\\\">\\n            </sw-field>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_multi_select %}\\n    <div class=\\\"sw-multi-select\\\"\\n         :class=\\\"multiSelectClasses\\\"\\n         ref=\\\"swMultiSelect\\\"\\n         @click=\\\"setFocus\\\"\\n         @keyup.esc=\\\"closeResultList\\\"\\n         @keyup.enter.prevent=\\\"addSelectionOnEnter\\\"\\n         @keydown.up.prevent=\\\"navigateUpResults\\\"\\n         @keydown.down.prevent=\\\"navigateDownResults\\\">\\n\\n        {% block sw_multi_select_label %}\\n            <label v-if=\\\"label\\\" :for=\\\"id\\\" class=\\\"sw-multi-select__label\\\">{{ label }}</label>\\n        {% endblock %}\\n\\n        {% block sw_multi_select_inner %}\\n            <div class=\\\"sw-multi-select__inner\\\">\\n\\n                {% block sw_multi_select_selections %}\\n                    <transition-group name=\\\"sw-multi-select-magnify\\\"\\n                                      tag=\\\"ul\\\"\\n                                      class=\\\"sw-multi-select__selections\\\"\\n                                      mode=\\\"out-in\\\">\\n\\n                        {% block sw_multi_select_selection_item %}\\n                            <li class=\\\"sw-multi-select__selection-item\\\"\\n                                :class=\\\"{ 'is--default': (selection.id === defaultItemId), 'is--clickAble': (defaultItemId) }\\\"\\n                                @click.stop=\\\"changeDefaultItemId(selection.id)\\\"\\n                                v-for=\\\"selection in selections\\\"\\n                                :key=\\\"selection.id\\\"\\n                                :data-id=\\\"selection.id\\\">\\n\\n                                {% block sw_multi_select_selection_text_holder %}\\n                                    <span class=\\\"sw-multi-select__selection-text\\\">\\n                                        {% block sw_multi_select_selection_text %}\\n                                            {{ selection.name }}\\n                                        {% endblock %}\\n                                    </span>\\n                                {% endblock %}\\n\\n                                {% block sw_multi_select_selection_dismiss %}\\n                                    <button class=\\\"sw-multi-select__selection-dismiss\\\"\\n                                            :title=\\\"$tc('global.sw-multi-select.buttonDismiss')\\\"\\n                                            @click.prevent.stop=\\\"onDismissSelection(selection.id)\\\">\\n                                        {% block sw_multi_select_selection_dismiss_icon %}\\n                                            <sw-icon name=\\\"small-default-x-line-medium\\\"\\n                                                     :class=\\\"{ 'is--default': (selection.id === defaultItemId) }\\\">\\n                                            </sw-icon>\\n                                        {% endblock %}\\n                                    </button>\\n                                {% endblock %}\\n                            </li>\\n                        {% endblock %}\\n\\n                        {% block sw_multi_select_list_item_input %}\\n                            <li class=\\\"sw-multi-select__selection-item-input\\\" key=\\\"listInput\\\">\\n                                {% block sw_multi_select_input %}\\n                                    <input ref=\\\"swMultiSelectInput\\\"\\n                                           class=\\\"sw-multi-select__input\\\"\\n                                           type=\\\"text\\\"\\n                                           :placeholder=\\\"placeholder\\\"\\n                                           v-model=\\\"searchTerm\\\"\\n                                           @input=\\\"onSearchTermChange\\\"\\n                                           @focus=\\\"openResultList\\\"\\n                                           @keydown.delete=\\\"dismissLastSelection\\\">\\n                                {% endblock %}\\n                            </li>\\n                        {% endblock %}\\n                    </transition-group>\\n                {% endblock %}\\n\\n                {% block sw_multi_select_loader %}\\n                    <sw-loader v-if=\\\"isLoading\\\" size=\\\"20px\\\"></sw-loader>\\n                {% endblock %}\\n\\n                {% block sw_multi_select_results_transition %}\\n                    <transition name=\\\"sw-multi-select-fade-down\\\">\\n                        {% block sw_multi_select_results %}\\n                            <div class=\\\"sw-multi-select__results\\\" v-if=\\\"isExpanded\\\">\\n\\n                                {% block sw_multi_select_results_list %}\\n                                    <ul v-if=\\\"results.length > 0\\\" class=\\\"sw-multi-select__results-list\\\">\\n                                        {% block sw_multi_select_result_item %}\\n                                            <li v-for=\\\"(result, index) in results\\\"\\n                                                class=\\\"sw-multi-select__result-item\\\"\\n                                                :class=\\\"{ 'is--active': (index === activeResultPosition) }\\\"\\n                                                :data-id=\\\"result.id\\\"\\n                                                @mouseover=\\\"setActiveResultPosition(index)\\\"\\n                                                @click=\\\"addSelection(result)\\\">\\n\\n                                                {% block sw_multi_select_result_item_text_holder %}\\n                                                    <span class=\\\"sw-multi-select__result-item-text\\\">\\n                                                        {% block sw_multi_select_result_item_text %}\\n                                                            {{ result.name }}\\n                                                        {% endblock %}\\n                                                    </span>\\n                                                {% endblock %}\\n\\n                                                {% block sw_multi_select_result_item_icon_transition %}\\n                                                    <transition name=\\\"sw-multi-select-appear\\\">\\n                                                        {% block sw_multi_select_result_item_icon %}\\n                                                            <sw-icon v-if=\\\"isInSelections(result)\\\"\\n                                                                     name=\\\"small-default-checkmark-line-medium\\\"\\n                                                                     size=\\\"16px\\\">\\n                                                            </sw-icon>\\n                                                        {% endblock %}\\n                                                    </transition>\\n                                                {% endblock %}\\n                                            </li>\\n                                        {% endblock %}\\n                                    </ul>\\n                                {% endblock %}\\n\\n                                {% block sw_multi_select_results_empty %}\\n                                    <div class=\\\"sw-multi-select__results-empty-message\\\" v-else>\\n                                        {% block sw_multi_select_results_empty_icon %}\\n                                            <sw-icon name=\\\"default-action-search\\\" size=\\\"20px\\\"></sw-icon>\\n                                        {% endblock %}\\n\\n                                        {% block sw_multi_select_results_empty_text %}\\n                                            {{ $tc('global.sw-multi-select.messageNoResults', searchTerm, { term: searchTerm }) }}\\n                                        {% endblock %}\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </transition>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_text_editor %}\\n    <div class=\\\"sw-text-editor\\\">\\n\\n        {% block sw_text_editor_label %}\\n            <div class=\\\"sw-text-editor__label\\\" v-if=\\\"label.length\\\">{{ label }}</div>\\n        {% endblock %}\\n\\n        {% block sw_text_editor_editor %}\\n            <div class=\\\"editor\\\" ref=\\\"editor\\\"></div>\\n        {% endblock %}\\n\\n        {% block sw_text_editor_sub_toolbar %}\\n            <div class=\\\"editor__sub-toolbar\\\">\\n                <sw-container grid=\\\"1fr\\\" justify=\\\"right\\\">\\n                    <span class=\\\"editor__text-length\\\">{{ $tc('global.sw-text-editor.labelTextLength', textLength, { count: textLength }) }}</span>\\n                </sw-container>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_tree %}\\n    <div class=\\\"sw-tree\\\">\\n        {% block sw_tree_search %}\\n            <div class=\\\"sw-tree__search\\\">\\n                <sw-icon name=\\\"default-action-search\\\" size=\\\"18\\\"></sw-icon>\\n                <sw-field type=\\\"text\\\" name=\\\"treeSearch\\\" placeholder=\\\"Search\\\" v-model=\\\"currentTreeSearch\\\" @input=\\\"searchItems\\\"></sw-field>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_tree_actions %}\\n            <div class=\\\"sw-tree__actions\\\" v-if=\\\"hasActionSlot\\\">\\n                <slot name=\\\"actions\\\">{% block sw_tree_slot_actions %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_tree_content %}\\n            <div class=\\\"sw-tree__content\\\">\\n                {% block sw_tree_items %}\\n                    <slot name=\\\"items\\\" :treeItems=\\\"treeItems\\\" :sortable=\\\"isSortable\\\" :draggedItem=\\\"draggedItem\\\">\\n                        {% block sw_tree_slot_items %}\\n                            <sw-tree-item v-for=\\\"item in treeItems\\\" :key=\\\"item.id\\\" :item=\\\"item\\\" :sortable=\\\"sortable\\\" :draggedItem=\\\"draggedItem\\\"></sw-tree-item>\\n                        {% endblock %}\\n                    </slot>\\n                {% endblock %}\\n\\n                {% block sw_tree_loader %}\\n                    <sw-loader v-if=\\\"isLoading\\\"></sw-loader>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_tree_item %}\\n    <div class=\\\"sw-tree-item\\\" :class=\\\"styling\\\">\\n\\n        {% block sw_tree_item_element %}\\n            <div class=\\\"sw-tree-item__element\\\" v-on=\\\"sortable ? { pointerenter: onMouseEnter } : {}\\\">\\n                {% block sw_tree_item_element_leaf_icon %}\\n                    <div class=\\\"sw-tree-item__leaf\\\" v-if=\\\"item.childCount <= 0\\\"></div>\\n                {% endblock %}\\n\\n                {% block sw_tree_item_element_toggle %}\\n                    <div class=\\\"sw-tree-item__toggle\\\" @click=\\\"openTreeItem(); getTreeItemChildren(item)\\\" v-else>\\n\\n                        {% block sw_tree_item_element_toggle_loader %}\\n                            <sw-loader v-if=\\\"isLoading\\\" size=\\\"14\\\"></sw-loader>\\n                        {% endblock %}\\n\\n                        {% block sw_tree_item_element_toggle_icon %}\\n                            <sw-icon :name=\\\"opened ? 'small-arrow-small-down' : 'small-arrow-small-right'\\\" size=\\\"18\\\" v-else></sw-icon>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_tree_item_element_selection %}\\n                    <div class=\\\"sw-tree-item__selection\\\">\\n                        <sw-field type=\\\"checkbox\\\"></sw-field>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_tree_item_element_grip %}\\n                    <div class=\\\"sw-tree-item__icon\\\">\\n                        <sw-icon name=\\\"folder-tree-open\\\" multicolor small v-if=\\\"opened\\\"></sw-icon>\\n                        <sw-icon name=\\\"folder-tree\\\" multicolor small v-else></sw-icon>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_tree_item_element_content %}\\n                    <div class=\\\"sw-tree-item__content\\\" v-on=\\\"sortable ? { pointerdown: onDragStart } : {}\\\">\\n                        <slot name=\\\"content\\\" :item=\\\"item\\\" :openTreeItem=\\\"openTreeItem\\\">\\n                            {% block sw_tree_item_slot_content %}\\n                                <span class=\\\"sw-tree-item__label\\\">{{ item.data.name }}</span>\\n                                <span class=\\\"sw-tree-item__child-count\\\" v-if=\\\"item.childCount > 0\\\">{{ item.childCount }}</span>\\n                            {% endblock %}\\n                        </slot>\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_tree_item_element_actions %}\\n                    <div class=\\\"sw-tree-item__actions\\\">\\n                        <slot name=\\\"actions\\\" :item=\\\"item\\\" :openTreeItem=\\\"openTreeItem\\\">\\n                            {% block sw_tree_item_slot_actions %}{% endblock %}\\n                        </slot>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_tree_item_children_transition %}\\n            <transition name=\\\"fade\\\">\\n                {% block sw_tree_item_children_content %}\\n                    <div class=\\\"sw-tree-item__children\\\" v-if=\\\"opened && item.children.length > 0\\\">\\n                        {% block sw_tree_item_children_items %}\\n                            <sw-tree-item v-for=\\\"child in item.children\\\" :key=\\\"child.id\\\" :item=\\\"child\\\" :sortable=\\\"sortable\\\" :draggedItem=\\\"draggedItem\\\">\\n                                {% block sw_tree_item_children_items_slots %}\\n                                    <template slot=\\\"content\\\" slot-scope=\\\"{ item, openTreeItem }\\\">\\n                                        {% block sw_tree_item_children_items_slot_content %}\\n                                            <sw-vnode-renderer :node=\\\"$scopedSlots.content({ item, openTreeItem })\\\" v-if=\\\"$scopedSlots.content\\\"></sw-vnode-renderer>\\n                                            {% block sw_tree_item_children_items_slot_content_default %}\\n                                                <template v-else>\\n                                                    <span class=\\\"sw-tree-item__label\\\">{{ item.data.name }}</span>\\n                                                    <span class=\\\"sw-tree-item__child-count\\\" v-if=\\\"item.childCount > 0\\\">{{ item.childCount }}</span>\\n                                                </template>\\n                                            {% endblock %}\\n                                        {% endblock %}\\n                                    </template>\\n\\n                                    <template slot=\\\"actions\\\" slot-scope=\\\"{ item, openTreeItem }\\\">\\n                                        {% block sw_tree_item_children_items_slot_actions %}\\n                                            <sw-vnode-renderer :node=\\\"$scopedSlots.actions({ item, openTreeItem })\\\" v-if=\\\"$scopedSlots.actions\\\"></sw-vnode-renderer>\\n                                        {% endblock %}\\n                                    </template>\\n                                {% endblock %}\\n                            </sw-tree-item>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </transition>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_context_button %}\\n    <div class=\\\"sw-context-button\\\" @click=\\\"openMenu\\\" ref=\\\"swContextButton\\\">\\n        {% block sw_context_button_button %}\\n            <slot name=\\\"button\\\">\\n                <button class=\\\"sw-context-button__button\\\" :class=\\\"{ 'is--active': showMenu }\\\">\\n                    <sw-icon name=\\\"default-action-more-horizontal\\\" decorative></sw-icon>\\n                </button>\\n            </slot>\\n        {% endblock %}\\n\\n        {% block sw_context_button_menu %}\\n            <sw-context-menu :style=\\\"menuStyles\\\">\\n                <slot>{% block sw_context_button_menu_slot_default %}{% endblock %}</slot>\\n            </sw-context-menu>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_context_menu %}\\n    <div class=\\\"sw-context-menu\\\">\\n        {% block sw_context_menu_content %}\\n            <div class=\\\"sw-context-menu__content\\\">\\n                <slot>{% block sw_context_menu_slot_default %}{% endblock %}</slot>\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_context_menu_item %}\\n    {% block sw_context_menu_item_router_link %}\\n        <router-link v-if=\\\"routerLink\\\"\\n                     :to=\\\"routerLink\\\"\\n                     class=\\\"sw-context-menu-item\\\"\\n                     :class=\\\"contextMenuItemStyles\\\"\\n                     v-on=\\\"contextListeners\\\">\\n            {% block sw_context_menu_item_icon %}\\n                <slot name=\\\"icon\\\">\\n                    {% block sw_context_menu_item_slot_icon %}\\n                        <sw-icon :name=\\\"icon\\\" small v-if=\\\"icon\\\"></sw-icon>\\n                    {% endblock %}\\n                </slot>\\n            {% endblock %}\\n\\n            {% block sw_context_menu_item_text %}\\n                <span class=\\\"sw-context-menu-item__text\\\" :class=\\\"{ 'is--disabled': disabled }\\\">\\n                    <slot>{% block sw_context_menu_item_slot_default %}{% endblock %}</slot>\\n                </span>\\n            {% endblock %}\\n        </router-link>\\n    {% endblock %}\\n\\n    {% block sw_context_menu_item_entry %}\\n        <div v-else\\n             class=\\\"sw-context-menu-item\\\"\\n             :class=\\\"contextMenuItemStyles\\\"\\n             v-on=\\\"contextListeners\\\">\\n            {% block sw_context_menu_item_icon %}\\n                <slot name=\\\"icon\\\">\\n                    {% block sw_context_menu_item_slot_icon %}\\n                        <sw-icon :name=\\\"icon\\\" small v-if=\\\"icon\\\"></sw-icon>\\n                    {% endblock %}\\n                </slot>\\n            {% endblock %}\\n\\n            {% block sw_context_menu_item_text %}\\n                <span class=\\\"sw-context-menu-item__text\\\" :class=\\\"{ 'is--disabled': disabled }\\\">\\n                    <slot>{% block sw_context_menu_item_slot_default %}{% endblock %}</slot>\\n                </span>\\n            {% endblock %}\\n        </div>\\n    {% endblock %}\\n{% endblock %}\";","module.exports = \"<div id=\\\"app\\\">\\n    <sw-notifications ref=\\\"notifications\\\"></sw-notifications>\\n    <router-view></router-view>\\n</div>\";","module.exports = \"{% block sw_desktop %}\\n    <div class=\\\"sw-desktop\\\">\\n\\n        {% block sw_desktop_sidebar %}\\n            <sw-admin-menu></sw-admin-menu>\\n        {% endblock %}\\n\\n        {% block sw_desktop_content %}\\n            <div class=\\\"sw-desktop__content\\\">\\n                {% block sw_desktop_content_view %}\\n                    <router-view></router-view>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_page %}\\n    <div class=\\\"sw-page\\\">\\n\\n        {% block sw_page_search_bar %}\\n            <sw-search-bar>\\n\\n                {% block sw_page_search_bar_type %}\\n                    <template slot=\\\"search-type\\\">\\n                        <slot name=\\\"search-bar-type\\\">\\n                            {% block sw_page_search_bar_type_slot %}{% endblock %}\\n                        </slot>\\n                    </template>\\n                {% endblock %}\\n\\n            </sw-search-bar>\\n        {% endblock %}\\n\\n        {% block sw_page_smart_container %}\\n            <div class=\\\"sw-page__container\\\" :class=\\\"pageContainerClasses\\\">\\n\\n                {% block sw_page_smart_bar %}\\n                    <div v-if=\\\"showSmartBar\\\" class=\\\"sw-page__smart-bar\\\" :style=\\\"smartBarStyles\\\">\\n\\n                        {% block sw_page_smart_bar_back_btn %}\\n                            <slot name=\\\"smart-bar-back\\\">\\n                                {% block sw_page_slot_smart_bar_back %}\\n                                    <router-link :to=\\\"{ name: parentRoute }\\\" v-if=\\\"parentRoute\\\"\\n                                                 :style=\\\"{ 'color': pageColor }\\\" class=\\\"smart-bar__back-btn\\\">\\n                                        <sw-icon name=\\\"small-arrow-large-left\\\" size=\\\"16\\\"></sw-icon>\\n                                        <sw-icon :name=\\\"module.icon\\\" v-if=\\\"module && module.icon\\\"></sw-icon>\\n                                    </router-link>\\n                                {% endblock %}\\n                            </slot>\\n                        {% endblock %}\\n\\n                        {% block sw_page_smart_bar_content %}\\n                            <div class=\\\"smart-bar__content\\\">\\n\\n                                {% block sw_page_smart_bar_content_header %}\\n                                    <div class=\\\"smart-bar__header\\\">\\n                                        <slot name=\\\"smart-bar-header\\\">\\n                                            {% block sw_page_slot_smart_bar_header %}\\n                                                <h2 v-if=\\\"module && module.name\\\">\\n                                                    {{ module.name }}\\n                                                </h2>\\n                                            {% endblock %}\\n                                        </slot>\\n                                    </div>\\n                                {% endblock %}\\n\\n                                {% block sw_page_smart_bar_content_actions %}\\n                                    <div class=\\\"smart-bar__actions\\\">\\n                                        <slot name=\\\"smart-bar-actions\\\">\\n                                            {% block sw_page_slot_smart_bar_actions %}{% endblock %}\\n                                        </slot>\\n                                    </div>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_page_content %}\\n                    <div class=\\\"sw-page__content\\\" ref=\\\"swPageContent\\\">\\n                        <slot name=\\\"content\\\">\\n                            {% block sw_page_slot_content %}{% endblock %}\\n                        </slot>\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_card_view %}\\n    <div class=\\\"sw-card-view\\\">\\n        <slot>\\n            {% block sw_card_view_slot_default %}{% endblock %}\\n        </slot>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_admin_menu_item %}\\n    <li class=\\\"sw-admin-menu__navigation-list-item\\\"\\n        :class=\\\"getItemName(entry.id || entry.path)\\\"\\n        @click=\\\"$emit('menuItemClicked', entry, $event.currentTarget)\\\"\\n        @mouseover=\\\"$emit('menuItemHovered', entry, $event.currentTarget)\\\">\\n\\n        {% block sw_admin_menu_item_router_link %}\\n            <router-link v-if=\\\"entry.path\\\"\\n                         class=\\\"sw-admin-menu__navigation-link\\\"\\n                         :to=\\\"getLinkToProp\\\">\\n\\n                {% block sw_admin_menu_item_icon %}\\n                    <sw-icon v-if=\\\"displayIcon\\\"\\n                             :size=\\\"iconSize\\\"\\n                             class=\\\"sw-admin-menu__navigation-link-icon\\\"\\n                             :name=\\\"getIconName(entry.icon)\\\"\\n                             :style=\\\"{ 'color': entry.color }\\\">\\n                    </sw-icon>\\n                {% endblock %}\\n\\n                {% block sw_admin_menu_item_text %}\\n                    <span :class=\\\"collapsibleText ? 'collapsible-text' : ''\\\">\\n                        {{ getEntryLabel }}\\n                    </span>\\n                {% endblock %}\\n            </router-link>\\n        {% endblock %}\\n\\n        {% block sw_admin_menu_item_external_link %}\\n            <a v-else-if=\\\"entry.link\\\"\\n               :href=\\\"entry.link\\\"\\n               :target=\\\"entry.target\\\"\\n               :title=\\\"$tc(entry.label)\\\"\\n               class=\\\"sw-admin-menu__navigation-link\\\">\\n\\n                {% block sw_admin_menu_item_icon %}\\n                    <sw-icon v-if=\\\"displayIcon\\\"\\n                             :size=\\\"iconSize\\\"\\n                             class=\\\"sw-admin-menu__navigation-link-icon\\\"\\n                             :name=\\\"getIconName(entry.icon)\\\"\\n                             :style=\\\"{ 'color': entry.color }\\\">\\n                    </sw-icon>\\n                {% endblock %}\\n\\n                {% block sw_admin_menu_item_text %}\\n                    <span :class=\\\"collapsibleText ? 'collapsible-text' : ''\\\">\\n                        {{ $tc(entry.label) }}\\n                    </span>\\n                {% endblock %}\\n            </a>\\n        {% endblock %}\\n\\n        {% block sw_admin_menu_item_navigation_link %}\\n            <span v-else class=\\\"sw-admin-menu__navigation-link\\\">\\n\\n                {% block sw_admin_menu_item_icon %}\\n                    <sw-icon v-if=\\\"displayIcon\\\"\\n                             :size=\\\"iconSize\\\"\\n                             class=\\\"sw-admin-menu__navigation-link-icon\\\"\\n                             :name=\\\"getIconName(entry.icon)\\\"\\n                             :style=\\\"{ 'color': entry.color }\\\">\\n                    </sw-icon>\\n                {% endblock %}\\n\\n                {% block sw_admin_menu_item_text %}\\n                     <span :class=\\\"collapsibleText ? 'collapsible-text' : ''\\\">\\n                        {{ $tc(entry.label) }}\\n                     </span>\\n                {% endblock %}\\n            </span>\\n        {% endblock %}\\n\\n        {% block sw_sidebar_sub_items_list %}\\n            <ul v-if=\\\"sidebarExpanded\\\" class=\\\"sw-admin-menu__sub-navigation-list\\\">\\n                <sw-admin-menu-item v-for=\\\"entry in entry.children\\\"\\n                                 :entry=\\\"entry\\\"\\n                                 :key=\\\"entry.id || entry.path\\\"\\n                                 :displayIcon=\\\"false\\\">\\n                </sw-admin-menu-item>\\n            </ul>\\n        {% endblock %}\\n    </li>\\n{% endblock %}\";","module.exports = \"{% block sw_admin_menu %}\\n    <aside class=\\\"sw-admin-menu\\\"\\n           :class=\\\"adminMenuClasses\\\"\\n           :aria-expanded=\\\"isExpanded ? 'true' : 'false'\\\">\\n\\n        {% block sw_admin_menu_header %}\\n            <div class=\\\"sw-admin-menu__header\\\">\\n\\n                {% block sw_admin_menu_header_logo %}\\n                    <div class=\\\"sw-admin-menu__header-logo\\\" role=\\\"img\\\"></div>\\n                {% endblock %}\\n\\n                {% block sw_admin_menu_header_version %}\\n                    <sw-version class=\\\"collapsible-text\\\"></sw-version>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_admin_menu_body %}\\n            <div class=\\\"sw-admin-menu__body\\\" ref=\\\"swAdminMenuBody\\\" :style=\\\"scrollbarOffsetStyle\\\">\\n\\n                {% block sw_admin_menu_navigation_main %}\\n                    <nav class=\\\"sw-admin-menu__navigation\\\">\\n\\n                        {% block sw_admin_menu_navigation_main_list %}\\n                            <ul class=\\\"sw-admin-menu__navigation-list\\\">\\n\\n                                {% block sw_admin_menu_navigation_main_items %}\\n                                    <sw-admin-menu-item v-for=\\\"entry in mainMenuEntries\\\"\\n                                                        @menuItemHovered=\\\"openFlyout\\\"\\n                                                        @menuItemClicked=\\\"openSubMenu\\\"\\n                                                        :sidebarExpanded=\\\"isExpanded\\\"\\n                                                        :entry=\\\"entry\\\"\\n                                                        :key=\\\"entry.id || entry.path\\\"\\n                                                        :class=\\\"entry.label\\\">\\n                                    </sw-admin-menu-item>\\n                                {% endblock %}\\n\\n                            </ul>\\n                        {% endblock %}\\n\\n                    </nav>\\n                {% endblock %}\\n\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_admin_menu_footer %}\\n            <div class=\\\"sw-admin-menu__footer\\\">\\n\\n                {% block sw_admin_menu_toggle_sidebar %}\\n                    <button class=\\\"sw-admin-menu__toggle\\\" @click=\\\"onToggleSidebar\\\">\\n\\n                        {% block sw_admin_menu_toggle_sidebar_icon %}\\n                            <sw-icon :name=\\\"sidebarCollapseIcon\\\" small></sw-icon>\\n                        {% endblock %}\\n\\n                        {% block sw_admin_menu_toggle_sidebar_text %}\\n                            <span class=\\\"collapsible-text\\\">{{ $tc('global.sw-admin-menu.linkMinimizeMenu') }}</span>\\n                        {% endblock %}\\n\\n                    </button>\\n                {% endblock %}\\n\\n                {% block sw_admin_menu_user_actions_toggle %}\\n                    <div class=\\\"sw-admin-menu__user-actions-toggle\\\"\\n                         :class=\\\"{'is--active': isUserActionsActive}\\\"\\n                         @click=\\\"onToggleUserActions\\\"\\n                         @mouseenter=\\\"openUserActions\\\">\\n\\n                        {% block sw_admin_menu_user_actions_avatar %}\\n                            <sw-avatar class=\\\"sw-admin-menu__avatar\\\" :user=\\\"user\\\" useGravatar></sw-avatar>\\n                        {% endblock %}\\n\\n                        {% block sw_admin_menu_user_actions_attributes %}\\n                            <div class=\\\"sw-admin-menu__user-attributes collapsible-text\\\">\\n                                <div class=\\\"sw-admin-menu__user-name\\\">{{ userName }}</div>\\n                                <div class=\\\"sw-admin-menu__user-type\\\">Administrator</div>\\n\\n                                {% block sw_admin_menu_user_actions_toggle_icon %}\\n                                    <sw-icon :name=\\\"userActionsToggleIcon\\\" class=\\\"sw-admin-menu__user-actions-indicator\\\" small></sw-icon>\\n                                {% endblock %}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_admin_menu_user_actions %}\\n                    <div class=\\\"sw-admin-menu__user-actions\\\"\\n                         :class=\\\"{'is--active': isUserActionsActive}\\\"\\n                         @mouseleave=\\\"closeUserActions\\\">\\n\\n                        {% block sw_admin_menu_user_actions_label %}\\n                            <div v-if=\\\"!isExpanded\\\" class=\\\"sw-admin-menu__user-actions-label\\\">\\n                                {{ userName }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_admin_menu_user_actions_list %}\\n                            <ul class=\\\"sw-admin-menu__navigation-list\\\">\\n\\n                                {% block sw_admin_menu_user_actions_items %}\\n\\n                                    {% block sw_admin_menu_user_actions_items_change_language %}\\n                                        <li class=\\\"sw-admin-menu__navigation-list-item\\\">\\n                                            <a href=\\\"#\\\" class=\\\"sw-admin-menu__navigation-link\\\" @click.prevent=\\\"onChangeLanguage\\\">\\n                                                <sw-icon class=\\\"sw-admin-menu__navigation-link-icon\\\"\\n                                                         name=\\\"default-location-flag\\\"\\n                                                         small>\\n                                                </sw-icon>\\n                                                {{ $tc('global.sw-admin-menu.linkChangeLanguage') }}\\n                                            </a>\\n                                        </li>\\n                                    {% endblock %}\\n\\n                                    {% block sw_admin_menu_user_actions_items_logout_user %}\\n                                        <li class=\\\"sw-admin-menu__navigation-list-item\\\">\\n                                            <a href=\\\"#\\\" class=\\\"sw-admin-menu__navigation-link\\\" @click.prevent=\\\"onLogoutUser\\\">\\n                                                <sw-icon class=\\\"sw-admin-menu__navigation-link-icon\\\"\\n                                                         name=\\\"default-action-log-out\\\"\\n                                                         small>\\n                                                </sw-icon>\\n                                                {{ $tc('global.sw-admin-menu.linkLogout') }}\\n                                            </a>\\n                                        </li>\\n                                    {% endblock %}\\n                                {% endblock %}\\n                            </ul>\\n                        {% endblock %}\\n\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_admin_menu_flyout_transition %}\\n            <transition name=\\\"flyout\\\">\\n                {% block sw_admin_menu_flyout %}\\n                    <div v-if=\\\"flyoutEntries.length\\\"\\n                         class=\\\"sw-admin-menu__flyout\\\"\\n                         :style=\\\"flyoutStyle\\\"\\n                         @mouseleave=\\\"closeFlyout\\\">\\n\\n                        {% block sw_admin_menu_flyout_label %}\\n                            <div v-if=\\\"!isExpanded\\\" class=\\\"sw-admin-menu__flyout-label\\\">\\n                                {{ $tc(flyoutLabel) }}\\n                            </div>\\n                        {% endblock %}\\n\\n                        {% block sw_admin_menu_flyout_list %}\\n                            <ul v-if=\\\"flyoutEntries\\\" class=\\\"sw-admin-menu__flyout-list\\\">\\n                                <sw-admin-menu-item v-for=\\\"entry in flyoutEntries\\\"\\n                                                    :entry=\\\"entry\\\"\\n                                                    :key=\\\"entry.id || entry.path\\\"\\n                                                    :collapsibleText=\\\"false\\\"\\n                                                    :displayIcon=\\\"false\\\"\\n                                                    @menuItemClicked=\\\"closeFlyout\\\">\\n                                </sw-admin-menu-item>\\n                            </ul>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </transition>\\n        {% endblock %}\\n    </aside>\\n{% endblock %}\\n\";","module.exports = \"{% block sw_search_bar %}\\n    <div class=\\\"sw-search-bar\\\" :style=\\\"searchBarStyles\\\">\\n\\n        {% block sw_search_bar_container %}\\n            <div class=\\\"sw-search-bar__container\\\">\\n\\n                {% block sw_search_bar_mobile_controls %}\\n                    <div v-if=\\\"!isSearchBarShown\\\" class=\\\"sw-search-bar__mobile-controls\\\">\\n\\n                        {% block sw_search_bar_button_off_canvas_toggle %}\\n                            <button class=\\\"sw-search-bar__button\\\" @click=\\\"toggleOffCanvas\\\">\\n                                <sw-icon v-if=\\\"isOffCanvasShown\\\" name=\\\"default-basic-x-line\\\"></sw-icon>\\n                                <sw-icon v-else name=\\\"small-default-stack-line\\\"></sw-icon>\\n                            </button>\\n                        {% endblock %}\\n\\n                        {% block sw_search_bar_version_display %}\\n                            <sw-version></sw-version>\\n                        {% endblock %}\\n\\n                        {% block sw_search_bar_button_search %}\\n                            <button class=\\\"sw-search-bar__button\\\" @click=\\\"showSearchBar\\\">\\n                                <sw-icon name=\\\"default-action-search\\\"></sw-icon>\\n                            </button>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_field %}\\n                    <div v-if=\\\"isSearchBarShown\\\" class=\\\"sw-search-bar__field\\\" :class=\\\"searchBarFieldClasses\\\">\\n\\n                        {% block sw_search_bar_type %}\\n                            <span v-if=\\\"useTypeSearch\\\" class=\\\"sw-search-bar__type\\\" :style=\\\"searchTypeColor\\\">\\n                                <slot name=\\\"search-type\\\">\\n                                    {% block sw_search_bar_slot_type %}{% endblock %}\\n                                </slot>\\n                            </span>\\n                        {% endblock %}\\n\\n                        {% block sw_search_bar_input %}\\n                            <slot name=\\\"search-input\\\">\\n                                {% block sw_search_bar_slot_input %}\\n                                    <input class=\\\"sw-search-bar__input\\\"\\n                                           :placeholder=\\\"$tc('global.sw-search-bar.placeholderSearchField')\\\"\\n                                           v-model=\\\"searchTerm\\\"\\n                                           @input=\\\"onSearchTermChange\\\"\\n                                           @focus=\\\"onFocusInput\\\"\\n                                           @blur=\\\"onBlur\\\"\\n                                           @keydown.delete=\\\"resetSearchType\\\">\\n                                {% endblock %}\\n                            </slot>\\n                        {% endblock %}\\n\\n                        {% block sw_search_bar_icon %}\\n                            <button class=\\\"sw-search-bar__field-icon sw-search-bar__field-close\\\" @click=\\\"hideSearchBar\\\">\\n                                <sw-icon name=\\\"small-default-x-line-medium\\\" small></sw-icon>\\n                            </button>\\n\\n                            <span class=\\\"sw-search-bar__field-icon sw-search-bar__field-search-icon\\\">\\n                                <sw-icon name=\\\"small-search\\\" small></sw-icon>\\n                            </span>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_results %}\\n                    <div v-if=\\\"showResultsContainer\\\" class=\\\"sw-search-bar__results\\\">\\n\\n                        {% block sw_search_bar_results_empty_state %}\\n                            <sw-loader v-if=\\\"!results.length\\\"></sw-loader>\\n                        {% endblock %}\\n\\n                        {% block sw_search_bar_results_list %}\\n                            <ul v-else class=\\\"sw-search-bar__results-list\\\">\\n                                {% block sw_search_bar_results_items %}\\n                                    <sw-search-bar-item v-for=\\\"item in results\\\" :item=\\\"item\\\" :key=\\\"item.id\\\"></sw-search-bar-item>\\n                                {% endblock %}\\n                            </ul>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_search_bar_item %}\\n    <li class=\\\"sw-search-bar-item\\\">\\n\\n        {% block sw_search_bar_item_customer %}\\n            <router-link v-if=\\\"item.type === 'customer'\\\"\\n                         class=\\\"sw-search-bar-item__link\\\"\\n                         :to=\\\"{ name: 'sw.customer.detail.base', params: { id: item.entity.id } }\\\">\\n                {% block sw_search_bar_item_customer_icon %}\\n                    <sw-icon name=\\\"default-avatar-multiple\\\" size=\\\"20px\\\" color=\\\"#F88962\\\"></sw-icon>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_item_customer_label %}\\n                    <span class=\\\"sw-search-bar-item__label\\\">\\n                        {{ item.entity.firstName }} {{ item.entity.lastName }}\\n                    </span>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_item_customer_type %}\\n                    <span class=\\\"sw-search-bar-item__type\\\">\\n                        {{ $tc('global.sw-search-bar-item.typeLabelCustomer') }}\\n                    </span>\\n                {% endblock %}\\n            </router-link>\\n        {% endblock %}\\n\\n        {% block sw_search_bar_item_product %}\\n            <router-link v-else-if=\\\"item.type === 'product'\\\"\\n                         class=\\\"sw-search-bar-item__link\\\"\\n                         :to=\\\"{ name: 'sw.product.detail.base', params: { id: item.entity.id } }\\\">\\n                {% block sw_search_bar_item_product_icon %}\\n                    <sw-icon name=\\\"default-symbol-products\\\" size=\\\"20px\\\" color=\\\"#7ad5c8\\\"></sw-icon>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_item_product_label %}\\n                    <span class=\\\"sw-search-bar-item__label\\\">\\n                        {{ item.entity.name }}\\n                    </span>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_item_product_type %}\\n                    <span class=\\\"sw-search-bar-item__type\\\">\\n                        {{ $tc('global.sw-search-bar-item.typeLabelProduct') }}\\n                    </span>\\n                {% endblock %}\\n            </router-link>\\n        {% endblock %}\\n\\n        {% block sw_search_bar_item_order %}\\n            <router-link v-else-if=\\\"item.type === 'order'\\\"\\n                         class=\\\"sw-search-bar-item__link\\\"\\n                         :to=\\\"{ name: 'sw.order.detail.base', params: { id: item.entity.id } }\\\">\\n                {% block sw_search_bar_item_order_icon %}\\n                    <sw-icon name=\\\"default-shopping-paper-bag\\\" size=\\\"20px\\\" color=\\\"#a092f0\\\"></sw-icon>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_item_order_label %}\\n                    <span class=\\\"sw-search-bar-item__label\\\">\\n                        {{ item.entity.customer.firstName }} {{ item.entity.customer.lastName }}\\n                    </span>\\n                {% endblock %}\\n\\n                {% block sw_search_bar_item_order_type %}\\n                    <span class=\\\"sw-search-bar-item__type\\\">\\n                        {{ $tc('global.sw-search-bar-item.typeLabelOrder') }}\\n                    </span>\\n                {% endblock %}\\n            </router-link>\\n        {% endblock %}\\n\\n        {% block sw_search_bar_item_media %}\\n        <router-link v-else-if=\\\"item.type === 'media'\\\"\\n                     class=\\\"sw-search-bar-item__link\\\"\\n                     :to=\\\"{ name: 'sw.media.index', query: { mediaId: item.entity.id } }\\\">\\n            {% block sw_search_bar_item_media_icon %}\\n            <sw-icon name=\\\"default-object-image\\\" size=\\\"20px\\\" color=\\\"#FFD700\\\"></sw-icon>\\n            {% endblock %}\\n\\n            {% block sw_search_bar_item_media_label %}\\n            <span class=\\\"sw-search-bar-item__label\\\">\\n                        {{ item.entity.name }}\\n                    </span>\\n            {% endblock %}\\n\\n            {% block sw_search_bar_item_media_type %}\\n            <span class=\\\"sw-search-bar-item__type\\\">\\n                        {{ $tc('global.sw-search-bar-item.typeLabelMedia') }}\\n                    </span>\\n            {% endblock %}\\n        </router-link>\\n        {% endblock %}\\n    </li>\\n{% endblock %}\";","module.exports = \"{% block sw_media_grid %}\\n    <div class=\\\"sw-media-grid\\\" @mousedown.left=\\\"onMouseDown\\\" >\\n        <slot name=\\\"content\\\">\\n            {% block sw_media_grid_slot_content %}\\n                <div class=\\\"sw-media-grid__content\\\"\\n                     :style=\\\"mediaColumnDefinitions\\\"\\n                     @click.self=\\\"emitSelectionCleared\\\">\\n                    {% block sw_media_grid_content_cell %}\\n                        <div class=\\\"sw-media-grid__content-cell\\\"\\n                             v-for=\\\"item in items\\\"\\n                             :key=\\\"item.key\\\" >\\n                            <component\\n                                :is=\\\"previewComponent\\\"\\n                                :selected=\\\"isItemSelected(item)\\\"\\n                                :item=\\\"item\\\"\\n                                :containerOptions=\\\"containerOptions\\\"\\n                                @sw-media-grid-item-selection-add=\\\"handleSelection\\\"\\n                                @sw-media-grid-item-clicked=\\\"handleClick\\\"\\n                                @sw-media-grid-item-selection-remove=\\\"removeFromSelection\\\"\\n                                v-on=\\\"$listeners\\\">\\n                            </component>\\n                        </div>\\n                    {% endblock %}\\n                </div>\\n            {% endblock %}\\n        </slot>\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_grid_item_preview %}\\n    <sw-media-preview :item=\\\"item\\\">\\n    </sw-media-preview>\\n{% endblock %}\\n\\n{% block sw_media_grid_item_name %}\\n    <input v-if=\\\"containerOptions.editable\\\"\\n        type=\\\"text\\\"\\n        ref=\\\"inputItemName\\\"\\n        tabindex=\\\"-1\\\"\\n        :value=\\\"item.name\\\"\\n        :disabled=\\\"true\\\"\\n        @keydown.enter=\\\"emitNameChanged\\\"\\n        @keydown.esc=\\\"cancelInlineEdit\\\"\\n        @blur=\\\"cancelInlineEditFromBlur\\\">\\n\\n    <div v-else>\\n        {{ itemTitle }}\\n    </div>\\n{% endblock %}\\n\\n{% block sw_media_grid_item_context_items%}\\n    {% block sw_media_griditem_context_item_detail %}\\n        <sw-context-menu-item @click=\\\"showItemDetails($event)\\\">\\n            {{ $tc('global.sw-media-grid-media-item.contextMenuDetailLabel') }}\\n        </sw-context-menu-item>\\n    {% endblock %}\\n\\n    <div class=\\\"sw-context-menu__group\\\">\\n        {% block sw_media_griditem_context_item_copy_item_link %}\\n            <sw-context-menu-item @click=\\\"copyItemLink()\\\">\\n                {{ $tc('global.sw-media-grid-media-item.contextMenuCopyLinkLabel') }}\\n            </sw-context-menu-item>\\n        {% endblock %}\\n\\n        {% block sw_media_griditem_context_item_replace %}\\n            <sw-context-menu-item @click=\\\"replaceItem($event)\\\">\\n                {{ $tc('global.sw-media-grid-media-item.contextMenuReplaceLabel') }}\\n            </sw-context-menu-item>\\n        {% endblock %}\\n\\n        {% block sw_media_griditem_context_item_delete %}\\n            <sw-context-menu-item @click=\\\"deleteItem($event)\\\" variant=\\\"danger\\\">\\n                {{ $tc('global.sw-media-grid-media-item.contextMenuDeleteLabel') }}\\n            </sw-context-menu-item>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_preview %}\\n    <div class=\\\"sw-media-preview\\\">\\n        {% block sw_media_preview_file_type_check %}\\n            <template v-if=\\\"checkForFileTypeImage\\\">\\n                {% block sw_media_preview_file_type_image %}\\n                    <img :src=\\\"imageURLFromItem\\\" :alt=\\\"item.name\\\" class=\\\"sw-media-preview-item\\\">\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else-if=\\\"checkForInMemoryFile\\\">\\n                {% block sw_media_preview_file_type_in_memory_image %}\\n                    <img :src=\\\"item.dataUrl\\\" :alt=\\\"item.name\\\" class=\\\"sw-media-preview-item\\\">\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else-if=\\\"checkForFileTypeVideo\\\">\\n                {% block sw_media_preview_file_type_video %}\\n                    <video :controls=\\\"playable\\\" :autoplay=\\\"autoplay\\\" class=\\\"sw-media-preview-item\\\">\\n                        <source :src=\\\"item.url\\\" :type=\\\"item.mimeType\\\">\\n                        {{ $tc('global.sw-media-preview.fallbackVideoTagSupport') }}\\n                    </video>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else-if=\\\"checkForFileTypeAudio\\\">\\n                {% block sw_media_preview_file_type_audio %}\\n                    <audio :controls=\\\"playable\\\" :autoplay=\\\"autoplay\\\">\\n                        <source :src=\\\"item.url\\\" :type=\\\"item.mimeType\\\">\\n                        {{ $tc('global.sw-media-preview.fallbackAudioTagSupport') }}\\n                    </audio>\\n                {% endblock %}\\n            </template>\\n\\n            <template v-else>\\n                {% block sw_media_preview_file_type_else %}\\n                    <sw-icon class=\\\"sw-media-preview-item\\\"\\n                             :name=\\\"placeholderIcon\\\"\\n                             size=\\\"80%\\\"\\n                             multicolor>\\n                    </sw-icon>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_upload_container %}\\n    <div class=\\\"sw-media-upload-container\\\">\\n        {% block sw_media_upload_container_title %}\\n                <div class=\\\"sw-media-upload-container__title\\\" v-if=\\\"title\\\">{{ title }}</div>\\n            {% endblock %}\\n\\n        {% block sw_media_upload_container_file_input %}\\n            <input class=\\\"sw-media-upload-container__file-input\\\"\\n                type=\\\"file\\\"\\n                name=\\\"file-upload\\\"\\n                ref=\\\"fileInput\\\"\\n                :multiple=\\\"multipleFiles\\\"\\n                @change=\\\"handleFileUpload\\\">\\n        {% endblock %}\\n\\n        {% block sw_media_upload_container_drop_zone %}\\n            <div class=\\\"sw-media-upload-container__drop-zone\\\">\\n                {% block sw_media_upload_container_drop_zone_label %}\\n                    <div class=\\\"sw-media-upload-container__drop-zone-label\\\">\\n                        {% block sw_media_upload_container_upload_icon %}\\n                            <sw-icon name=\\\"default-action-cloud-upload\\\"></sw-icon>\\n                        {% endblock%}\\n\\n                        {% block sw_media_upload_container_label_text %}\\n                            <div class=\\\"sw-media-upload-container__drop-zone-label-text\\\">\\n                                {{ $tc('global.sw-media-upload-container.dropZoneText') }}\\n                            </div>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n\\n                {% block sw_media_upload_container_button_container %}\\n                    <div class=\\\"sw-media-upload-container__button-container\\\">\\n                        {% block sw_media_upload_container_upload_button %}\\n                            <sw-button class=\\\"sw-media-upload-container__action-button\\\"\\n                                       size=\\\"small\\\"\\n                                       @click=\\\"addFile\\\">\\n                                {{ $tc('global.sw-media-upload-container.upload') }}\\n                            </sw-button>\\n                        {% endblock %}\\n\\n                        {% block sw_media_upload_container_open_media_button %}\\n                            <sw-button class=\\\"sw-media-upload-container__action-button\\\"\\n                                       variant=\\\"primary\\\"\\n                                       size=\\\"small\\\"\\n                                       @click=\\\"emitOpenMedia($event)\\\">\\n                                {{ $tc('global.sw-media-upload-container.openMedia') }}\\n                            </sw-button>\\n                        {% endblock %}\\n                    </div>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n    </div>\\n{% endblock %}\";","module.exports = \"{% block sw_media_upload_url_modal %}\\n    <sw-modal\\n        class=\\\"sw-media-upload-url-modal\\\"\\n        variant=\\\"small\\\"\\n        :title=\\\"$tc('global.sw-media-upload-url-modal.title')\\\"\\n        v-on=\\\"$listeners\\\">\\n\\n        {% block sw_media_upload_url_modal_dialog %}\\n            <div class=\\\"sw-media-upload-url-content\\\">\\n                {% block sw_media_upload_url_modal_input %}\\n                    <sw-field\\n                        v-model=\\\"url\\\"\\n                        label=\\\"URL\\\"\\n                        :placeholder=\\\"$tc('global.sw-media-upload-url-modal.example')\\\"\\n                        ref=\\\"urlInput\\\">\\n                    </sw-field>\\n                {% endblock %}\\n            </div>\\n        {% endblock %}\\n\\n        {% block sw_media_upload_url_modal_footer %}\\n            <template slot=\\\"modal-footer\\\">\\n                {% block sw_media_upload_url_modal_cancel_button %}\\n                    <sw-button size=\\\"small\\\" @click=\\\"closeModal\\\">\\n                        {{ $tc('global.sw-media-upload-url-modal.cancel') }}\\n                    </sw-button>\\n                {% endblock %}\\n\\n                {% block sw_media_upload_url_modal_submit_button %}\\n                    <sw-button\\n                        variant=\\\"primary\\\"\\n                        size=\\\"small\\\"\\n                        @click.prevent=\\\"emitUrl\\\">\\n\\n                        {{ $tc('global.sw-media-upload-url-modal.upload') }}\\n                    </sw-button>\\n                {% endblock %}\\n            </template>\\n        {% endblock %}\\n    </sw-modal>\\n{% endblock %}\";","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-grid-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1cebf19a\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-card.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"a15a2f28\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-user-card.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7042307e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-card-section.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"68febdb8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-button.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"57f95ec6\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-icon.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1e77635e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-image.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2feb2bf5\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-alert.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"98ccb418\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-avatar.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e0fbcd1e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-container.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"222e314f\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-sidebar.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"3032ecf4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-sidebar-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"dfca8120\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-tabs.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"21a412e2\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-tabs-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d9f9cf64\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-table.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"7ef90782\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-modal.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5b52aea3\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-address.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"f60fdb48\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-empty-state.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4398f002\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-description-list.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"389bfe8f\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-version.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"47f0a278\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-loader.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"658752f5\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-notifications.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"d99357b8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-color-badge.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"74637955\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-grid.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4fd8b335\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-grid-column.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c5126e84\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-grid-row.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"45757aae\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-pagination.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"4c7e788e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-field.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"10cb1303\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-price-field.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"2dbd7b87\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-multi-select.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"e98a194e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-text-editor.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5f0edfa0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-tree.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"1e590856\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-tree-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"09f1a3fe\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-context-button.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"55453600\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-context-menu.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5ecfb4ce\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-context-menu-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"24d3457e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-admin.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ec73ab2e\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-desktop.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"5153f3d6\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-page.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"579eed92\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-card-view.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"53d9bcbc\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-admin-menu.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"23604169\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-search-bar.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"65eb3bd0\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-search-bar-item.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6d19cde8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-grid.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"0cf19db4\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-preview.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"6d2fcde8\", content, true, {});","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../../node_modules/mini-css-extract-plugin/dist/loader.js!../../../../../node_modules/css-loader/index.js??ref--13-2!../../../../../node_modules/less-loader/dist/cjs.js??ref--13-3!./sw-media-upload-container.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"ccf78492\", content, true, {});","import { Component } from 'src/core/shopware';\nimport template from './sw-card.html.twig';\nimport './sw-card.less';\n\nComponent.register('sw-card', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            required: false\n        },\n        hero: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        grid: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        large: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        cardClasses() {\n            return {\n                'sw-card--tabs': !!this.$slots.tabs,\n                'sw-card--grid': !!this.$slots.grid,\n                'sw-card--hero': !!this.$props.hero,\n                'sw-card--large': this.large\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-user-card.html.twig';\nimport './sw-user-card.less';\n\nComponent.register('sw-user-card', {\n    template,\n\n    props: {\n        user: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        },\n        title: {\n            type: String,\n            required: true,\n            default: ''\n        },\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        hasActionSlot() {\n            return !!this.$slots.actions;\n        },\n\n        moduleColor() {\n            return this.$route.meta.$module.color;\n        },\n\n        userName() {\n            const user = this.user;\n\n            if (!user.salutation && !user.firstName && !user.lastName) {\n                return '';\n            }\n\n            const salutation = user.salutation ? user.salutation : '';\n            const firstName = user.firstName ? user.firstName : '';\n            const lastName = user.lastName ? user.lastName : '';\n\n            return `${salutation} ${firstName} ${lastName}`;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-card-section.html.twig';\nimport './sw-card-section.less';\n\nComponent.register('sw-card-section', {\n    template,\n\n    props: {\n        divider: {\n            type: String,\n            required: false,\n            default: '',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return ['top', 'right', 'bottom', 'left'].includes(value);\n            }\n        },\n        secondary: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        slim: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        cardSectionClasses() {\n            return {\n                [`sw-card-section--divider-${this.divider}`]: this.divider,\n                'sw-card-section--secondary': this.secondary,\n                'sw-card-section--slim': this.slim\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport './sw-button.less';\nimport template from './sw-button.html.twig';\n\nComponent.register('sw-button', {\n    template,\n\n    props: {\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        variant: {\n            type: String,\n            required: false,\n            default: '',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return ['primary', 'ghost', 'danger', 'contrast'].includes(value);\n            }\n        },\n        size: {\n            type: String,\n            required: false,\n            default: '',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return ['small', 'large'].includes(value);\n            }\n        },\n        block: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        routerLink: {\n            type: Object,\n            required: false\n        },\n        link: {\n            type: String,\n            required: false\n        }\n    },\n\n    computed: {\n        buttonClasses() {\n            return {\n                [`sw-button--${this.variant}`]: this.variant,\n                [`sw-button--${this.size}`]: this.size,\n                'sw-button--block': this.block,\n                'sw-button--disabled': this.disabled\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport { debug } from 'src/core/service/util.service';\nimport template from './sw-icon.html.twig';\nimport './sw-icon.less';\n\nComponent.register('sw-icon', {\n    template,\n\n    props: {\n        name: {\n            type: String,\n            required: true\n        },\n        small: {\n            type: Boolean,\n            required: false\n        },\n        large: {\n            type: Boolean,\n            required: false\n        },\n        size: {\n            type: String,\n            required: false\n        },\n        title: {\n            type: String,\n            required: false\n        },\n        color: {\n            type: String,\n            required: false\n        },\n        multicolor: {\n            type: Boolean,\n            required: false\n        },\n        decorative: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        iconNamePrefix() {\n            return 'icon--';\n        },\n\n        iconSetPath() {\n            return this.multicolor ?\n                `/administration/static/img/sw-icons-multicolor.svg#${this.iconNamePrefix + this.name}` :\n                `/administration/static/img/sw-icons.svg#${this.iconNamePrefix + this.name}`;\n        },\n\n        iconClasses() {\n            return {\n                [this.iconNamePrefix + this.name]: this.name,\n                'sw-icon--small': this.small,\n                'sw-icon--large': this.large\n            };\n        },\n\n        iconStyles() {\n            let size = this.size;\n\n            if (!Number.isNaN(parseFloat(size)) && !Number.isNaN(size - 0)) {\n                size = `${size}px`;\n            }\n\n            return {\n                color: this.color,\n                width: size,\n                height: size\n            };\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            if (this.color && this.multicolor) {\n                debug.warn(\n                    this.$options.name,\n                    `The color of \"${this.name}\" cannot be adjusted because it is a multicolor icon.`\n                );\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-image.html.twig';\nimport './sw-image.less';\n\nComponent.register('sw-image', {\n    template,\n\n    props: {\n        altText: {\n            type: String,\n            required: false,\n            default: ''\n        },\n\n        isCover: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        downloadable: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n\n        url: {\n            type: String,\n            required: false,\n            default: ''\n        }\n    },\n\n    computed: {\n        swImageClasses() {\n            return {\n                'is--cover': this.isCover\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-alert.html.twig';\nimport './sw-alert.less';\n\n/**\n * @description\n * The <u>sw-alert</u> component is used to convey important information to the user. It comes in 4 variations,\n * <strong>success</strong>, <strong>info</strong>, <strong>warning</strong> and <strong>error</strong>. These have\n * default icons assigned which can be changed and represent different actions\n * @status ready\n * @component-example\n * <sw-alert variant=\"info\" title=\"Example title\" closable=\"true\"></sw-alert>\n */\nComponent.register('sw-alert', {\n    template,\n\n    props: {\n        variant: {\n            type: String,\n            default: '',\n            validator(value) {\n                return ['info', 'warning', 'error', 'success'].includes(value);\n            }\n        },\n        title: {\n            type: String,\n            required: false\n        },\n        showIcon: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n        system: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        closable: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        notificationIndex: {\n            type: String,\n            required: false\n        }\n    },\n    computed: {\n        alertClasses() {\n            return [\n                `sw-alert--${this.variant}`,\n                {\n                    'sw-alert--system': this.system,\n                    'sw-alert--no-icon': !this.showIcon,\n                    'sw-alert--closable': this.closable\n                }\n            ];\n        },\n\n        alertIcon() {\n            const iconConfig = {\n                info: 'default-badge-info',\n                warning: 'default-badge-warning',\n                error: 'default-badge-error',\n                success: 'default-basic-checkmark-circle'\n            };\n\n            return iconConfig[this.variant] || 'default-bell-bell';\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport { md5 } from 'src/core/service/utils/format.utils';\nimport template from './sw-avatar.html.twig';\nimport './sw-avatar.less';\n\nComponent.register('sw-avatar', {\n    template,\n\n    props: {\n        color: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        size: {\n            type: String,\n            required: false\n        },\n        user: {\n            type: Object,\n            required: false,\n            default() {\n                return {\n                    firstName: '',\n                    lastName: ''\n                };\n            }\n        },\n        useGravatar: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            fontSize: 16,\n            lineHeight: 16\n        };\n    },\n\n    computed: {\n        avatarSize() {\n            const size = this.size;\n\n            return {\n                width: size,\n                height: size\n            };\n        },\n\n        avatarInitials() {\n            const user = this.user;\n\n            if (!user.firstName && !user.lastName) {\n                return '';\n            }\n\n            const firstNameLetter = user.firstName ? user.firstName[0] : '';\n            const lastNameLetter = user.lastName ? user.lastName[0] : '';\n\n            return firstNameLetter + lastNameLetter;\n        },\n\n        avatarInitialsSize() {\n            return {\n                'font-size': `${this.fontSize}px`,\n                'line-height': `${this.lineHeight}px`\n            };\n        },\n\n        userImage() {\n            if (this.useGravatar && this.user && this.user.email) {\n                return this.getGravatarUserImage();\n            }\n\n            return '';\n        },\n\n        avatarImage() {\n            return {\n                'background-image': `url(${this.userImage})`\n            };\n        },\n\n        avatarColor() {\n            return {\n                'background-color': this.color\n            };\n        }\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.generateAvatarInitialsSize();\n        },\n\n        generateAvatarInitialsSize() {\n            const avatarSize = this.$refs.swAvatar.offsetHeight;\n\n            this.fontSize = Math.round(avatarSize * 0.4);\n            this.lineHeight = Math.round(avatarSize * 0.98);\n        },\n\n        getGravatarUserImage() {\n            return `https://www.gravatar.com/avatar/${md5(this.user.email)}?s=100`;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-container.html.twig';\nimport './sw-container.less';\n\nComponent.register('sw-container', {\n    template,\n\n    props: {\n        type: {\n            type: String,\n            required: false,\n            default: 'column',\n            validator(value) {\n                return ['column', 'row'].includes(value);\n            }\n        },\n        grid: {\n            type: String,\n            required: false,\n            default: '50% 50%'\n        },\n        gap: {\n            type: String,\n            required: false,\n            default: '0px'\n        },\n        justify: {\n            type: String,\n            required: false,\n            default: 'stretch',\n            validator(value) {\n                return ['start', 'end', 'center', 'stretch', 'left', 'right'].includes(value);\n            }\n        },\n        align: {\n            type: String,\n            required: false,\n            default: 'stretch',\n            validator(value) {\n                return ['start', 'end', 'center', 'stretch'].includes(value);\n            }\n        }\n    },\n\n    computed: {\n        gridStyles() {\n            const styles = {};\n\n            styles[(this.type === 'row') ? 'grid-template-rows' : 'grid-template-columns'] = this.grid;\n            styles['grid-gap'] = this.gap;\n            styles['justify-items'] = this.justify;\n            styles['justify-content'] = this.justify;\n            styles['align-items'] = this.align;\n\n            return styles;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-sidebar.html.twig';\nimport './sw-sidebar.less';\n\nComponent.register('sw-sidebar', {\n    template,\n\n    data() {\n        return {\n            items: {},\n            currentlyExpanded: null\n        };\n    },\n\n    created() {\n        this.$on('closeNonExpandedContentPanels', this.closeNonExpandedContentPanels);\n    },\n\n    methods: {\n        closeNonExpandedContentPanels(activePanelId) {\n            Object.keys(this.items).forEach((key) => {\n                const panel = this.items[key];\n\n                if (activePanelId !== key) {\n                    panel.isExpanded = false;\n                }\n            });\n\n            this.currentlyExpanded = this.items[activePanelId];\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-sidebar-item.html.twig';\nimport './sw-sidebar-item.less';\n\nComponent.register('sw-sidebar-item', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            required: false\n        },\n\n        icon: {\n            type: String,\n            required: true\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            panelId: utils.createId(),\n            isExpanded: false\n        };\n    },\n\n    computed: {\n        sidebarItemClasses() {\n            return {\n                'is--active': this.isExpanded,\n                'is--disabled': this.disabled\n            };\n        },\n\n        hasDefaultSlot() {\n            return !!this.$slots.default;\n        }\n    },\n\n    created() {\n        this.componentCreated();\n    },\n\n    methods: {\n        componentCreated() {\n            this.$parent.items[this.panelId] = this;\n        },\n\n        sidebarButtonClick(event) {\n            if (this.disabled) {\n                return;\n            }\n            this.$emit('click', event);\n\n            this.toggleContentPanel();\n        },\n\n        toggleContentPanel(expand = !this.isExpanded) {\n            // The panel is just a button which can be clicked by the user\n            if (!this.hasDefaultSlot) {\n                return;\n            }\n\n            this.isExpanded = expand;\n            this.$parent.$emit('closeNonExpandedContentPanels', this.panelId);\n        },\n\n        closeSideBarPanel() {\n            this.toggleContentPanel();\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport dom from 'src/core/service/utils/dom.utils';\nimport template from './sw-tabs.html.twig';\nimport './sw-tabs.less';\n\nComponent.register('sw-tabs', {\n    template,\n\n    data() {\n        return {\n            showArrowControls: false,\n            scrollbarOffset: ''\n        };\n    },\n\n    computed: {\n        scrollbarOffsetStyle() {\n            return {\n                bottom: this.scrollbarOffset,\n                'margin-top': this.scrollbarOffset\n            };\n        }\n    },\n\n    mounted() {\n        this.initializeArrows();\n        this.addScrollbarOffset();\n    },\n\n    methods: {\n        onClickArrow(direction) {\n            if (!['left', 'right'].includes(direction)) {\n                return;\n            }\n\n            const tabsNavigation = this.$refs.swTabsNavigation;\n            const tabsNavigationWidth = tabsNavigation.offsetWidth;\n\n            if (direction === 'right') {\n                tabsNavigation.scrollLeft += tabsNavigationWidth;\n                return;\n            }\n            tabsNavigation.scrollLeft += -tabsNavigationWidth;\n        },\n\n        addScrollbarOffset() {\n            const offset = dom.getScrollbarHeight(this.$refs.swTabsNavigation);\n\n            this.scrollbarOffset = `-${offset}px`;\n        },\n\n        initializeArrows() {\n            const tabsNavigation = this.$refs.swTabsNavigation;\n            const tabsNavigationElements = this.$el.querySelectorAll('.sw-tabs-item');\n            const tabsNavigationItems = Array.from(tabsNavigationElements);\n            let tabsNavigationItemsWidth = 0;\n\n            tabsNavigationItems.forEach((item) => {\n                tabsNavigationItemsWidth += item.offsetWidth;\n            });\n\n            if (tabsNavigationItemsWidth > tabsNavigation.offsetWidth) {\n                this.showArrowControls = true;\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\n\nimport template from './sw-tabs-item.html.twig';\nimport './sw-tabs-item.less';\n\nComponent.register('sw-tabs-item', {\n    template,\n\n    props: {\n        route: {\n            type: [Object, String],\n            required: false,\n            default: ''\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-table.html.twig';\nimport './sw-table.less';\n\nComponent.register('sw-table', {\n    template,\n\n    props: {\n        columns: {\n            type: String,\n            required: false,\n            default: '1fr 1fr'\n        }\n    },\n\n    computed: {\n        tableStyles() {\n            return {\n                'grid-template-columns': this.columns\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-modal.html.twig';\nimport './sw-modal.less';\n\nComponent.register('sw-modal', {\n    template,\n\n    inheritAttrs: false,\n\n    props: {\n        title: {\n            type: String,\n            default: ''\n        },\n\n        size: {\n            type: String,\n            default: ''\n        },\n\n        variant: {\n            type: String,\n            required: false,\n            default: 'default',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return ['default', 'small', 'large', 'full'].includes(value);\n            }\n        },\n\n        isLoading: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        modalClasses() {\n            return {\n                [`sw-modal--${this.variant}`]: (this.variant && !this.size)\n            };\n        },\n\n        hasFooterSlot() {\n            return !!this.$slots['modal-footer'];\n        }\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    destroyed() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            document.addEventListener('keyup', this.closeModalOnEscapeKey);\n\n            document.body.appendChild(this.$el);\n\n            this.setFocusToModal();\n        },\n\n        destroyedComponent() {\n            document.removeEventListener('keyup', this.closeModalOnEscapeKey);\n        },\n\n        setFocusToModal() {\n            this.$el.querySelector('.sw-modal__dialog').focus();\n        },\n\n        closeModal() {\n            this.$emit('closeModal');\n        },\n\n        closeModalOnEscapeKey(event) {\n            if (event.key === 'Escape' || event.keyCode === 27) {\n                this.closeModal();\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-address.html.twig';\nimport './sw-address.less';\n\n/**\n * @public\n * @description Component which renders a compact panel with user information\n * @status draft\n * @component-example\n * <sw-address :address=\"{\n *     salutation: 'Mister',\n *     title: 'Doctor',\n *     firstName: 'Joe',\n *     lastName: 'Doe'\n * }\"></sw-address>\n */\nComponent.register('sw-address', {\n    template,\n\n    props: {\n        address: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n        headline: {\n            type: String,\n            required: false,\n            default: ''\n        }\n    },\n\n    computed: {\n        fullName() {\n            const salutation = this.address.salutation ? `${this.address.salutation} ` : '';\n            const title = this.address.title ? `${this.address.title} ` : '';\n            const firstName = this.address.firstName ? `${this.address.firstName} ` : '';\n            const lastName = this.address.lastName ? this.address.lastName : '';\n\n            return salutation + title + firstName + lastName;\n        },\n\n        addressClasses() {\n            return {\n                'sw-address--headline': this.headline\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-empty-state.html.twig';\nimport './sw-empty-state.less';\n\nComponent.register('sw-empty-state', {\n    template,\n\n    props: {\n        title: {\n            type: String,\n            default: '',\n            required: true\n        }\n    },\n\n    computed: {\n        moduleColor() {\n            return this.$route.meta.$module.color;\n        },\n\n        moduleDescription() {\n            return this.$route.meta.$module.description;\n        },\n\n        moduleIcon() {\n            return this.$route.meta.$module.icon;\n        },\n\n        hasActionSlot() {\n            return !!this.$slots.actions;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-description-list.html.twig';\nimport './sw-description-list.less';\n\nComponent.register('sw-description-list', {\n    template,\n\n    props: {\n        grid: {\n            type: String,\n            required: false,\n            default: '1fr 1fr'\n        }\n    },\n\n    computed: {\n        descriptionListStyles() {\n            return {\n                'grid-template-columns': this.grid\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-version.html.twig';\nimport './sw-version.less';\n\nComponent.register('sw-version', {\n    template\n});\n","import { Component } from 'src/core/shopware';\nimport './sw-loader.less';\nimport template from './sw-loader.html.twig';\n\nComponent.register('sw-loader', {\n    template,\n\n    props: {\n        size: {\n            type: String,\n            required: false,\n            default: '50px'\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport template from './sw-notifications.html.twig';\nimport './sw-notifications.less';\n\nComponent.register('sw-notifications', {\n    template,\n\n    props: {\n        position: {\n            type: String,\n            required: false,\n            default: 'topRight',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return ['topRight', 'bottomRight'].includes(value);\n            }\n        },\n        notificationsGap: {\n            type: String,\n            default: '20px'\n        },\n        notificationsTopGap: {\n            type: String,\n            default: '165px'\n        }\n    },\n\n    data() {\n        return {\n            notifications: State.getStore('notification').notifications\n        };\n    },\n\n    computed: {\n        notificationsStyle() {\n            let notificationsGap = this.notificationsGap;\n\n            if (`${parseInt(notificationsGap, 10)}` === notificationsGap) {\n                notificationsGap = `${notificationsGap}px`;\n            }\n\n            if (this.position === 'bottomRight') {\n                return {\n                    top: 'auto',\n                    right: notificationsGap,\n                    bottom: notificationsGap,\n                    left: 'auto'\n                };\n            }\n\n            return {\n                top: this.notificationsTopGap,\n                right: notificationsGap,\n                bottom: 'auto',\n                left: 'auto'\n            };\n        }\n    },\n\n    methods: {\n        onClose(event) {\n            State.getStore('notification').removeNotification(event);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-color-badge.html.twig';\nimport './sw-color-badge.less';\n\nComponent.register('sw-color-badge', {\n    template,\n\n    props: {\n        variant: {\n            type: String,\n            required: false,\n            default: 'default'\n        },\n        color: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        rounded: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        colorStyle() {\n            if (!this.color.length) {\n                return '';\n            }\n            return `background:${this.color}`;\n        },\n        variantClass() {\n            return {\n                [`is--${this.variant}`]: true,\n                'is--rounded': this.rounded\n            };\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\n\nComponent.register('sw-vnode-renderer', {\n    functional: true,\n    render(h, context) {\n        return context.props.node;\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport dom from 'src/core/service/utils/dom.utils';\nimport template from './sw-grid.html.twig';\nimport './sw-grid.less';\n\nComponent.register('sw-grid', {\n    template,\n\n    props: {\n        items: {\n            type: Array,\n            required: false,\n            default: null\n        },\n\n        selectable: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n\n        sidebar: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        variant: {\n            type: String,\n            required: false,\n            default: 'normal'\n        },\n\n        header: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n\n        sortBy: {\n            type: String,\n            required: false\n        },\n\n        sortDirection: {\n            type: String,\n            required: false,\n            default: 'ASC'\n        },\n\n        isFullpage: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        table: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            columns: [],\n            selection: {},\n            scrollbarOffset: 0,\n            editing: []\n        };\n    },\n\n    computed: {\n        sort() {\n            return this.sortBy;\n        },\n\n        sortDir() {\n            return this.sortDirection;\n        },\n\n        sizeClass() {\n            return `sw-grid--${this.variant}`;\n        },\n\n        hasPaginationSlot() {\n            return !!this.$slots.pagination;\n        },\n\n        gridClasses() {\n            return {\n                'sw-grid--sidebar': this.sidebar,\n                'sw-grid--fullpage': this.isFullpage,\n                'sw-grid--table': this.table,\n                [this.sizeClass]: true\n            };\n        },\n\n        gridContentClasses() {\n            return {\n                'sw-grid__content--header': this.header,\n                'sw-grid__content--pagination': this.hasPaginationSlot\n            };\n        },\n\n        columnFlex() {\n            let flex = (this.selectable === true) ? '50px ' : '';\n\n            this.columns.forEach((column) => {\n                if (`${parseInt(column.flex, 10)}` === column.flex) {\n                    flex += `${column.flex}fr `;\n                } else {\n                    flex += `${column.flex} `;\n                }\n            });\n\n            return {\n                'grid-template-columns': flex.trim()\n            };\n        }\n    },\n\n    updated() {\n        this.setScrollbarOffset();\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            const that = this;\n\n            this.registerInlineEditingEvents();\n\n            this.$device.onResize({\n                listener() {\n                    that.setScrollbarOffset();\n                },\n                component: this\n            });\n        },\n\n        registerInlineEditingEvents() {\n            this.$on('sw-row-inline-edit-start', this.inlineEditingStart);\n            this.$on('sw-row-inline-edit-cancel', this.disableActiveInlineEditing);\n        },\n\n        inlineEditingStart(id) {\n            this.editing.push(id);\n        },\n\n        disableActiveInlineEditing(id) {\n            this.editing = this.editing.filter((item) => {\n                return item !== id;\n            });\n        },\n\n        selectAll(selected) {\n            this.selection = {};\n\n            if (selected) {\n                this.items.forEach((item) => {\n                    this.selection[item.id] = item;\n                });\n            }\n\n            this.$emit('sw-grid-select-all', this.selection);\n        },\n\n        getSelection() {\n            return this.selection;\n        },\n\n        selectItem(selected, item) {\n            const selection = this.selection;\n\n            if (selected === true) {\n                selection[item.id] = item;\n            } else if (!selected && selection[item.id]) {\n                delete this.selection[item.id];\n            }\n\n            this.selection = {};\n            this.selection = selection;\n\n            this.$emit('sw-grid-select-item', this.selection);\n        },\n\n        isSelected(itemId) {\n            return typeof this.selection[itemId] !== 'undefined';\n        },\n\n        getScrollBarWidth() {\n            if (!this.$el) {\n                return 0;\n            }\n\n            const gridBody = this.$el.getElementsByClassName('sw-grid--body')[0];\n\n            if (gridBody.offsetWidth && gridBody.clientWidth) {\n                return gridBody.offsetWidth - gridBody.clientWidth;\n            }\n\n            return 0;\n        },\n\n        onGridCellClick(event, column) {\n            if (!column.sortable) {\n                return;\n            }\n\n            this.$emit('sw-grid-disable-inline-editing');\n            this.$emit('sort-column', column);\n        },\n\n        setScrollbarOffset() {\n            this.scrollbarOffset = dom.getScrollbarWidth(this.$refs.swGridBody);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport './sw-grid-column.less';\nimport template from './sw-grid-column.html.twig';\n\nComponent.register('sw-grid-column', {\n    template,\n\n    props: {\n        label: {\n            type: String,\n            required: false\n        },\n        iconLabel: {\n            type: String,\n            required: false\n        },\n        align: {\n            type: String,\n            default: 'left'\n        },\n        flex: {\n            required: false,\n            default: 1\n        },\n        sortable: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        dataIndex: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        editable: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        truncate: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    created() {\n        this.registerColumn();\n    },\n\n    watch: {\n        label(newLabel, oldLabel) {\n            const index = this.$parent.columns.findIndex((col) => col.label === oldLabel);\n\n            if (index !== -1 && newLabel) {\n                this.$parent.columns[index].label = newLabel;\n            }\n        }\n    },\n\n    methods: {\n        registerColumn() {\n            const hasColumn = this.$parent.columns.findIndex((column) => column.label === this.label);\n\n            if (hasColumn !== -1 && this.label) {\n                return;\n            }\n\n            this.$parent.columns.push({\n                label: this.label,\n                iconLabel: this.iconLabel,\n                flex: this.flex,\n                sortable: this.sortable,\n                dataIndex: this.dataIndex,\n                align: this.align,\n                editable: this.editable,\n                truncate: this.truncate\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-grid-row.html.twig';\nimport './sw-grid-row.less';\n\nComponent.register('sw-grid-row', {\n    template,\n\n    props: {\n        item: {\n            type: Object,\n            required: true\n        }\n    },\n\n    data() {\n        return {\n            columns: [],\n            isEditingActive: false,\n            inlineEditingCls: 'is--inline-editing',\n            id: utils.createId()\n        };\n    },\n\n    watch: {\n        isEditingActive() {\n            if (this.isEditingActive) {\n                this.$refs.swGridRow.classList.add(this.inlineEditingCls);\n                return;\n            }\n\n            this.$refs.swGridRow.classList.remove(this.inlineEditingCls);\n        }\n    },\n\n    created() {\n        // Bubble up columns declaration for the column header definition\n        this.$parent.columns = this.columns;\n\n        this.$parent.$on('sw-grid-disable-inline-editing', () => {\n            this.onInlineEditCancel();\n        });\n    },\n\n    methods: {\n        onInlineEditStart() {\n            if (this.$device.getViewportWidth() < 800) {\n                return;\n            }\n\n            let isInlineEditingConfigured = false;\n\n            // If inline editing is already enabled, or no column has\n            // the property \"editable\" we don't have to enable it.\n            this.columns.forEach((column) => {\n                if (column.editable || isInlineEditingConfigured) {\n                    isInlineEditingConfigured = true;\n                }\n            });\n\n            if (this.isEditingActive || !isInlineEditingConfigured) {\n                return;\n            }\n\n            this.isEditingActive = true;\n            this.$parent.$emit('sw-row-inline-edit-start', this.id);\n        },\n\n        onInlineEditCancel() {\n            this.isEditingActive = false;\n            this.$parent.$emit('sw-row-inline-edit-cancel', this.id);\n        },\n\n        onInlineEditFinish() {\n            this.isEditingActive = false;\n            this.$parent.$emit('inline-edit-finish', this.item);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport './sw-pagination.less';\nimport template from './sw-pagination.html.twig';\n\nComponent.register('sw-pagination', {\n    template,\n\n    props: {\n        total: {\n            type: Number,\n            required: true\n        },\n        limit: {\n            type: Number,\n            required: true\n        },\n        page: {\n            type: Number,\n            required: true\n        },\n        totalVisible: {\n            type: Number,\n            required: false,\n            default: 7\n        }\n    },\n\n    data() {\n        return {\n            currentPage: this.page,\n            perPage: this.limit,\n            steps: [25, 50, 75, 100]\n        };\n    },\n\n    computed: {\n        maxPage() {\n            return Math.ceil(this.total / this.perPage);\n        },\n\n        displayedPages() {\n            const maxLength = this.totalVisible;\n            const value = this.currentPage;\n\n            if (this.maxPage <= maxLength) {\n                return this.range(1, this.maxPage);\n            }\n\n            const even = maxLength % 2 === 0 ? 1 : 0;\n            const left = Math.floor(maxLength / 2);\n            const right = (this.maxPage - left) + 1 + even;\n\n            if (value >= left && value <= right) {\n                const start = (value - left) + 2;\n                const end = (value + left) - 2 - even;\n\n                return [1, '...', ...this.range(start, end), '...', this.maxPage];\n            }\n            return [\n                ...this.range(1, left),\n                '...',\n                ...this.range((this.maxPage - left) + 1 + even, this.maxPage)\n            ];\n        }\n    },\n\n    watch: {\n        page() {\n            this.currentPage = this.page;\n        }\n    },\n\n    methods: {\n        range(from, to) {\n            const range = [];\n\n            from = from > 0 ? from : 1;\n\n            for (let i = from; i <= to; i += 1) {\n                range.push(i);\n            }\n            return range;\n        },\n\n        pageChange() {\n            this.$emit('page-change', {\n                page: this.currentPage,\n                limit: this.perPage\n            });\n        },\n\n        onPageSizeChange() {\n            this.firstPage();\n        },\n\n        firstPage() {\n            this.currentPage = 1;\n            this.pageChange();\n        },\n\n        prevPage() {\n            this.currentPage -= 1;\n            this.pageChange();\n        },\n\n        nextPage() {\n            this.currentPage += 1;\n            this.pageChange();\n        },\n\n        lastPage() {\n            this.currentPage = this.maxPage;\n            this.pageChange();\n        },\n\n        changePageByPageNumber(pageNum) {\n            this.currentPage = pageNum;\n            this.pageChange();\n        },\n\n        refresh() {\n            this.pageChange();\n        }\n    }\n});\n","import { Component, Mixin, State } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-field.html.twig';\nimport './sw-field.less';\n\nComponent.register('sw-field', {\n    template,\n\n    mixins: [\n        Mixin.getByName('validation'),\n        Mixin.getByName('notification')\n    ],\n\n    /**\n     * All additional passed attributes are bound explicit to the correct child element.\n     */\n    inheritAttrs: false,\n\n    props: {\n        type: {\n            type: String,\n            required: false,\n            default: 'text'\n        },\n        label: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        placeholder: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        helpText: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        suffix: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        value: {\n            type: [String, Boolean, Number, Date],\n            required: false,\n            default: null\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        errorMessage: {\n            type: String,\n            required: false,\n            default: null\n        },\n        options: {\n            type: Array,\n            required: false,\n            default: () => {\n                return [];\n            }\n        },\n        copyAble: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        passwordToggleAble: {\n            type: Boolean,\n            required: false,\n            default: true\n        }\n    },\n\n    data() {\n        return {\n            currentValue: null,\n            boundExpression: '',\n            boundExpressionPath: [],\n            showPassword: false,\n            formError: {}\n        };\n    },\n\n    computed: {\n        hasSuffix() {\n            return this.suffix.length || !!this.$slots.suffix;\n        },\n\n        name() {\n            return `sw-field--${this.boundExpression.replace('.', '-')}`;\n        },\n\n        id() {\n            return `sw-field--${utils.createId()}`;\n        },\n\n        errorStore() {\n            return State.getStore('error');\n        },\n\n        hasError() {\n            return (this.errorMessage !== null && this.errorMessage.length > 0) ||\n                   (this.formError.detail && this.formError.detail.length > 0);\n        },\n\n        hasErrorCls() {\n            return !this.isValid || this.hasError;\n        },\n\n        additionalEventListeners() {\n            const listeners = {};\n\n            /**\n             * Do not pass \"change\" or \"input\" event listeners to the form elements\n             * because the component implements its own listeners for this event types.\n             * The callback methods will emit the corresponding event to the parent.\n             */\n            Object.keys(this.$listeners).forEach((key) => {\n                if (!['change', 'input'].includes(key)) {\n                    listeners[key] = this.$listeners[key];\n                }\n            });\n\n            return listeners;\n        },\n        fieldClasses() {\n            return [\n                `sw-field--${this.type}`,\n                {\n                    'has--error': !!this.hasErrorCls,\n                    'has--suffix': !!(this.hasSuffix || this.$props.copyAble),\n                    'is--disabled': !!this.$props.disabled\n                }];\n        }\n    },\n\n    watch: {\n        value(value) {\n            this.currentValue = this.convertValueType(value);\n        }\n    },\n\n    created() {\n        this.currentValue = this.convertValueType(this.value);\n\n        if (this.$vnode.data && this.$vnode.data.model) {\n            this.boundExpression = this.$vnode.data.model.expression;\n            this.boundExpressionPath = this.boundExpression.split('.');\n\n            this.formError = this.errorStore.registerFormField(this.boundExpression);\n        }\n    },\n\n    methods: {\n        onInput(event) {\n            this.currentValue = this.getValueFromEvent(event);\n\n            this.$emit('input', this.currentValue);\n\n            if (this.hasError) {\n                this.errorStore.deleteError(this.formError);\n            }\n        },\n\n        onClick() {\n            if (this.type === 'checkbox') {\n                this.currentValue = !this.currentValue;\n                this.$emit('input', this.currentValue);\n            }\n        },\n\n        onChange(event) {\n            this.currentValue = this.getValueFromEvent(event);\n\n            this.$emit('change', this.currentValue);\n\n            if (['checkbox', 'radio', 'switch'].includes(this.type)) {\n                this.$emit('input', this.currentValue);\n            }\n\n            if (this.hasError) {\n                this.errorStore.deleteError(this.formError);\n            }\n        },\n\n        /**\n         * Get the correct value from a input event based on the input type.\n         *\n         * @param event\n         * @returns {*}\n         */\n        getValueFromEvent(event) {\n            let value = event.target.value;\n\n            if (event.target.type === 'checkbox') {\n                value = event.target.checked;\n            }\n\n            return this.convertValueType(value);\n        },\n\n        /**\n         * Convert the value to the correct type based on the bound property.\n         *\n         * @param value\n         * @returns {*}\n         */\n        convertValueType(value) {\n            if (!value || typeof value === 'undefined' || value === null) {\n                return null;\n            }\n\n            if (this.type === 'number') {\n                if (typeof value === 'string' && value.length <= 0) {\n                    return null;\n                }\n\n                return parseFloat(value);\n            }\n\n            if (this.type === 'checkbox' || this.type === 'switch') {\n                return value === 'true' || value === true;\n            }\n\n            if (typeof value === 'string' && value.length <= 0) {\n                return null;\n            }\n\n            // Datetime field does not support time zones\n            if ((this.type === 'datetime' || this.type === 'datetime-local') && typeof value === 'string') {\n                value = value.split('+')[0];\n            }\n\n            return value;\n        },\n\n        onTogglePasswordVisibility() {\n            this.showPassword = !this.showPassword;\n        },\n\n        copyToClipboard() {\n            const el = this.$refs.textfield;\n            if (this.disabled) {\n                el.removeAttribute('disabled');\n            }\n\n            el.select();\n\n            try {\n                document.execCommand('copy');\n                this.createNotificationInfo({\n                    title: this.$tc('global.sw-field.notification.notificationCopySuccessTitle'),\n                    message: this.$tc('global.sw-field.notification.notificationCopySuccessMessage')\n                });\n            } catch (err) {\n                this.createNotificationError({\n                    title: this.$tc('global.sw-field.notification.notificationCopyFailureTitle'),\n                    message: this.$tc('global.sw-field.notification.notificationCopyFailureMessage')\n                });\n            }\n\n            window.getSelection().removeAllRanges();\n            if (this.disabled) {\n                el.setAttribute('disabled', 'disabled');\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-price-field.html.twig';\nimport './sw-price-field.less';\n\nComponent.register('sw-price-field', {\n    template,\n\n    inheritAttrs: false,\n\n    props: {\n        price: {\n            type: Object,\n            required: true,\n            default() {\n                return {\n                    net: null,\n                    gross: null\n                };\n            }\n        },\n        taxRate: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        },\n        currency: {\n            type: Object,\n            required: true,\n            default() {\n                return {};\n            }\n        },\n        validation: {\n            type: [String, Array, Object, Boolean],\n            required: false,\n            default: null\n        }\n    },\n\n    watch: {\n        'price.linked': function priceLinkedWatcher(value) {\n            if (value === true) {\n                this.price.net = this.convertGrossToNet(this.price.gross);\n            }\n        },\n\n        'taxRate.taxRate': function taxRateWatcher() {\n            if (this.price.linked === true) {\n                this.price.net = this.convertGrossToNet(this.price.gross);\n            }\n        }\n    },\n\n    methods: {\n        onLockSwitch() {\n            this.price.linked = !this.price.linked;\n            this.$emit('priceLockChange', this.price.linked);\n            this.$emit('change', this.price);\n        },\n\n        onPriceGrossChange(value) {\n            this.$emit('priceGrossChange', value);\n            this.$emit('change', this.price);\n\n            if (this.price.linked) {\n                this.price.net = this.convertGrossToNet(value);\n            }\n        },\n\n        onPriceNetChange(value) {\n            this.$emit('priceNetChange', value);\n            this.$emit('change', this.price);\n\n            if (this.price.linked) {\n                this.price.gross = this.convertNetToGross(value);\n            }\n        },\n\n        /**\n         * Todo: We need to change this to server side calculation because of issues with floating point numbers\n         */\n        convertNetToGross(value) {\n            if (!value || value === null || typeof value !== 'number') {\n                return null;\n            }\n\n            return value * this.getMathTaxRate();\n        },\n\n        /**\n         * Todo: We need to change this to server side calculation because of issues with floating point numbers\n         */\n        convertGrossToNet(value) {\n            if (!value || value === null || typeof value !== 'number') {\n                return null;\n            }\n\n            return value / this.getMathTaxRate();\n        },\n\n        getMathTaxRate() {\n            if (!this.taxRate || !this.taxRate.taxRate) {\n                return 1;\n            }\n\n            return (this.taxRate.taxRate / 100) + 1;\n        }\n    }\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport './sw-multi-select.less';\nimport template from './sw-multi-select.html.twig';\n\nComponent.register('sw-multi-select', {\n    template,\n\n    mixins: [\n        Mixin.getByName('validation')\n    ],\n\n    props: {\n        serviceProvider: {\n            type: Object,\n            required: true\n        },\n        criteria: {\n            type: Object,\n            required: false,\n            default: null\n        },\n        placeholder: {\n            type: String,\n            required: false,\n            default: ''\n        },\n        value: {\n            type: Array,\n            required: true\n        },\n        label: {\n            type: String,\n            default: ''\n        },\n        id: {\n            type: String,\n            required: true\n        },\n        previewResultsLimit: {\n            type: Number,\n            required: false,\n            default: 25\n        },\n        resultsLimit: {\n            type: Number,\n            required: false,\n            default: 25\n        },\n        entityName: {\n            type: String,\n            required: false,\n            default: 'category'\n        },\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n        store: {\n            type: Object,\n            required: true\n        },\n        defaultItemId: {\n            type: String,\n            required: false\n        }\n    },\n\n    data() {\n        return {\n            initialSelection: false,\n            searchTerm: '',\n            isExpanded: false,\n            results: [],\n            selections: [],\n            activeResultPosition: 0,\n            isLoading: false,\n            hasError: false\n        };\n    },\n\n    computed: {\n        multiSelectClasses() {\n            return {\n                'has--error': !this.isValid || this.hasError,\n                'is--disabled': this.disabled,\n                'is--expanded': this.isExpanded\n            };\n        }\n    },\n\n    watch: {\n        '$route.params.id'() {\n            this.createdComponent();\n        },\n\n        disabled: 'loadPreviewResults',\n        criteria: 'loadPreviewResults'\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    destroyed() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        createdComponent() {\n            this.selections = [];\n            this.results = [];\n\n            if (!this.disabled) {\n                this.loadPreviewResults();\n            }\n            this.loadSelections();\n            this.addEventListeners();\n        },\n\n        destroyedComponent() {\n            this.removeEventListeners();\n        },\n\n        addEventListeners() {\n            document.addEventListener('click', this.closeOnClickOutside);\n        },\n\n        removeEventListeners() {\n            document.removeEventListener('click', this.closeOnClickOutside);\n        },\n\n        loadSelections() {\n            this.isLoading = true;\n\n            this.store.getList({\n                page: 1,\n                limit: 500 // ToDo: The concept of assigning a large amount of relations needs a special solution.\n            }).then((response) => {\n                this.selections = response.items;\n                this.isLoading = false;\n            });\n        },\n\n        loadResults() {\n            this.serviceProvider.getList({\n                page: 1,\n                limit: this.resultsLimit,\n                term: this.searchTerm,\n                criteria: this.criteria\n            }).then((response) => {\n                this.results = response.data;\n                this.isLoading = false;\n\n                this.scrollToResultsTop();\n            });\n        },\n\n        loadPreviewResults() {\n            this.isLoading = true;\n\n            this.serviceProvider.getList({\n                page: 1,\n                limit: this.previewResultsLimit,\n                criteria: this.criteria\n            }).then((response) => {\n                this.results = response.data;\n                this.isLoading = false;\n            });\n        },\n\n        openResultList() {\n            this.isExpanded = true;\n        },\n\n        closeResultList() {\n            this.isExpanded = false;\n            this.$refs.swMultiSelectInput.blur();\n        },\n\n        onSearchTermChange() {\n            this.isLoading = true;\n\n            this.doGlobalSearch();\n        },\n\n        doGlobalSearch: utils.debounce(function debouncedSearch() {\n            if (this.searchTerm.length > 0) {\n                this.loadResults();\n            } else {\n                this.loadPreviewResults();\n                this.scrollToResultsTop();\n            }\n        }, 400),\n\n        setActiveResultPosition(index) {\n            this.activeResultPosition = index;\n        },\n\n        navigateUpResults() {\n            if (this.activeResultPosition === 0) {\n                return;\n            }\n\n            this.activeResultPosition = this.activeResultPosition - 1;\n\n            const swMultiSelectEl = this.$refs.swMultiSelect;\n            const resultItem = swMultiSelectEl.querySelector('.sw-multi-select__result-item');\n            const resultContainer = swMultiSelectEl.querySelector('.sw-multi-select__results');\n\n            resultContainer.scrollTop -= resultItem.offsetHeight;\n        },\n\n        navigateDownResults() {\n            if (this.activeResultPosition === this.results.length - 1) {\n                return;\n            }\n\n            this.activeResultPosition = this.activeResultPosition + 1;\n\n            const swMultiSelectEl = this.$refs.swMultiSelect;\n            const activeItem = swMultiSelectEl.querySelector('.is--active');\n            const itemHeight = swMultiSelectEl.querySelector('.sw-multi-select__result-item').offsetHeight;\n            const activeItemPosition = activeItem.offsetTop + itemHeight;\n            const resultContainer = swMultiSelectEl.querySelector('.sw-multi-select__results');\n            let resultContainerHeight = resultContainer.offsetHeight;\n\n            resultContainerHeight -= itemHeight;\n\n            if (activeItemPosition > resultContainerHeight) {\n                resultContainer.scrollTop += itemHeight;\n            }\n        },\n\n        scrollToResultsTop() {\n            this.activeResultPosition = 0;\n            this.$refs.swMultiSelect.querySelector('.sw-multi-select__results').scrollTop = 0;\n        },\n\n        setFocus() {\n            this.$refs.swMultiSelectInput.focus();\n        },\n\n        closeOnClickOutside(event) {\n            const target = event.target;\n\n            if (target.closest('.sw-multi-select') !== this.$refs.swMultiSelect) {\n                this.isExpanded = false;\n                this.activeResultPosition = 0;\n            }\n        },\n\n        isInSelections(result) {\n            return !this.selections.every((item) => {\n                return item.id !== result.id;\n            });\n        },\n\n        addSelection(result) {\n            if (!result.id || !result.name) {\n                return;\n            }\n\n            if (this.isInSelections(result)) {\n                return;\n            }\n\n            this.selections.push(result);\n            this.searchTerm = '';\n\n            this.emitChanges(this.selections);\n\n            this.setFocus();\n\n            if (this.selections.length === 1) {\n                this.changeDefaultItemId(result.id);\n            }\n        },\n\n        addSelectionOnEnter() {\n            const activeItem = this.results[this.activeResultPosition];\n            const id = activeItem.id;\n\n            if (!id) {\n                return;\n            }\n\n            const result = this.results.filter((entry) => entry.id === id);\n\n            if (!result.length) {\n                return;\n            }\n\n            this.addSelection(result[0]);\n        },\n\n        onDismissSelection(id) {\n            this.dismissLastSelection(id);\n            this.setFocus();\n        },\n\n        dismissSelection(id) {\n            if (!id) {\n                return;\n            }\n\n            this.selections = this.selections.filter((entry) => entry.id !== id);\n\n            this.emitChanges(this.selections);\n\n            if (this.defaultItemId && this.defaultItemId === id) {\n                if (this.selections.length >= 1) {\n                    this.changeDefaultItemId(this.selections[0].id);\n                } else {\n                    this.changeDefaultItemId(null);\n                }\n            }\n        },\n\n        dismissLastSelection() {\n            if (this.searchTerm.length > 0) {\n                return;\n            }\n\n            if (!this.selections.length) {\n                return;\n            }\n\n            const lastSelectionId = this.selections[this.selections.length - 1].id;\n\n            this.dismissSelection(lastSelectionId);\n        },\n\n        emitChanges(items) {\n            const itemIds = items.map((item) => item.id);\n            const associationStore = this.store;\n\n            // Delete existing relations\n            Object.keys(associationStore.store).forEach((id) => {\n                if (!itemIds.includes(id)) {\n                    associationStore.store[id].delete();\n                }\n            });\n\n            // Add new relations\n            items.forEach((item) => {\n                if (!associationStore.store[item.id]) {\n                    associationStore.create(item.id, item, true);\n                }\n\n                // In case the entity was already created but was deleted before\n                associationStore.store[item.id].isDeleted = false;\n            });\n\n            this.$emit('input', this.selections);\n        },\n\n        changeDefaultItemId(id) {\n            if (typeof this.defaultItemId !== 'undefined') {\n                this.$emit('default_changed', id);\n            }\n        }\n    }\n});\n","import Quill from 'quill';\nimport 'quill/dist/quill.snow.css';\nimport { Component } from 'src/core/shopware';\nimport template from './sw-text-editor.html.twig';\nimport './sw-text-editor.less';\n\nComponent.register('sw-text-editor', {\n    template,\n\n    props: {\n        value: {\n            type: String,\n            required: false,\n            default: ''\n        },\n\n        label: {\n            type: String,\n            required: false,\n            default: ''\n        },\n\n        placeholder: {\n            type: String,\n            required: false,\n            default: ''\n        },\n\n        htmlContent: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n\n        toolbarConfig: {\n            type: Array,\n            required: false,\n            default() {\n                return [\n                    [{ header: [1, 2, 3, 4, false] }],\n                    ['bold', 'italic', 'underline', 'strike'],\n                    [{ align: [] }],\n                    [{ list: 'ordered' }, { list: 'bullet' }],\n                    ['link', 'blockquote', 'code-block'],\n                    ['clean']\n                ];\n            }\n        }\n    },\n\n    data() {\n        return {\n            textLength: 0\n        };\n    },\n\n    watch: {\n        value(value) {\n            if (value !== this.editor.root.innerHTML) {\n                this.setText(value);\n            }\n        }\n    },\n\n    mounted() {\n        this.mountedComponent();\n    },\n\n    destroyed() {\n        this.destroyedComponent();\n    },\n\n    methods: {\n        mountedComponent() {\n            this.editor = new Quill(this.$refs.editor, {\n                theme: 'snow',\n                placeholder: this.placeholder,\n                modules: {\n                    toolbar: this.toolbarConfig\n                }\n            });\n\n            this.setText(this.value, true);\n\n            this.editor.on('text-change', this.onTextChange);\n        },\n\n        destroyedComponent() {\n            delete this.editor;\n        },\n\n        setText(value, silent = false) {\n            if (value !== null && value.length && value !== '<h2><br></h2>') {\n                if (this.htmlContent) {\n                    this.editor.clipboard.dangerouslyPasteHTML(value, silent ? 'silent' : 'api');\n                } else {\n                    this.editor.setText(value, silent ? 'silent' : 'api');\n                }\n            }\n        },\n\n        getText() {\n            return this.editor.getText();\n        },\n\n        getHTML() {\n            return this.editor.root.innerHTML;\n        },\n\n        onTextChange() {\n            const htmlValue = this.getHTML();\n            const textValue = this.getText();\n\n            if (this.htmlContent) {\n                this.$emit('input', (htmlValue === '<p><br></p>') ? '' : htmlValue);\n            } else {\n                this.$emit('input', textValue);\n            }\n\n            // The text of the quill editor always contains \"\\n\".\n            this.textLength = textValue.length - 1;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport template from './sw-tree.html.twig';\nimport './sw-tree.less';\n\nComponent.register('sw-tree', {\n    template,\n\n    props: {\n        items: {\n            type: Array,\n            required: true\n        },\n\n        rootParentId: {\n            type: String,\n            required: false,\n            default: null\n        },\n\n        parentProperty: {\n            type: String,\n            required: false,\n            default: 'parentId'\n        },\n\n        positionProperty: {\n            type: String,\n            required: false,\n            default: 'position'\n        },\n\n        childCountProperty: {\n            type: String,\n            required: false,\n            default: 'childCount'\n        },\n\n        sortable: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    data() {\n        return {\n            draggedItem: null,\n            currentTreeSearch: null,\n            isLoading: false\n        };\n    },\n\n    computed: {\n        treeItems() {\n            return this.getTreeItems(this.isSearched ? false : this.rootParentId);\n        },\n\n        isSortable() {\n            if (this.currentTreeSearch !== null) {\n                return false;\n            }\n\n            return this.sortable;\n        },\n\n        isSearched() {\n            return this.currentTreeSearch !== null && this.currentTreeSearch.length > 0;\n        },\n\n        hasActionSlot() {\n            return this.$slots && this.$slots.actions;\n        }\n    },\n\n    methods: {\n        getItems(parentId = this.rootParentId, searchTerm = null) {\n            this.$emit('getTreeItems', parentId, searchTerm);\n        },\n\n        searchItems: utils.debounce(function debouncedTreeSearch() {\n            this.$emit('searchTreeItems', this.currentTreeSearch);\n        }, 600),\n\n        getTreeItems(parentId) {\n            const treeItems = [];\n\n            this.items.forEach((item) => {\n                if (item.isDeleted) {\n                    return;\n                }\n\n                if (parentId === false && typeof this.items.find(i => i.id === item.parentId) !== 'undefined') {\n                    return;\n                }\n\n                if (parentId !== false && item[this.parentProperty] !== parentId) {\n                    return;\n                }\n\n                treeItems.push({\n                    data: item,\n                    id: item.id,\n                    parentId: parentId,\n                    position: item[this.positionProperty],\n                    childCount: item[this.childCountProperty],\n                    children: this.getTreeItems(item.id)\n                });\n            });\n\n            treeItems.sort((a, b) => {\n                if (a[this.positionProperty] < b[this.positionProperty]) return -1;\n                if (a[this.positionProperty] > b[this.positionProperty]) return 1;\n                return 0;\n            });\n\n            return treeItems;\n        },\n\n        startDrag(draggedComponent) {\n            draggedComponent.opened = false;\n            this.draggedItem = draggedComponent.item;\n        },\n\n        endDrag() {\n            this.draggedItem = null;\n        },\n\n        moveDrag(droppedComponent) {\n            if (!this.draggedItem ||\n                this.draggedItem === null ||\n                this.draggedItem.data.id === droppedComponent.item.data.id) {\n                return;\n            }\n\n            const dragItem = this.draggedItem.data;\n            const dropItem = droppedComponent.item.data;\n\n            if (dragItem[this.parentProperty] !== dropItem[this.parentProperty]) {\n                const leftParentId = dragItem[this.parentProperty];\n\n                dragItem[this.parentProperty] = dropItem[this.parentProperty];\n\n                this.updateChildPositions(leftParentId, dragItem[this.positionProperty]);\n                dragItem[this.positionProperty] = this.items.length;\n            }\n\n            if (dragItem[this.positionProperty] < dropItem[this.positionProperty]) {\n                if (!droppedComponent.opened) {\n                    this.moveItemsUp(dragItem, dropItem);\n                }\n            } else if (dragItem[this.positionProperty] >= dropItem[this.positionProperty]) {\n                this.moveItemsDown(dragItem, dropItem);\n            }\n        },\n\n        updateChildPositions(parentId, startPosition) {\n            this.items.filter(item => item[this.parentProperty] === parentId).forEach((item) => {\n                if (item[this.positionProperty] > startPosition) {\n                    item[this.positionProperty] -= 1;\n                }\n            });\n        },\n\n        moveItemsUp(dragItem, dropItem) {\n            const dragStartPosition = dragItem[this.positionProperty];\n            dragItem[this.positionProperty] = dropItem[this.positionProperty];\n\n            this.items.forEach((item) => {\n                if (item.id === dragItem.id ||\n                    item[this.positionProperty] > dragItem[this.positionProperty] ||\n                    item[this.positionProperty] < dragStartPosition ||\n                    item[this.parentProperty] !== dropItem[this.parentProperty]) {\n                    return;\n                }\n\n                item[this.positionProperty] -= 1;\n            });\n        },\n\n        moveItemsDown(dragItem, dropItem) {\n            const dragStartPosition = dragItem[this.positionProperty];\n            dragItem[this.positionProperty] = dropItem[this.positionProperty];\n\n            this.items.forEach((item) => {\n                if (item.id === dragItem.id ||\n                    item[this.positionProperty] < dragItem[this.positionProperty] ||\n                    item[this.positionProperty] > dragStartPosition ||\n                    item[this.parentProperty] !== dropItem[this.parentProperty]) {\n                    return;\n                }\n\n                item[this.positionProperty] += 1;\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-tree-item.html.twig';\nimport './sw-tree-item.less';\n\nComponent.register('sw-tree-item', {\n    template,\n\n    props: {\n        item: {\n            type: Object,\n            required: true,\n            default: {}\n        },\n\n        sortable: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        draggedItem: {\n            type: Object,\n            required: false,\n            default: null\n        }\n    },\n\n    data() {\n        return {\n            opened: false,\n            selected: false,\n            isLeaf: false,\n            isLoading: false,\n            dragEl: null,\n            dragStartX: 0,\n            dragStartY: 0,\n            mouseStartX: 0,\n            mouseStartY: 0\n        };\n    },\n\n    computed: {\n        isDragging() {\n            if (this.draggedItem === null) {\n                return false;\n            }\n\n            return this.draggedItem.data.id === this.item.data.id;\n        },\n\n        styling() {\n            return {\n                'is--dragging': this.isDragging,\n                'is--sortable': this.sortable,\n                'is--opened': this.opened,\n                'is--no-children': this.item.childCount <= 0\n            };\n        }\n    },\n\n    updated() {\n        this.updatedComponent();\n    },\n\n    methods: {\n        updatedComponent() {\n            if (this.item.children.length > 0) {\n                this.isLoading = false;\n            }\n        },\n\n        openTreeItem(open = !this.opened) {\n            if (this.isDragging) {\n                return;\n            }\n\n            this.opened = open;\n        },\n\n        getTreeItemChildren(treeItem) {\n            if (this.isDragging || this.isLoading) {\n                return;\n            }\n\n            if (treeItem.children.length <= 0) {\n                this.isLoading = true;\n\n                this.getItems(treeItem.data.id);\n            }\n        },\n\n        getItems(...args) {\n            return this.$parent.getItems(args);\n        },\n\n        onDragStart(event) {\n            if (this.isDragging || this.isLoading || !this.sortable) {\n                return;\n            }\n\n            this.mouseStartX = event.pageX;\n            this.mouseStartY = event.pageY;\n\n            this.dragEl = this.createDragEl();\n            document.body.appendChild(this.dragEl);\n\n            window.addEventListener('pointermove', this.onDragMove);\n            window.addEventListener('pointerup', this.onDragEnd);\n\n            this.$parent.startDrag(this);\n        },\n\n        onDragMove(event) {\n            this.dragEl.style.left = `${(event.pageX - this.mouseStartX) + this.dragStartX}px`;\n            this.dragEl.style.top = `${(event.pageY - this.mouseStartY) + this.dragStartY}px`;\n        },\n\n        onDragEnd() {\n            window.removeEventListener('pointermove', this.onDragMove);\n            window.removeEventListener('pointerup', this.onDragEnd);\n\n            this.dragStartX = 0;\n            this.dragStartY = 0;\n            this.mouseStartX = 0;\n            this.mouseStartY = 0;\n\n            this.dragEl.remove();\n            this.dragEl = null;\n\n            this.$parent.endDrag();\n        },\n\n        onMouseEnter() {\n            if (!this.draggedItem || this.draggedItem === null) {\n                return;\n            }\n\n            this.$parent.moveDrag(this);\n        },\n\n        createDragEl() {\n            const dragEl = this.$el.cloneNode(true);\n            const boundingBox = this.$el.getBoundingClientRect();\n\n            this.dragStartX = boundingBox.left;\n            this.dragStartY = boundingBox.top;\n\n            dragEl.classList.add('is--dragging-el');\n            dragEl.style.width = `${boundingBox.width}px`;\n            dragEl.style.position = 'absolute';\n            dragEl.style.left = `${this.dragStartX}px`;\n            dragEl.style.top = `${this.dragStartY}px`;\n            dragEl.style.zIndex = 99999;\n\n            return dragEl;\n        },\n\n        // Bubbles this method to the root tree from any item depth\n        startDrag(draggedComponent) {\n            return this.$parent.startDrag(draggedComponent);\n        },\n\n        // Bubbles this method to the root tree from any item depth\n        endDrag() {\n            this.$parent.endDrag();\n        },\n\n        // Bubbles this method to the root tree from any item depth\n        moveDrag(droppedComponent) {\n            return this.$parent.moveDrag(droppedComponent);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-context-button.html.twig';\nimport './sw-context-button.less';\n\nComponent.register('sw-context-button', {\n    template,\n\n    props: {\n        showMenuOnStartup: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        menuWidth: {\n            type: Number,\n            required: false,\n            default: 220\n        },\n\n        menuOffsetTop: {\n            type: Number,\n            required: false,\n            default: 10\n        },\n\n        menuOffsetLeft: {\n            type: Number,\n            required: false,\n            default: 15\n        }\n    },\n\n    data() {\n        return {\n            showMenu: this.showMenuOnStartup,\n            positionTop: 0,\n            positionLeft: 0,\n            paddingTop: 0,\n            menuUuid: 0\n        };\n    },\n\n    computed: {\n        menuStyles() {\n            return {\n                left: `${this.positionLeft}px`,\n                top: `${this.positionTop}px`,\n                display: this.showMenu ? 'block' : 'none',\n                width: `${this.menuWidth}px`,\n                'padding-top': `${this.paddingTop}px`\n            };\n        }\n    },\n\n    beforeDestroy() {\n        this.removeMenuFromBody();\n    },\n\n    methods: {\n        openMenu() {\n            const boundingBox = this.$el.getBoundingClientRect();\n            const secureOffset = 5;\n\n            this.positionTop = boundingBox.top - secureOffset;\n            this.positionLeft = (boundingBox.left + boundingBox.width + this.menuOffsetLeft) - this.menuWidth;\n            this.paddingTop = boundingBox.height + secureOffset + this.menuOffsetTop;\n\n            this.showMenu = true;\n\n            this.addMenuToBody();\n        },\n\n        closeMenu(event) {\n            const el = this.$refs.swContextButton;\n            const target = event.target;\n\n            if ((el !== target) && !el.contains(target) && !target.classList.contains('is--disabled')) {\n                this.showMenu = false;\n                this.removeMenuFromBody();\n            }\n        },\n\n        addMenuToBody() {\n            const menuEl = this.$children[1];\n\n            if (menuEl) {\n                document.body.appendChild(menuEl.$el);\n                document.addEventListener('click', this.closeMenu);\n            }\n        },\n\n        removeMenuFromBody() {\n            const menuEl = this.$children[1];\n\n            if (menuEl) {\n                document.removeEventListener('click', this.closeMenu);\n                menuEl.$el.remove();\n            }\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-context-menu.html.twig';\nimport './sw-context-menu.less';\n\nComponent.register('sw-context-menu', {\n    template\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-context-menu-item.html.twig';\nimport './sw-context-menu-item.less';\n\nComponent.register('sw-context-menu-item', {\n    template,\n\n    props: {\n        icon: {\n            type: String,\n            required: false\n        },\n\n        disabled: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        routerLink: {\n            type: Object,\n            required: false\n        },\n\n        variant: {\n            type: String,\n            required: false,\n            default: '',\n            validator(value) {\n                if (!value.length) {\n                    return true;\n                }\n                return ['success', 'danger', 'warning'].includes(value);\n            }\n        }\n    },\n\n    computed: {\n        contextMenuItemStyles() {\n            return {\n                [`sw-context-menu-item--${this.variant}`]: this.variant,\n                'is--disabled': this.disabled,\n                'sw-context-menu-item--icon': this.icon\n            };\n        },\n\n        contextListeners() {\n            return this.disabled ? {} : this.$listeners;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport './sw-admin.less';\nimport template from './sw-admin.html.twig';\n\nComponent.register('sw-admin', {\n    template\n});\n","import { Component } from 'src/core/shopware';\nimport './sw-desktop.less';\nimport template from './sw-desktop.html.twig';\n\nComponent.register('sw-desktop', {\n    template\n});\n","import { Component } from 'src/core/shopware';\nimport dom from 'src/core/service/utils/dom.utils';\nimport template from './sw-page.html.twig';\nimport './sw-page.less';\n\nComponent.register('sw-page', {\n    template,\n\n    props: {\n        showSmartBar: {\n            type: Boolean,\n            default: true\n        }\n    },\n\n    data() {\n        return {\n            module: null,\n            parentRoute: null,\n            scrollbarOffset: 0\n        };\n    },\n\n    computed: {\n        pageColor() {\n            return (this.module !== null) ? this.module.color : '#d8dde6';\n        },\n\n        pageContainerClasses() {\n            return {\n                'has--smart-bar': this.showSmartBar\n            };\n        },\n\n        smartBarStyles() {\n            return {\n                'border-bottom-color': this.pageColor,\n                'padding-right': `${this.scrollbarOffset}px`\n            };\n        }\n    },\n\n    mounted() {\n        this.initPage();\n    },\n\n    updated() {\n        this.setScrollbarOffset();\n    },\n\n    methods: {\n        initPage() {\n            if (this.$route.meta.$module) {\n                this.module = this.$route.meta.$module;\n            }\n\n            if (this.$route.meta.parentPath) {\n                this.parentRoute = this.$route.meta.parentPath;\n            }\n        },\n\n        setScrollbarOffset() {\n            this.scrollbarOffset = dom.getScrollbarWidth(this.$refs.swPageContent.firstChild);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-card-view.html.twig';\nimport './sw-card-view.less';\n\nComponent.register('sw-card-view', {\n    template\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-admin-menu-item.html.twig';\n\nComponent.register('sw-admin-menu-item', {\n    template,\n\n    props: {\n        entry: {\n            type: Object,\n            required: true\n        },\n        displayIcon: {\n            type: Boolean,\n            default: true,\n            required: false\n        },\n        iconSize: {\n            type: String,\n            default: '20px',\n            required: false\n        },\n        collapsibleText: {\n            type: Boolean,\n            default: true,\n            required: false\n        },\n        sidebarExpanded: {\n            type: Boolean,\n            default: true,\n            required: false\n        }\n    },\n\n    computed: {\n        getLinkToProp() {\n            if (this.entry.params) {\n                return { name: this.entry.path, params: this.entry.params };\n            }\n\n            return { name: this.entry.path };\n        },\n\n        getEntryLabel() {\n            if (this.entry.label instanceof Object) {\n                return (this.entry.label.translated) ? this.entry.label.label : this.$tc(this.entry.label.label);\n            }\n            return this.$tc(this.entry.label);\n        }\n    },\n\n    methods: {\n        getIconName(name) {\n            return `${name}`;\n        },\n\n        getItemName(menuItemName) {\n            return menuItemName.replace(/\\./g, '-');\n        }\n    }\n});\n","import { Component, State } from 'src/core/shopware';\nimport dom from 'src/core/service/utils/dom.utils';\nimport template from './sw-admin-menu.html.twig';\nimport './sw-admin-menu.less';\n\nComponent.register('sw-admin-menu', {\n    template,\n\n    inject: ['menuService', 'loginService', 'userService'],\n\n    data() {\n        return {\n            isExpanded: true,\n            isOffCanvasShown: false,\n            isUserActionsActive: false,\n            flyoutEntries: [],\n            flyoutStyle: {},\n            flyoutLabel: '',\n            subMenuOpen: false,\n            scrollbarOffset: '',\n            userProfile: {},\n            user: {}\n        };\n    },\n\n    computed: {\n        userStore() {\n            return State.getStore('user');\n        },\n\n        localeStore() {\n            return State.getStore('adminLocale');\n        },\n\n        mainMenuEntries() {\n            return this.menuService.getMainMenu();\n        },\n\n        sidebarCollapseIcon() {\n            return this.isExpanded ? 'default-arrow-circle-left' : 'default-arrow-circle-right';\n        },\n\n        userActionsToggleIcon() {\n            return this.isUserActionsActive ? 'small-arrow-medium-down' : 'small-arrow-medium-up';\n        },\n\n        scrollbarOffsetStyle() {\n            return {\n                right: this.scrollbarOffset,\n                'margin-left': this.scrollbarOffset\n            };\n        },\n\n        adminMenuClasses() {\n            return {\n                'is--expanded': this.isExpanded,\n                'is--collapsed': !this.isExpanded,\n                'is--off-canvas-shown': this.isOffCanvasShown\n            };\n        },\n\n        userName() {\n            return this.user.name;\n        }\n    },\n\n    created() {\n        this.collapseMenuOnSmallViewports();\n\n        this.userService.getUser().then((response) => {\n            this.userProfile = response.data;\n            this.user = this.userStore.getById(this.userProfile.id);\n        });\n\n        this.$root.$on('toggleOffCanvas', (state) => {\n            this.isOffCanvasShown = state;\n        });\n    },\n\n    mounted() {\n        const that = this;\n\n        this.$device.onResize({\n            listener() {\n                that.collapseMenuOnSmallViewports();\n            },\n            component: this\n        });\n\n        this.addScrollbarOffset();\n    },\n\n    methods: {\n        openSubMenu(entry, currentTarget) {\n            this.subMenuOpen = !this.subMenuOpen;\n\n            if (this.$device.getViewportWidth() <= 500) {\n                this.isOffCanvasShown = false;\n            }\n\n            if (this.isExpanded) {\n                this.flyoutEntries = [];\n            }\n\n            this.changeActiveItem(currentTarget.querySelector('.sw-admin-menu__navigation-link'));\n        },\n\n        collapseMenuOnSmallViewports() {\n            if (this.$device.getViewportWidth() <= 1200 && this.$device.getViewportWidth() >= 500) {\n                this.isExpanded = false;\n            }\n\n            if (this.$device.getViewportWidth() <= 500) {\n                this.isExpanded = true;\n            }\n        },\n\n        changeActiveItem(target) {\n            const mainMenuElement = target.parentNode.parentNode;\n            const activeClass = 'router-link-active';\n            const listElements = mainMenuElement.querySelectorAll('.sw-admin-menu__navigation-link');\n\n            listElements.forEach((listItem) => {\n                listItem.classList.remove(activeClass);\n            });\n\n            target.classList.add(activeClass);\n        },\n\n        isActiveItem(menuItem) {\n            return this.isExpanded && menuItem.classList.contains('router-link-active');\n        },\n\n        openFlyout(entry, currentTarget) {\n            if (!currentTarget) {\n                return false;\n            }\n\n            this.flyoutEntries = [];\n\n            const menuItem = currentTarget.querySelector('.sw-admin-menu__navigation-link');\n\n            if (this.isActiveItem(menuItem)) {\n                return false;\n            }\n\n            if (this.$device.getViewportWidth() >= 500) {\n                this.flyoutEntries = entry.children;\n            }\n\n            this.flyoutLabel = entry.label;\n\n            if (!this.isExpanded) {\n                this.changeActiveItem(menuItem);\n            }\n\n            this.flyoutStyle = {\n                top: `${currentTarget.getBoundingClientRect().top}px`,\n                'border-color': entry.color\n            };\n\n            return true;\n        },\n\n        closeFlyout() {\n            this.flyoutEntries = [];\n        },\n\n        onChangeLanguage() {\n            const lastLocale = this.$root.$i18n.locale;\n            const newLocale = (lastLocale === 'de-DE' ? 'en-GB' : 'de-DE');\n\n            this.$root.$i18n.locale = newLocale;\n            this.localeStore.setLocale(newLocale);\n        },\n\n        onToggleSidebar() {\n            this.isExpanded = !this.isExpanded;\n\n            if (!this.isExpanded) {\n                this.closeFlyout();\n            }\n        },\n\n        onToggleUserActions() {\n            this.isUserActionsActive = !this.isUserActionsActive;\n        },\n\n        openUserActions() {\n            if (this.isExpanded) {\n                return;\n            }\n\n            this.isUserActionsActive = true;\n        },\n\n        closeUserActions() {\n            if (this.isExpanded) {\n                return;\n            }\n\n            this.isUserActionsActive = false;\n        },\n\n        onLogoutUser() {\n            this.loginService.clearBearerAuthentication();\n            this.$router.push({\n                name: 'sw.login.index'\n            });\n        },\n\n        addScrollbarOffset() {\n            const offset = dom.getScrollbarWidth(this.$refs.swAdminMenuBody);\n\n            this.scrollbarOffset = `-${offset}px`;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport utils from 'src/core/service/util.service';\nimport dom from 'src/core/service/utils/dom.utils';\nimport template from './sw-search-bar.html.twig';\nimport './sw-search-bar.less';\n\nComponent.register('sw-search-bar', {\n    template,\n\n    inject: ['searchService'],\n\n    data() {\n        return {\n            showResultsContainer: false,\n            useSearchTypeWhenSet: true,\n            searchTerm: '',\n            results: [],\n            isActive: false,\n            scrollbarOffset: 0,\n            isOffCanvasShown: false,\n            isSearchBarShown: false\n        };\n    },\n\n    computed: {\n        searchTypeColor() {\n            if (!this.$route.meta.$module) {\n                return false;\n            }\n\n            return {\n                'background-color': this.$route.meta.$module.color\n            };\n        },\n\n        useTypeSearch() {\n            return !!(this.$slots['search-type'] && this.useSearchTypeWhenSet);\n        },\n\n        showSearchResults() {\n            return this.showResultsContainer && !this.useTypeSearch;\n        },\n\n        searchBarStyles() {\n            return {\n                paddingRight: `${this.scrollbarOffset}px`\n            };\n        },\n\n        searchBarFieldClasses() {\n            return {\n                'is--active': this.isActive\n            };\n        }\n    },\n\n    created() {\n        this.createdComponent();\n    },\n\n    updated() {\n        this.setScrollbarOffset();\n    },\n\n    methods: {\n        createdComponent() {\n            const that = this;\n\n            this.showSearchFieldOnLargerViewports();\n\n            this.$device.onResize({\n                listener() {\n                    that.showSearchFieldOnLargerViewports();\n                },\n                component: this\n            });\n        },\n\n        clearSearchTerm() {\n            this.searchTerm = '';\n            this.showResultsContainer = false;\n\n            this.results = [];\n        },\n\n        onFocusInput() {\n            this.isActive = true;\n        },\n\n        onBlur() {\n            this.isActive = false;\n        },\n\n        showSearchBar() {\n            this.isSearchBarShown = true;\n            this.isActive = true;\n            this.isOffCanvasShown = false;\n\n            this.$root.$emit('toggleOffCanvas', this.isOffCanvasShown);\n        },\n\n        hideSearchBar() {\n            this.isSearchBarShown = false;\n            this.isActive = false;\n            this.showResultsContainer = false;\n        },\n\n        showSearchFieldOnLargerViewports() {\n            if (this.$device.getViewportWidth() > 500) {\n                this.isSearchBarShown = true;\n            }\n        },\n\n        onSearchTermChange() {\n            if (this.useTypeSearch) {\n                this.doListSearch();\n            } else {\n                this.doGlobalSearch();\n            }\n        },\n\n        toggleOffCanvas() {\n            this.isOffCanvasShown = !this.isOffCanvasShown;\n\n            this.$root.$emit('toggleOffCanvas', this.isOffCanvasShown);\n        },\n\n        resetSearchType() {\n            if (this.searchTerm.length === 0) {\n                this.useSearchTypeWhenSet = false;\n            }\n        },\n\n        doListSearch: utils.debounce(function debouncedSearch() {\n            const searchTerm = this.searchTerm.trim();\n            this.$root.$emit('search', searchTerm);\n        }, 400),\n\n        doGlobalSearch: utils.debounce(function debouncedSearch() {\n            const searchTerm = this.searchTerm.trim();\n            this.isLoading = true;\n\n            if (searchTerm && searchTerm.length > 0) {\n                this.loadResults(searchTerm);\n                window.addEventListener('click', this.clearSearchTerm, {\n                    once: true\n                });\n            } else {\n                this.showResultsContainer = false;\n            }\n        }, 400),\n\n        loadResults(searchTerm) {\n            this.results = [];\n            this.searchService.search({ term: searchTerm }).then((response) => {\n                this.results = response.data;\n                this.isLoading = false;\n            });\n            this.showResultsContainer = true;\n        },\n\n        setScrollbarOffset() {\n            const swPageContent = document.querySelector('.sw-page__content').firstChild;\n            this.scrollbarOffset = dom.getScrollbarWidth(swPageContent);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-search-bar-item.html.twig';\nimport './sw-search-bar-item.less';\n\nComponent.register('sw-search-bar-item', {\n    template,\n\n    props: {\n        item: {\n            type: Object,\n            default: null\n        }\n    }\n});\n","import { Component, Mixin } from 'src/core/shopware';\nimport template from './sw-media-grid.html.twig';\nimport './sw-media-grid.less';\n\nComponent.register('sw-media-grid', {\n    template,\n\n    mixins: [\n        Mixin.getByName('drag-selector')\n    ],\n\n    props: {\n        previewType: {\n            required: true,\n            type: String,\n            validator(value) {\n                return [\n                    'media-grid-preview-as-grid',\n                    'media-grid-preview-as-list'\n                ].includes(value);\n            }\n        },\n\n        previewComponent: {\n            require: true,\n            type: String\n        },\n\n        items: {\n            required: true,\n            type: Array\n        },\n\n        idField: {\n            required: false,\n            default: 'id',\n            type: String\n        },\n\n        editable: {\n            required: false,\n            type: Boolean,\n            default: false\n        },\n\n        selectable: {\n            required: false,\n            type: Boolean,\n            default: true\n        },\n\n        gridColumnWidth: {\n            required: false,\n            type: Number,\n            default: 200,\n            validator(value) {\n                return value > 0;\n            }\n        }\n    },\n\n    data() {\n        return {\n            selection: [],\n            listSelectionStartItem: null\n        };\n    },\n\n    computed: {\n        dragSelectorClass() {\n            return 'sw-media-grid-item';\n        },\n\n        mediaColumnDefinitions() {\n            let columnDefinition;\n\n            switch (this.previewType) {\n            case 'media-grid-preview-as-list':\n                columnDefinition = '100%';\n                break;\n\n            case 'media-grid-preview-as-grid':\n            default:\n                columnDefinition = `repeat(auto-fit, ${this.gridColumnWidth}px)`;\n            }\n\n            return {\n                'grid-template-columns': columnDefinition\n            };\n        },\n\n        showSelectedIndicator() {\n            return this.selectable && this.selection.length > 0;\n        },\n\n        containerOptions() {\n            return {\n                previewType: this.previewType,\n                selectionInProgress: this.showSelectedIndicator,\n                previewSize: this.gridColumnWidth,\n                selectable: this.selectable,\n                editable: this.editable\n            };\n        }\n    },\n\n    watch: {\n        items() {\n            this.clearSelection();\n        }\n    },\n\n    methods: {\n        getSelection() {\n            return this.selection;\n        },\n\n        clearSelection() {\n            this.selection = [];\n        },\n\n        emitSelectionCleared(originalDomEvent) {\n            this.clearSelection();\n            this.$emit('sw-media-grid-selection-clear', {\n                originalDomEvent\n            });\n        },\n\n        isItemSelected(item) {\n            if (this.selection.length === 0) {\n                return false;\n            }\n            return this.findIndexInSelection(item) > -1;\n        },\n\n        handleClick({ originalDomEvent, item }) {\n            if (this.selection.length > 0 || originalDomEvent.ctrlKey || originalDomEvent.shiftKey) {\n                this.handleSelection({ originalDomEvent, item });\n                return;\n            }\n\n            this.$emit('sw-media-grid-media-item-show-details', {\n                originalDomEvent,\n                item\n            });\n        },\n\n        handleSelection({ originalDomEvent, item }) {\n            if (originalDomEvent.shiftKey) {\n                this.listSelect({ originalDomEvent, item });\n                return;\n            }\n\n            this.addToSelection({ originalDomEvent, item });\n        },\n\n        singleSelect({ originalDomEvent, item }) {\n            this.emitSelectionCleared();\n            this.addToSelection({ originalDomEvent, item });\n        },\n\n        addToSelection({ originalDomEvent, item }) {\n            if (this.selectable) {\n                if (!this.isItemSelected(item)) {\n                    this.selection.push(item);\n                }\n            }\n\n            this.$emit('sw-media-grid-item-selection-add', {\n                originalDomEvent,\n                item\n            });\n        },\n\n        listSelect({ originalDomEvent, item }) {\n            if (this.listSelectionStartItem === item) {\n                return;\n            }\n\n            if (!this.listSelectionStartItem) {\n                this.listSelectionStartItem = item;\n                this.addToSelection({ originalDomEvent, item });\n                return;\n            }\n\n            const result = this.getSelectedIndexes(this.listSelectionStartItem, item);\n\n            for (let i = result.startIndex; i <= result.endIndex; i += 1) {\n                const listItem = this.items[i];\n                this.addToSelection({ originalDomEvent, item: listItem });\n            }\n            this.listSelectionStartItem = null;\n        },\n\n        getSelectedIndexes(startItem, endItem) {\n            let startIndex = this.findIndexInItems(startItem);\n            let endIndex = this.findIndexInItems(endItem);\n            if (endIndex < startIndex) {\n                const tmp = endIndex;\n                endIndex = startIndex;\n                startIndex = tmp;\n            }\n\n            return { endIndex, startIndex };\n        },\n\n        findIndexInSelection(item) {\n            return this.selection.findIndex((element) => {\n                return (element[this.idField] === item[this.idField]);\n            });\n        },\n\n        findIndexInItems(item) {\n            return this.items.findIndex((element) => {\n                return (element[this.idField] === item[this.idField]);\n            });\n        },\n\n        removeFromSelection({ originalDomEvent, item }) {\n            this.selection = this.selection.filter((element) => {\n                return !(element[this.idField] === item[this.idField]);\n            });\n\n            this.$emit('sw-media-grid-item-selection-remove', {\n                originalDomEvent,\n                item\n            });\n        },\n\n        onDragSelection({ originalDomEvent, item }) {\n            item.selectItem(originalDomEvent);\n        },\n\n        onDragDeselection({ originalDomEvent, item }) {\n            item.removeFromSelection(originalDomEvent);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-grid-media-item.html.twig';\nimport domUtils from '../../../../core/service/utils/dom.utils';\n\nComponent.extend('sw-media-grid-media-item', 'sw-media-grid-item', {\n    template,\n\n    props: {\n        item: {\n            required: true,\n            type: Object,\n            validator(value) {\n                return value.type !== undefined && value.type === 'media';\n            }\n        }\n    },\n\n    data() {\n        return {\n            fromBlur: false\n        };\n    },\n\n    computed: {\n        gridItemListeners() {\n            return {\n                click: this.doMainAction,\n                dblclick: this.startInlineEdit\n            };\n        }\n    },\n\n    methods: {\n        doMainAction(originalDomEvent) {\n            if (this.containerOptions.editable) {\n                if (!this.$refs.inputItemName.disabled) {\n                    return;\n                }\n\n                if (this.fromBlur) {\n                    this.fromBlur = false;\n                    return;\n                }\n            }\n\n            this.emitClickedEvent(originalDomEvent);\n        },\n\n        startInlineEdit() {\n            if (this.containerOptions.editable) {\n                const input = this.$refs.inputItemName;\n\n                this.selectItem();\n                input.disabled = false;\n                input.focus();\n            }\n        },\n\n        cancelInlineEditFromBlur() {\n            this.fromBlur = true;\n            this.cancelInlineEdit();\n        },\n\n        cancelInlineEdit() {\n            this.$refs.inputItemName.value = this.item.name;\n            this.$refs.inputItemName.disabled = true;\n        },\n\n        emitNameChanged(originalDomEvent) {\n            this.$emit('sw-media-grid-media-item-change-name', {\n                originalDomEvent,\n                item: this.item,\n                newName: this.$refs.inputItemName.value\n            });\n        },\n\n        showItemDetails(originalDomEvent) {\n            this.$emit('sw-media-grid-media-item-show-details', {\n                originalDomEvent,\n                item: this.item\n            });\n        },\n\n        copyItemLink() {\n            domUtils.copyToClipboard(this.item.extensions.links.url);\n        },\n\n        deleteItem(originalDomEvent) {\n            this.$emit('sw-media-grid-media-item-delete', {\n                originalDomEvent,\n                item: this.item\n            });\n        },\n\n        replaceItem(originalDomEvent) {\n            this.$emit('sw-media-grid-media-item-replace', {\n                originalDomEvent,\n                item: this.item\n            });\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-preview.html.twig';\nimport './sw-media-preview.less';\n\nComponent.register('sw-media-preview', {\n    template,\n\n    props: {\n        item: {\n            required: true,\n            type: Object\n\n        },\n\n        playable: {\n            type: Boolean,\n            required: false,\n            default: false\n        },\n\n        autoplay: {\n            type: Boolean,\n            required: false,\n            default: false\n        }\n    },\n\n    computed: {\n        checkForFileTypeImage() {\n            const filePath = this.item.mimeType;\n            const regEx = /^image\\/+/;\n\n            return (regEx.test(filePath));\n        },\n\n        checkForFileTypeVideo() {\n            const filePath = this.item.mimeType;\n            const regEx = /^video\\/+/;\n\n            return (regEx.test(filePath) && this.isPlayable());\n        },\n\n        checkForFileTypeAudio() {\n            const filePath = this.item.mimeType;\n            const regEx = /^audio\\/+/;\n\n            return (regEx.test(filePath));\n        },\n\n        checkForInMemoryFile() {\n            return this.item.mimeType === 'in-memory-file';\n        },\n\n        checkForMimeType() {\n            const fileExtensions = {\n                'application/pdf': '.pdf',\n                'application/msword': '.doc',\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document': '.docx',\n                'application/vnd.ms-excel': '.xls',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': '.xlsx',\n                'application/vnd.ms-powerpoint': '.ppt',\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation': '.pptx',\n                'application/svg': '.svg'\n            };\n\n            return fileExtensions[this.item.mimeType] || 'unknown';\n        },\n\n        placeholderIcon() {\n            const regEx = /^video\\/+/;\n\n            if (regEx.test(this.item.mimeType)) {\n                // show movie placeholder image if video format is not playable\n                return 'file-thumbnail-mov';\n            }\n\n            const fileExtensions = {\n                'application/pdf': 'file-thumbnail-pdf',\n                'application/msword': 'file-thumbnail-doc',\n                'application/vnd.openxmlformats-officedocument.wordprocessingml.document': 'file-thumbnail-doc',\n                'application/vnd.ms-excel': 'file-thumbnail-xls',\n                'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet': 'file-thumbnail-xls',\n                'application/svg': 'file-thumbnail-svg',\n                'application/vnd.ms-powerpoint': 'file-thumbnail-ppt',\n                'application/vnd.openxmlformats-officedocument.presentationml.presentation': 'file-thumbnail-ppt',\n                'application/svg+xml': 'file-thumbnail-svg'\n            };\n\n            return fileExtensions[this.item.mimeType] || 'file-thumbnail-normal';\n        },\n\n        imageURLFromItem() {\n            return `${this.item.url}?${Date.now()}`;\n        }\n    },\n\n    methods: {\n        isPlayable() {\n            const playableFormats = {\n                'video/mp4': true,\n                'video/webm': true\n            };\n\n            return playableFormats[this.item.mimeType] || false;\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-upload-container.html.twig';\nimport './sw-media-upload-container.less';\n\nComponent.register('sw-media-upload-container', {\n    template,\n\n    props: {\n        multipleFiles: {\n            type: Boolean,\n            required: false,\n            default: true\n        },\n\n        title: {\n            type: String,\n            required: false\n        }\n    },\n\n    data() {\n        return {\n            showUrlModal: false,\n            files: [],\n            urls: [],\n            mediaEntities: []\n        };\n    },\n\n    methods: {\n        resetArrays() {\n            this.files = [];\n            this.urls = [];\n            this.mediaEntities = [];\n        },\n\n        addFile() {\n            this.$refs.fileInput.click();\n        },\n\n        emitOpenMedia(originalDomEvent) {\n            this.$emit('sw-media-upload-container-open-media-event', {\n                originalDomEvent\n            });\n        },\n\n        emitAddedData(originalDomEvent) {\n            this.$emit('sw-media-upload-container-publish-selection', {\n                originalDomEvent,\n                files: this.files,\n                urls: this.urls,\n                mediaEntities: this.mediaItems\n            });\n        },\n\n        handleFileUpload(event) {\n            if (!this.multipleFiles) {\n                this.resetArrays();\n            }\n\n            this.files = Array.from(this.$refs.fileInput.files);\n            this.emitAddedData(event);\n        },\n\n        openUrlDialog() {\n            this.showUrlDialog(true);\n        },\n\n        closeUrlDialog() {\n            this.showUrlDialog(false);\n        },\n\n        showUrlDialog(showUrlDialog) {\n            this.showUrlModal = showUrlDialog;\n        },\n\n        uploadFromUrl({ originalDomEvent, url }) {\n            if (!this.multipleFiles) {\n                this.resetArrays();\n            }\n\n            this.urls.push(url);\n            this.emitAddedData(originalDomEvent);\n        }\n    }\n});\n","import { Component } from 'src/core/shopware';\nimport template from './sw-media-upload-url-modal.tml.twig';\n\nComponent.register('sw-media-upload-url-modal', {\n    template,\n\n    data() {\n        return {\n            url: ''\n        };\n    },\n\n    methods: {\n        emitUrl(originalDomEvent) {\n            this.$emit('sw-media-upload-url-modal-submit', {\n                originalDomEvent,\n                url: this.url\n            });\n            this.closeModal();\n        },\n\n        closeModal() {\n            this.$emit('closeModal');\n        }\n    }\n});\n"],"sourceRoot":""}